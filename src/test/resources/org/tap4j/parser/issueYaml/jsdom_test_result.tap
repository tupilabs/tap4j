TAP version 13
# tests - attrcreatedocumentfragment
ok 1 attrCreateDocumentFragmentAssert
# tests - attrcreatetextnode
ok 2 value
ok 3 nodeValue
# tests - attrcreatetextnode2
ok 4 value
ok 5 nodeValue
# tests - attreffectivevalue
ok 6 attrEffectiveValueAssert
# tests - attrname
ok 7 nodeName
ok 8 name
# tests - attrnextsiblingnull
ok 9 attrNextSiblingNullAssert
# tests - attrparentnodenull
ok 10 attrParentNodeNullAssert
# tests - attrprevioussiblingnull
ok 11 attrPreviousSiblingNullAssert
# tests - attrspecifiedvalue
ok 12 domesticSpecified
# tests - attrspecifiedvaluechanged
ok 13 streetSpecified
# tests - characterdataappenddata
ok 14 characterdataAppendDataAssert
# tests - characterdataappenddatagetdata
ok 15 characterdataAppendDataGetDataAssert
# tests - characterdatadeletedatabegining
ok 16 characterdataDeleteDataBeginingAssert
# tests - characterdatadeletedataend
ok 17 characterdataDeleteDataEndAssert
# tests - characterdatadeletedataexceedslength
ok 18 characterdataDeleteDataExceedsLengthAssert
# tests - characterdatadeletedatagetlengthanddata
ok 19 data
ok 20 length
# tests - characterdatadeletedatamiddle
ok 21 characterdataDeleteDataMiddleAssert
# tests - characterdatagetdata
ok 22 characterdataGetDataAssert
# tests - characterdatagetlength
ok 23 characterdataGetLengthAssert
# tests - characterdataindexsizeerrdeletedatacountnegative
ok 24 (unnamed assert)
# tests - characterdataindexsizeerrdeletedataoffsetgreater
ok 25 throw_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrdeletedataoffsetnegative
ok 26 throws_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrinsertdataoffsetgreater
ok 27 throw_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrinsertdataoffsetnegative
ok 28 throws_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrreplacedatacountnegative
ok 29 (unnamed assert)
# tests - characterdataindexsizeerrreplacedataoffsetgreater
ok 30 throw_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrreplacedataoffsetnegative
ok 31 throws_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrsubstringcountnegative
ok 32 (unnamed assert)
# tests - characterdataindexsizeerrsubstringnegativeoffset
ok 33 throws_INDEX_SIZE_ERR
# tests - characterdataindexsizeerrsubstringoffsetgreater
ok 34 throw_INDEX_SIZE_ERR
# tests - characterdatainsertdatabeginning
ok 35 characterdataInsertDataBeginningAssert
# tests - characterdatainsertdataend
ok 36 characterdataInsertDataEndAssert
# tests - characterdatainsertdatamiddle
ok 37 characterdataInsertDataMiddleAssert
# tests - characterdatareplacedatabegining
ok 38 characterdataReplaceDataBeginingAssert
# tests - characterdatareplacedataend
ok 39 characterdataReplaceDataEndAssert
# tests - characterdatareplacedataexceedslengthofarg
ok 40 characterdataReplaceDataExceedsLengthOfArgAssert
# tests - characterdatareplacedataexceedslengthofdata
ok 41 characterdataReplaceDataExceedsLengthOfDataAssert
# tests - characterdatareplacedatamiddle
ok 42 characterdataReplaceDataMiddleAssert
# tests - characterdatasetnodevalue
ok 43 data
ok 44 value
# tests - characterdatasubstringexceedsvalue
ok 45 characterdataSubStringExceedsValueAssert
# tests - characterdatasubstringvalue
ok 46 characterdataSubStringValueAssert
# tests - commentgetcomment
ok 47 nodeName
ok 48 nodeValue
ok 49 commentCount
# tests - documentcreateattribute
ok 50 value
ok 51 name
# tests - documentcreatecomment
ok 52 value
ok 53 name
ok 54 type
# tests - documentcreatedocumentfragment
ok 55 length
ok 56 name
ok 57 type
ok 58 value
# tests - documentcreateelement
ok 59 name
ok 60 type
ok 61 valueInitiallyNull
# tests - documentcreateelementcasesensitive
ok 62 attrib1
ok 63 attrib2
# tests - documentcreateprocessinginstruction
ok 64 createdPINotNull
ok 65 name
ok 66 value
ok 67 type
# tests - documentcreatetextnode
ok 68 value
ok 69 name
ok 70 type
# tests - documentgetdoctype
ok 71 docTypeNotNull
ok 72 doctypeName
ok 73 initiallyNull
ok 74 (unnamed assert)
# tests - documentgetdoctypenodtd
ok 75 documentGetDocTypeNoDTDAssert
# tests - documentgetelementsbytagnamelength
ok 76 documentGetElementsByTagNameLengthAssert
# tests - documentgetelementsbytagnametotallength
ok 77 documentGetElementsByTagNameTotalLengthAssert
# tests - documentgetelementsbytagnamevalue
ok 78 documentGetElementsByTagNameValueAssert
# tests - documentgetimplementation
ok 79 documentGetImplementationAssert
# tests - documentgetrootnode
ok 80 documentGetRootNodeAssert
# tests - documentinvalidcharacterexceptioncreateattribute
ok 81 throw_INVALID_CHARACTER_ERR
# tests - documentinvalidcharacterexceptioncreateelement
ok 82 throw_INVALID_CHARACTER_ERR
# tests - documentinvalidcharacterexceptioncreatepi
ok 83 throw_INVALID_CHARACTER_ERR
# tests - documentinvalidcharacterexceptioncreatepi1
ok 84 throw_INVALID_CHARACTER_ERR
# tests - documenttypegetdoctype
ok 85 docTypeNotNull
ok 86 documenttypeGetDocTypeAssert
# tests - domimplementationfeaturenoversion
ok 87 hasXMLEmpty
# tests - domimplementationfeaturenull
ok 88 hasXMLnull
# tests - domimplementationfeaturexml
ok 89 hasXML1
# tests - elementaddnewattribute
ok 90 elementAddNewAttributeAssert
# tests - elementassociatedattribute
ok 91 domesticSpecified
# tests - elementchangeattributevalue
ok 92 elementChangeAttributeValueAssert
# tests - elementcreatenewattribute
ok 93 old_attr_doesnt_exist
ok 94 new_district_accessible
ok 95 attr_value
# tests - elementgetattributenode
ok 96 elementGetAttributeNodeAssert
# tests - elementgetattributenodenull
ok 97 elementGetAttributeNodeNullAssert
# tests - elementgetelementsbytagname
ok 98 elementGetElementsByTagNameAssert
# tests - elementgetelementsbytagnameaccessnodelist
ok 99 nodename
ok 100 emp0004
# tests - elementgetelementsbytagnamenomatch
ok 101 elementGetElementsByTagNameNoMatchNoMatchAssert
# tests - elementgetelementsbytagnamespecialvalue
ok 102 tagNames
# tests - elementgettagname
ok 103 elementGetTagNameAssert
# tests - elementinuseattributeerr
ok 104 throw_INUSE_ATTRIBUTE_ERR
# tests - elementinvalidcharacterexception
ok 105 throw_INVALID_CHARACTER_ERR
# tests - elementnormalize
ok 106 elementNormalizeAssert
# tests - elementnotfounderr
ok 107 throw_NOT_FOUND_ERR
# tests - elementremoveattributeaftercreate
ok 108 elementRemoveAttributeAfterCreateAssert
# tests - elementremoveattributenode
ok 109 elementRemoveAttributeNodeAssert
# tests - elementreplaceattributewithself
ok 110 replacedAttr
# tests - elementreplaceexistingattribute
ok 111 elementReplaceExistingAttributeAssert
# tests - elementreplaceexistingattributegevalue
ok 112 streetNo
# tests - elementretrieveattrvalue
ok 113 attrValue
# tests - elementretrievetagname
ok 114 nodename
ok 115 tagname
# tests - elementsetattributenodenull
ok 116 elementSetAttributeNodeNullAssert
# tests - hc_attrcreatedocumentfragment
ok 117 hasLangAttr
# tests - hc_attrcreatetextnode
ok 118 value
ok 119 nodeValue
# tests - hc_attrcreatetextnode2
ok 120 value
ok 121 nodeValue
# tests - hc_attreffectivevalue
ok 122 attrEffectiveValueAssert
# tests - hc_attrname
ok 123 attribute nodeName
ok 124 attribute name
# tests - hc_attrspecifiedvalue
ok 125 acronymTitleSpecified
# tests - hc_attrspecifiedvaluechanged
ok 126 acronymClassSpecified
# tests - hc_characterdataappenddata
ok 127 characterdataAppendDataAssert
# tests - hc_characterdataappenddatagetdata
ok 128 characterdataAppendDataGetDataAssert
# tests - hc_characterdatadeletedatabegining
ok 129 data
# tests - hc_characterdatadeletedataend
ok 130 characterdataDeleteDataEndAssert
# tests - hc_characterdatadeletedataexceedslength
ok 131 characterdataDeleteDataExceedsLengthAssert
# tests - hc_characterdatadeletedatagetlengthanddata
ok 132 data
ok 133 length
# tests - hc_characterdatadeletedatamiddle
ok 134 characterdataDeleteDataMiddleAssert
# tests - hc_characterdatagetdata
ok 135 characterdataGetDataAssert
# tests - hc_characterdatagetlength
ok 136 characterdataGetLengthAssert
# tests - hc_characterdataindexsizeerrdeletedatacountnegative
ok 137 (unnamed assert)
# tests - hc_characterdataindexsizeerrdeletedataoffsetgreater
ok 138 throw_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrdeletedataoffsetnegative
ok 139 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrinsertdataoffsetgreater
ok 140 throw_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrinsertdataoffsetnegative
ok 141 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrreplacedatacountnegative
ok 142 (unnamed assert)
# tests - hc_characterdataindexsizeerrreplacedataoffsetgreater
ok 143 throw_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrreplacedataoffsetnegative
ok 144 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrsubstringcountnegative
ok 145 (unnamed assert)
# tests - hc_characterdataindexsizeerrsubstringnegativeoffset
ok 146 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrsubstringoffsetgreater
ok 147 throw_INDEX_SIZE_ERR
# tests - hc_characterdatainsertdatabeginning
ok 148 characterdataInsertDataBeginningAssert
# tests - hc_characterdatainsertdataend
ok 149 characterdataInsertDataEndAssert
# tests - hc_characterdatainsertdatamiddle
ok 150 characterdataInsertDataMiddleAssert
# tests - hc_characterdatareplacedatabegining
ok 151 characterdataReplaceDataBeginingAssert
# tests - hc_characterdatareplacedataend
ok 152 characterdataReplaceDataEndAssert
# tests - hc_characterdatareplacedataexceedslengthofarg
ok 153 characterdataReplaceDataExceedsLengthOfArgAssert
# tests - hc_characterdatareplacedataexceedslengthofdata
ok 154 characterdataReplaceDataExceedsLengthOfDataAssert
# tests - hc_characterdatareplacedatamiddle
ok 155 characterdataReplaceDataMiddleAssert
# tests - hc_characterdatasetnodevalue
ok 156 data
ok 157 value
# tests - hc_characterdatasubstringexceedsvalue
ok 158 characterdataSubStringExceedsValueAssert
# tests - hc_characterdatasubstringvalue
ok 159 characterdataSubStringValueAssert
# tests - hc_commentgetcomment
ok 160 nodeName
ok 161 nodeValue
ok 162 attributes
ok 163 atMostOneComment
# tests - hc_documentcreateattribute
ok 164 value
ok 165 attribute name
# tests - hc_documentcreatecomment
ok 166 value
ok 167 strong
ok 168 type
# tests - hc_documentcreatedocumentfragment
ok 169 length
ok 170 strong
ok 171 type
ok 172 value
# tests - hc_documentcreateelement
ok 173 element strong
ok 174 type
ok 175 valueInitiallyNull
# tests - hc_documentcreateelementcasesensitive
ok 176 attrib1
ok 177 attrib2
ok 178 element nodeName1
ok 179 element nodeName2
# tests - hc_documentcreatetextnode
ok 180 value
ok 181 strong
ok 182 type
# tests - hc_documentgetdoctype
ok 183 docTypeNotNull
ok 184 nodeValue
ok 185 attributes
# tests - hc_documentgetelementsbytagnamelength
ok 186 documentGetElementsByTagNameLengthAssert
# tests - hc_documentgetelementsbytagnametotallength
ok 187 element tagNames
# tests - hc_documentgetelementsbytagnamevalue
ok 188 documentGetElementsByTagNameValueAssert
# tests - hc_documentgetimplementation
ok 189 supports_XML_1.0
# tests - hc_documentgetrootnode
ok 190 element docElemName
# tests - hc_documentinvalidcharacterexceptioncreateattribute
ok 191 throw_INVALID_CHARACTER_ERR
# tests - hc_documentinvalidcharacterexceptioncreateattribute1
ok 192 throw_INVALID_CHARACTER_ERR
# tests - hc_documentinvalidcharacterexceptioncreateelement
ok 193 throw_INVALID_CHARACTER_ERR
# tests - hc_documentinvalidcharacterexceptioncreateelement1
ok 194 throw_INVALID_CHARACTER_ERR
# tests - hc_domimplementationfeaturenoversion
ok 195 hasFeatureBlank
# tests - hc_domimplementationfeaturenull
ok 196 supports_XML_null
# tests - hc_domimplementationfeaturexml
ok 197 supports_xml_1.0
# tests - hc_elementaddnewattribute
ok 198 attrValue
# tests - hc_elementassociatedattribute
ok 199 acronymTitleSpecified
# tests - hc_elementchangeattributevalue
ok 200 elementChangeAttributeValueAssert
# tests - hc_elementcreatenewattribute
ok 201 old_attr_doesnt_exist
ok 202 new_district_accessible
ok 203 attr_value
# tests - hc_elementgetattributenode
ok 204 attribute nodeName
# tests - hc_elementgetattributenodenull
ok 205 elementGetAttributeNodeNullAssert
# tests - hc_elementgetelementempty
ok 206 elementGetElementEmptyAssert
# tests - hc_elementgetelementsbytagname
ok 207 elementGetElementsByTagNameAssert
# tests - hc_elementgetelementsbytagnameaccessnodelist
ok 208 element childName
ok 209 employeeID
# tests - hc_elementgetelementsbytagnamenomatch
ok 210 elementGetElementsByTagNameNoMatchNoMatchAssert
# tests - hc_elementgetelementsbytagnamespecialvalue
ok 211 element tagNames
# tests - hc_elementgettagname
ok 212 element tagname
# tests - hc_elementinuseattributeerr
ok 213 throw_INUSE_ATTRIBUTE_ERR
# tests - hc_elementinvalidcharacterexception
ok 214 throw_INVALID_CHARACTER_ERR
# tests - hc_elementinvalidcharacterexception1
ok 215 throw_INVALID_CHARACTER_ERR
# tests - hc_elementnormalize
ok 216 elementNormalizeAssert
# tests - hc_elementnotfounderr
ok 217 throw_NOT_FOUND_ERR
# tests - hc_elementremoveattribute
ok 218 attrValue
# tests - hc_elementremoveattributeaftercreate
ok 219 removed_item_null
# tests - hc_elementremoveattributenode
ok 220 removedAttrNotNull
ok 221 elementRemoveAttributeNodeAssert
# tests - hc_elementreplaceattributewithself
ok 222 replacedAttr
# tests - hc_elementreplaceexistingattribute
ok 223 replacedValue
# tests - hc_elementreplaceexistingattributegevalue
ok 224 previousAttrNotNull
ok 225 previousAttrValue
# tests - hc_elementretrieveattrvalue
ok 226 attrValue
# tests - hc_elementretrievetagname
ok 227 element nodename
ok 228 element tagname
# tests - hc_elementsetattributenodenull
ok 229 elementSetAttributeNodeNullAssert
# tests - hc_namednodemapgetnameditem
ok 230 attribute nodeName
# tests - hc_namednodemapinuseattributeerr
ok 231 throw_INUSE_ATTRIBUTE_ERR
# tests - hc_namednodemapnotfounderr
ok 232 throw_NOT_FOUND_ERR
# tests - hc_namednodemapremovenameditem
ok 233 isnull
# tests - hc_namednodemapreturnattrnode
ok 234 attribute nodeName
ok 235 attribute name
# tests - hc_namednodemapreturnnull
ok 236 langAttrNull
# tests - hc_namednodemapsetnameditem
ok 237 attribute nodeName
# tests - hc_namednodemapsetnameditemreturnvalue
ok 238 previousAttrNotNull
ok 239 previousAttrValue
# tests - hc_namednodemapsetnameditemthatexists
ok 240 namednodemapSetNamedItemThatExistsAssert
# tests - hc_namednodemapsetnameditemwithnewvalue
ok 241 prevValueNull
# tests - hc_nodeappendchild
ok 242 element nodeName
# tests - hc_nodeappendchildchildexists
ok 243 element liveByTagName
ok 244 element refreshedChildNodes
# tests - hc_nodeappendchilddocfragment
ok 245 element nodeNames
# tests - hc_nodeappendchildgetnodename
ok 246 element nodeName
# tests - hc_nodeappendchildnodeancestor
ok 247 throw_HIERARCHY_REQUEST_ERR
# tests - hc_nodeattributenodeattribute
ok 248 nodeAttributeNodeAttributeAssert1
# tests - hc_nodeattributenodename
ok 249 attribute nodeName
# tests - hc_nodeattributenodevalue
ok 250 nodeValue
# tests - hc_nodechildnodes
ok 251 textNodeType
ok 252 textNodeType
ok 253 textNodeType
ok 254 textNodeType
ok 255 textNodeType
ok 256 textNodeType
ok 257 textNodeType
ok 258 element elementNames
# tests - hc_nodechildnodesappendchild
ok 259 textNodeType
ok 260 textNodeType
ok 261 textNodeType
ok 262 textNodeType
ok 263 textNodeType
ok 264 textNodeType
ok 265 textNodeType
ok 266 element childElements
# tests - hc_nodechildnodesempty
ok 267 length_zero
# tests - hc_nodecloneattributescopied
ok 268 names
# tests - hc_nodeclonefalsenocopytext
ok 269 nodeCloneFalseNoCopyTextAssert1
# tests - hc_nodeclonegetparentnull
ok 270 nodeCloneGetParentNullAssert1
# tests - hc_nodeclonenodefalse
ok 271 element strong
ok 272 length
# tests - hc_nodeclonenodetrue
ok 273 clone
# tests - hc_nodeclonetruecopytext
ok 274 cloneContainsText
# tests - hc_nodecommentnodeattributes
ok 275 existingCommentAttributesNull
ok 276 createdCommentAttributesNull
# tests - hc_nodecommentnodename
ok 277 existingNodeName
ok 278 createdNodeName
# tests - hc_nodecommentnodetype
ok 279 existingCommentNodeType
ok 280 createdCommentNodeType
# tests - hc_nodecommentnodevalue
ok 281 value
ok 282 createdCommentNodeValue
# tests - hc_nodedocumentfragmentnodename
ok 283 nodeDocumentFragmentNodeNameAssert1
# tests - hc_nodedocumentfragmentnodetype
ok 284 nodeDocumentFragmentNodeTypeAssert1
# tests - hc_nodedocumentfragmentnodevalue
ok 285 attributesNull
ok 286 initiallyNull
# tests - hc_nodedocumentnodeattribute
ok 287 doc_attributes_is_null
# tests - hc_nodedocumentnodename
ok 288 documentNodeName
# tests - hc_nodedocumentnodetype
ok 289 nodeDocumentNodeTypeAssert1
# tests - hc_nodedocumentnodevalue
ok 290 documentNodeValue
# tests - hc_nodeelementnodename
ok 291 element nodeName
# tests - hc_nodeelementnodetype
ok 292 nodeElementNodeTypeAssert1
# tests - hc_nodeelementnodevalue
ok 293 elementNodeValue
# tests - hc_nodegetfirstchild
ok 294 firstChild_w_whitespace
# tests - hc_nodegetfirstchildnull
ok 295 nullChild
# tests - hc_nodegetlastchild
ok 296 whitespace
# tests - hc_nodegetlastchildnull
ok 297 nullChild
# tests - hc_nodegetnextsibling
ok 298 whitespace
# tests - hc_nodegetnextsiblingnull
ok 299 nodeGetNextSiblingNullAssert1
# tests - hc_nodegetownerdocument
ok 300 element ownerDocElemTagName
# tests - hc_nodegetownerdocumentnull
ok 301 nodeGetOwnerDocumentNullAssert1
# tests - hc_nodegetprevioussibling
ok 302 whitespace
# tests - hc_nodegetprevioussiblingnull
ok 303 nodeGetPreviousSiblingNullAssert1
# tests - hc_nodehaschildnodes
ok 304 nodeHasChildAssert1
# tests - hc_nodehaschildnodesfalse
ok 305 hasChild
# tests - hc_nodeinsertbefore
ok 306 element nodeNames
# tests - hc_nodeinsertbeforedocfragment
ok 307 element childName3
ok 308 element childName4
# tests - hc_nodeinsertbeforenewchildexists
ok 309 element childNames
# tests - hc_nodeinsertbeforenodeancestor
ok 310 throw_HIERARCHY_REQUEST_ERR
# tests - hc_nodeinsertbeforenodename
ok 311 element nodeName
# tests - hc_nodeinsertbeforerefchildnonexistent
ok 312 throw_NOT_FOUND_ERR
# tests - hc_nodeinsertbeforerefchildequal
# tests - hc_nodeinsertbeforerefchildnull
ok 313 element nodeName
# tests - hc_nodelistindexequalzero
ok 314 childName_w_whitespace
# tests - hc_nodelistindexgetlength
ok 315 length_w_space
# tests - hc_nodelistindexgetlengthofemptylist
ok 316 length
# tests - hc_nodelistindexnotzero
ok 317 element childName_strong
# tests - hc_nodelistreturnfirstitem
ok 318 nodeName_w_space
# tests - hc_nodelistreturnlastitem
ok 319 lastNodeName_w_whitespace
# tests - hc_nodelisttraverselist
ok 320 textNodeType
ok 321 textNodeName
ok 322 textNodeType
ok 323 textNodeName
ok 324 textNodeType
ok 325 textNodeName
ok 326 textNodeType
ok 327 textNodeName
ok 328 textNodeType
ok 329 textNodeName
ok 330 textNodeType
ok 331 textNodeName
ok 332 textNodeType
ok 333 textNodeName
ok 334 element nodeNames
# tests - hc_nodeparentnode
ok 335 element parentNodeName
# tests - hc_nodeparentnodenull
ok 336 parentNode
# tests - hc_noderemovechild
ok 337 parentNodeNull
# tests - hc_noderemovechildgetnodename
ok 338 notnull
ok 339 nodeName
# tests - hc_noderemovechildnode
ok 340 element removedName
ok 341 textNodeType
ok 342 textNodeName
ok 343 textNodeType
ok 344 textNodeName
ok 345 textNodeType
ok 346 textNodeName
ok 347 textNodeType
ok 348 textNodeName
ok 349 textNodeType
ok 350 textNodeName
ok 351 textNodeType
ok 352 textNodeName
ok 353 textNodeType
ok 354 textNodeName
ok 355 element childNames
# tests - hc_noderemovechildoldchildnonexistent
ok 356 throw_NOT_FOUND_ERR
# tests - hc_nodereplacechild
ok 357 element nodeName
# tests - hc_nodereplacechildnewchildexists
ok 358 return_value_same
ok 359 element childNames
# tests - hc_nodereplacechildnodeancestor
ok 360 throw_HIERARCHY_REQUEST_ERR
# tests - hc_nodereplacechildnodename
ok 361 element replacedNodeName
# tests - hc_nodereplacechildoldchildnonexistent
ok 362 throw_NOT_FOUND_ERR
# tests - hc_nodetextnodeattribute
ok 363 text_attributes_is_null
# tests - hc_nodetextnodename
ok 364 textNodeName
# tests - hc_nodetextnodetype
ok 365 nodeTextNodeTypeAssert1
# tests - hc_nodetextnodevalue
ok 366 textNodeValue
# tests - hc_nodevalue01
ok 367 initiallyNull
ok 368 nullAfterAttemptedChange
# tests - hc_nodevalue02
ok 369 initial
ok 370 afterChange
# tests - hc_nodevalue04
ok 371 docTypeNotNull
ok 372 initiallyNull
ok 373 nullAfterAttemptedChange
# tests - hc_nodevalue05
ok 374 initiallyNull
ok 375 nullAfterAttemptedChange
# tests - hc_nodevalue06
ok 376 initiallyNull
ok 377 nullAfterAttemptedChange
# tests - hc_textindexsizeerrnegativeoffset
ok 378 throws_INDEX_SIZE_ERR
# tests - hc_textindexsizeerroffsetoutofbounds
ok 379 throw_INDEX_SIZE_ERR
# tests - hc_textsplittextfour
ok 380 textSplitTextFourAssert
# tests - hc_textsplittextone
ok 381 textSplitTextOneAssert
# tests - hc_textsplittextthree
ok 382 textSplitTextThreeAssert
# tests - hc_textsplittexttwo
ok 383 textSplitTextTwoAssert
# tests - hc_textwithnomarkup
ok 384 textWithNoMarkupAssert
# tests - namednodemapchildnoderange
ok 385 length
# tests - namednodemapgetnameditem
ok 386 namednodemapGetNamedItemAssert
# tests - namednodemapinuseattributeerr
ok 387 throw_INUSE_ATTRIBUTE_ERR
# tests - namednodemapnotfounderr
ok 388 throw_NOT_FOUND_ERR
# tests - namednodemapnumberofnodes
ok 389 length
# tests - namednodemapremovenameditemreturnnodevalue
ok 390 namednodemapRemoveNamedItemReturnNodeValueAssert
# tests - namednodemapreturnattrnode
ok 391 nodeName
ok 392 attrName
# tests - namednodemapreturnfirstitem
ok 393 (unnamed assert)
# tests - namednodemapreturnlastitem
ok 394 (unnamed assert)
# tests - namednodemapreturnnull
ok 395 namednodemapReturnNullAssert
# tests - namednodemapsetnameditem
ok 396 namednodemapSetNamedItemAssert
# tests - namednodemapsetnameditemreturnvalue
ok 397 returnedNodeValue
# tests - namednodemapsetnameditemthatexists
ok 398 streetValue
# tests - namednodemapsetnameditemwithnewvalue
ok 399 returnedNodeNull
# tests - nodeappendchild
ok 400 nodeAppendChildAssert1
# tests - nodeappendchildchildexists
ok 401 assert1
ok 402 assert2
# tests - nodeappendchilddocfragment
ok 403 elementNames
# tests - nodeappendchildgetnodename
ok 404 nodeAppendChildGetNodeNameAssert1
# tests - nodeappendchildnodeancestor
ok 405 throw_HIERARCHY_REQUEST_ERR
# tests - nodeattributenodeattribute
ok 406 nodeAttributeNodeAttributeAssert1
# tests - nodeattributenodename
ok 407 nodeAttributeNodeNameAssert1
# tests - nodeattributenodevalue
ok 408 nodeAttributeNodeValueAssert1
# tests - nodechildnodes
ok 409 elementNames
# tests - nodechildnodesappendchild
ok 410 childNodeLength
# tests - nodechildnodesempty
ok 411 nodeChildNodesEmptyAssert1
# tests - nodecloneattributescopied
ok 412 nodeCloneAttributesCopiedAssert1
ok 413 No match found for domestic
ok 414 To many matches found for domestic
ok 415 No match found for street
ok 416 To many matches found for street
# tests - nodeclonefalsenocopytext
ok 417 noTextNodes
# tests - nodeclonegetparentnull
ok 418 nodeCloneGetParentNullAssert1
# tests - nodeclonenodefalse
ok 419 name
ok 420 length
# tests - nodeclonenodetrue
ok 421 whitespace
# tests - nodeclonetruecopytext
ok 422 nodeCloneTrueCopyTextAssert1
# tests - nodecommentnodeattributes
ok 423 attributesUndefined
ok 424 createdAttributesUndefined
# tests - nodecommentnodename
ok 425 commentNodeName
# tests - nodecommentnodetype
ok 426 nodeCommentNodeTypeAssert1
# tests - nodecommentnodevalue
ok 427 value
# tests - nodedocumentfragmentnodename
ok 428 nodeDocumentFragmentNodeNameAssert1
# tests - nodedocumentfragmentnodetype
ok 429 nodeDocumentFragmentNodeTypeAssert1
# tests - nodedocumentfragmentnodevalue
ok 430 attributesNull
ok 431 initiallyNull
# tests - nodedocumentnodeattribute
ok 432 documentAttributesNull
# tests - nodedocumentnodename
ok 433 documentNodeName
# tests - nodedocumentnodetype
ok 434 nodeDocumentNodeTypeAssert1
# tests - nodedocumentnodevalue
ok 435 documentNodeValueNull
# tests - nodedocumenttypenodename
ok 436 docTypeNotNull
ok 437 documentName
# tests - nodedocumenttypenodetype
ok 438 doctypeNotNull
ok 439 nodeType
# tests - nodedocumenttypenodevalue
ok 440 docTypeNotNull
ok 441 doctypeAttributesNull
# tests - nodeelementnodeattributes
ok 442 nodeElementNodeValueAssert1
ok 443 No match found for domestic
ok 444 To many matches found for domestic
ok 445 No match found for street
ok 446 To many matches found for street
# tests - nodeelementnodename
ok 447 nodeElementNodeNameAssert1
# tests - nodeelementnodetype
ok 448 nodeElementNodeTypeAssert1
# tests - nodeelementnodevalue
ok 449 elementNodeValueNull
# tests - nodegetfirstchild
ok 450 nodeName
# tests - nodegetfirstchildnull
ok 451 nodeGetFirstChildNullAssert1
# tests - nodegetlastchild
ok 452 nodeName
# tests - nodegetlastchildnull
ok 453 nodeGetLastChildNullAssert1
# tests - nodegetnextsibling
ok 454 nodeName
# tests - nodegetnextsiblingnull
ok 455 nodeGetNextSiblingNullAssert1
# tests - nodegetownerdocument
ok 456 nodeGetOwnerDocumentAssert1
# tests - nodegetownerdocumentnull
ok 457 documentOwnerDocumentNull
# tests - nodegetprevioussibling
ok 458 nodeName
# tests - nodegetprevioussiblingnull
ok 459 nodeGetPreviousSiblingNullAssert1
# tests - nodehaschildnodes
ok 460 nodeHasChildAssert1
# tests - nodehaschildnodesfalse
ok 461 nodeHasChildFalseAssert1
# tests - nodeinsertbefore
ok 462 nodeNames
# tests - nodeinsertbeforedocfragment
ok 463 childName3
ok 464 childName4
# tests - nodeinsertbeforenewchildexists
ok 465 childNames
# tests - nodeinsertbeforenodeancestor
ok 466 throw_HIERARCHY_REQUEST_ERR
# tests - nodeinsertbeforenodename
ok 467 nodeInsertBeforeNodeNameAssert1
# tests - nodeinsertbeforerefchildnonexistent
ok 468 throw_NOT_FOUND_ERR
# tests - nodeinsertbeforerefchildnull
ok 469 nodeInsertBeforeRefChildNullAssert1
# tests - nodelistindexequalzero
# tests - nodelistindexgetlength
ok 470 (unnamed assert)
# tests - nodelistindexgetlengthofemptylist
ok 471 nodelistIndexGetLengthOfEmptyListAssert
# tests - nodelistindexnotzero
ok 472 nodeName
# tests - nodelistreturnfirstitem
ok 473 firstChildWithWhitespace
# tests - nodelistreturnlastitem
ok 474 nodeName2
# tests - nodelisttraverselist
ok 475 whitespace
# tests - nodeparentnode
ok 476 nodeParentNodeAssert1
# tests - nodeparentnodenull
ok 477 parentNode
# tests - nodeprocessinginstructionnodeattributes
ok 478 nodeProcessingInstructionNodeAttrAssert1
# tests - nodeprocessinginstructionnodename
ok 479 nodeProcessingInstructionNodeNameAssert1
# tests - nodeprocessinginstructionnodetype
ok 480 nodeProcessingInstructionNodeTypeAssert1
# tests - nodeprocessinginstructionnodevalue
ok 481 value
# tests - nodeprocessinginstructionsetnodevalue
ok 482 nodeValue
ok 483 data
# tests - noderemovechild
ok 484 nodeRemoveChildAssert1
# tests - noderemovechildgetnodename
ok 485 whitespace
# tests - noderemovechildnode
ok 486 removedName
ok 487 childName
ok 488 length
# tests - noderemovechildoldchildnonexistent
ok 489 throw_NOT_FOUND_ERR
# tests - nodereplacechild
ok 490 nodeReplaceChildAssert1
# tests - nodereplacechildnewchildexists
ok 491 return_value_same
ok 492 childNames
# tests - nodereplacechildnodeancestor
ok 493 throw_HIERARCHY_REQUEST_ERR
# tests - nodereplacechildnodename
ok 494 whitespace
# tests - nodereplacechildoldchildnonexistent
ok 495 throw_NOT_FOUND_ERR
# tests - nodetextnodeattribute
ok 496 nodeTextNodeAttributesAssert1
# tests - nodetextnodename
ok 497 nodeTextNodeNameAssert1
# tests - nodetextnodetype
ok 498 nodeTextNodeTypeAssert1
# tests - nodetextnodevalue
ok 499 nodeTextNodeValueAssert1
# tests - nodevalue01
ok 500 initiallyNull
ok 501 nullAfterAttemptedChange
# tests - nodevalue02
ok 502 initial
ok 503 afterChange
# tests - nodevalue04
ok 504 docTypeNotNull
ok 505 initiallyNull
ok 506 nullAfterAttemptedChange
# tests - nodevalue05
ok 507 initiallyNull
ok 508 nullAfterAttemptedChange
# tests - nodevalue06
ok 509 initiallyNull
ok 510 nullAfterAttemptedChange
# tests - nodevalue09
ok 511 initial
ok 512 after
# tests - processinginstructiongetdata
ok 513 processinginstructionGetTargetAssert
# tests - processinginstructiongettarget
ok 514 processinginstructionGetTargetAssert
# tests - textindexsizeerrnegativeoffset
ok 515 throws_INDEX_SIZE_ERR
# tests - textindexsizeerroffsetoutofbounds
ok 516 throw_INDEX_SIZE_ERR
# tests - textsplittextfour
ok 517 textSplitTextFourAssert
# tests - textsplittextone
ok 518 textSplitTextOneAssert
# tests - textsplittextthree
ok 519 textSplitTextThreeAssert
# tests - textsplittexttwo
ok 520 textSplitTextTwoAssert
# tests - textwithnomarkup
ok 521 textNodeValue
# tests - maintainsplittextlocation
ok 522 Original children count should be 2
ok 523 After split, the children count should be 3
ok 524 After split, the last child should be an ELEMENT_NODE
ok 525 After split the first child should still be the same object as before
ok 526 After split the second child should be a text node
# tests - allow_empty_nodelists
ok 527 (unnamed assert)
# tests - creating_text_nodes_with_falsy_values
ok 528 (unnamed assert)
ok 529 (unnamed assert)
ok 530 (unnamed assert)
ok 531 (unnamed assert)
ok 532 (unnamed assert)
ok 533 (unnamed assert)
# tests - onevent_properties_are_set_on_setAttribute
ok 534 elem.onclick is set
# tests - onevent_properties_are_set_on_setAttributeNode
ok 535 elem.onevent is set
# tests - onevent_properties_are_set_on_attr_set_value
ok 536 elem.onevent is set
# tests - memoized_queries_cleared_on_remove_child
ok 537 Num elements queried has changed
# tests - memoized_queries_cleared_on_append_child
ok 538 Num elements queried has changed
# tests - restrict_text_data_type
ok 539 String type forced (create)
ok 540 String type forced (set)
# tests - child_nodes_state
ok 541 (unnamed assert)
# tests - hc_docclonenodetrue
ok 542 clone
# tests - getElementById() should work after changing the id atribute of an <img> element
ok 543 (unnamed assert)
# tests - documentgetdoctypenodtd
ok 544 documentGetDocTypeNoDTDAssert
# tests - hc_attrcreatedocumentfragment
ok 545 hasLangAttr
# tests - hc_attrcreatetextnode
ok 546 value
ok 547 nodeValue
# tests - hc_attrcreatetextnode2
ok 548 value
ok 549 nodeValue
# tests - hc_attreffectivevalue
ok 550 attrEffectiveValueAssert
# tests - hc_attrgetvalue1
ok 551 attrValue1
# tests - hc_attrname
ok 552 attribute name
# tests - hc_attrspecifiedvalue
ok 553 acronymTitleSpecified
# tests - hc_attrspecifiedvaluechanged
ok 554 acronymClassSpecified
# tests - hc_characterdataappenddata
ok 555 characterdataAppendDataAssert
# tests - hc_characterdataappenddatagetdata
ok 556 characterdataAppendDataGetDataAssert
# tests - hc_characterdatadeletedatabegining
ok 557 data
# tests - hc_characterdatadeletedataend
ok 558 characterdataDeleteDataEndAssert
# tests - hc_characterdatadeletedataexceedslength
ok 559 characterdataDeleteDataExceedsLengthAssert
# tests - hc_characterdatadeletedatagetlengthanddata
ok 560 data
ok 561 length
# tests - hc_characterdatadeletedatamiddle
ok 562 characterdataDeleteDataMiddleAssert
# tests - hc_characterdatagetdata
ok 563 characterdataGetDataAssert
# tests - hc_characterdatagetlength
ok 564 characterdataGetLengthAssert
# tests - hc_characterdataindexsizeerrdeletedatacountnegative
ok 565 (unnamed assert)
# tests - hc_characterdataindexsizeerrdeletedataoffsetgreater
ok 566 throw_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrdeletedataoffsetnegative
ok 567 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrinsertdataoffsetgreater
ok 568 throw_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrinsertdataoffsetnegative
ok 569 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrreplacedatacountnegative
ok 570 (unnamed assert)
# tests - hc_characterdataindexsizeerrreplacedataoffsetgreater
ok 571 throw_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrreplacedataoffsetnegative
ok 572 (unnamed assert)
ok 573 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrsubstringnegativeoffset
ok 574 throws_INDEX_SIZE_ERR
# tests - hc_characterdataindexsizeerrsubstringoffsetgreater
ok 575 throw_INDEX_SIZE_ERR
# tests - hc_characterdatainsertdatabeginning
ok 576 characterdataInsertDataBeginningAssert
# tests - hc_characterdatainsertdataend
ok 577 characterdataInsertDataEndAssert
# tests - hc_characterdatainsertdatamiddle
ok 578 characterdataInsertDataMiddleAssert
# tests - hc_characterdatareplacedatabegining
ok 579 characterdataReplaceDataBeginingAssert
# tests - hc_characterdatareplacedataend
ok 580 characterdataReplaceDataEndAssert
# tests - hc_characterdatareplacedataexceedslengthofarg
ok 581 characterdataReplaceDataExceedsLengthOfArgAssert
# tests - hc_characterdatareplacedataexceedslengthofdata
ok 582 characterdataReplaceDataExceedsLengthOfDataAssert
# tests - hc_characterdatareplacedatamiddle
ok 583 characterdataReplaceDataMiddleAssert
# tests - hc_characterdatasetnodevalue
ok 584 data
ok 585 value
# tests - hc_characterdatasubstringexceedsvalue
ok 586 characterdataSubStringExceedsValueAssert
# tests - hc_characterdatasubstringvalue
ok 587 characterdataSubStringValueAssert
# tests - hc_commentgetcomment
ok 588 nodeName
ok 589 nodeValue
ok 590 attributes
ok 591 atMostOneComment
# tests - hc_documentcreateattribute
ok 592 value
ok 593 attribute name
# tests - hc_documentcreatecomment
ok 594 value
ok 595 strong
ok 596 type
# tests - hc_documentcreatedocumentfragment
ok 597 length
ok 598 strong
ok 599 type
ok 600 value
# tests - hc_documentcreateelement
ok 601 element strong
ok 602 type
ok 603 valueInitiallyNull
# tests - hc_documentcreateelementcasesensitive
ok 604 attrib1
ok 605 attrib2
ok 606 element nodeName1
ok 607 element nodeName2
# tests - hc_documentcreatetextnode
ok 608 value
ok 609 strong
ok 610 type
# tests - hc_documentgetdoctype
ok 611 nodeName
ok 612 nodeValue
ok 613 attributes
# tests - hc_documentgetelementsbytagnamelength
ok 614 documentGetElementsByTagNameLengthAssert
# tests - hc_documentgetelementsbytagnametotallength
ok 615 (unnamed assert)
# tests - hc_documentgetelementsbytagnamevalue
ok 616 documentGetElementsByTagNameValueAssert
# tests - hc_documentgetimplementation
ok 617 supports_HTML_1.0
# tests - hc_documentgetrootnode
ok 618 (unnamed assert)
# tests - hc_documentinvalidcharacterexceptioncreateattribute
ok 619 throw_INVALID_CHARACTER_ERR
# tests - hc_documentinvalidcharacterexceptioncreateattribute1
ok 620 throw_INVALID_CHARACTER_ERR
# tests - hc_documentinvalidcharacterexceptioncreateelement
ok 621 throw_INVALID_CHARACTER_ERR
# tests - hc_documentinvalidcharacterexceptioncreateelement1
ok 622 throw_INVALID_CHARACTER_ERR
# tests - hc_domimplementationfeaturenoversion
ok 623 hasFeatureBlank
# tests - hc_domimplementationfeaturenull
ok 624 supports_HTML_null
# tests - hc_domimplementationfeaturexml
ok 625 supports_html_1.0
# tests - hc_elementaddnewattribute
ok 626 attrValue
# tests - hc_elementassociatedattribute
ok 627 acronymTitleSpecified
# tests - hc_elementchangeattributevalue
ok 628 elementChangeAttributeValueAssert
# tests - hc_elementcreatenewattribute
ok 629 old_attr_doesnt_exist
ok 630 new_district_accessible
ok 631 attr_value
# tests - hc_elementgetattributenode
ok 632 attribute nodeName
# tests - hc_elementgetattributenodenull
ok 633 elementGetAttributeNodeNullAssert
# tests - hc_elementgetelementempty
ok 634 elementGetElementEmptyAssert
# tests - hc_elementgetelementsbytagname
ok 635 elementGetElementsByTagNameAssert
# tests - hc_elementgetelementsbytagnameaccessnodelist
ok 636 element childName
ok 637 employeeID
# tests - hc_elementgetelementsbytagnamenomatch
ok 638 elementGetElementsByTagNameNoMatchNoMatchAssert
# tests - hc_elementgetelementsbytagnamespecialvalue
ok 639 element tagNames
# tests - hc_elementgettagname
ok 640 (unnamed assert)
# tests - hc_elementinuseattributeerr
ok 641 throw_INUSE_ATTRIBUTE_ERR
# tests - hc_elementinvalidcharacterexception
ok 642 throw_INVALID_CHARACTER_ERR
# tests - hc_elementinvalidcharacterexception1
ok 643 throw_INVALID_CHARACTER_ERR
# tests - hc_elementnormalize
ok 644 elementNormalizeAssert
# tests - hc_elementnotfounderr
ok 645 throw_NOT_FOUND_ERR
# tests - hc_elementremoveattribute
ok 646 attrValue
# tests - hc_elementremoveattributeaftercreate
ok 647 removed_item_null
# tests - hc_elementremoveattributenode
ok 648 removedAttrNotNull
ok 649 elementRemoveAttributeNodeAssert
# tests - hc_elementreplaceattributewithself
ok 650 replacedAttr
# tests - hc_elementreplaceexistingattribute
ok 651 replacedValue
# tests - hc_elementreplaceexistingattributegevalue
ok 652 previousAttrNotNull
ok 653 previousAttrValue
# tests - hc_elementretrieveallattributes
ok 654 (unnamed assert)
# tests - hc_elementretrieveattrvalue
ok 655 attrValue
# tests - hc_elementretrievetagname
ok 656 element nodeName
ok 657 element tagName
# tests - hc_elementsetattributenodenull
ok 658 elementSetAttributeNodeNullAssert
# tests - hc_entitiesremovenameditem1
# tests - hc_entitiessetnameditem1
# tests - hc_namednodemapchildnoderange
ok 659 htmlLength
ok 660 attr0
ok 661 attr1
ok 662 attr3
# tests - hc_namednodemapgetnameditem
ok 663 attribute nodeName
# tests - hc_namednodemapinuseattributeerr
ok 664 throw_INUSE_ATTRIBUTE_ERR
# tests - hc_namednodemapnotfounderr
ok 665 throw_NOT_FOUND_ERR
# tests - hc_namednodemapnumberofnodes
ok 666 htmlLength
# tests - hc_namednodemapremovenameditem
ok 667 isnull
# tests - hc_namednodemapreturnattrnode
ok 668 attribute name
# tests - hc_namednodemapreturnfirstitem
ok 669 (unnamed assert)
# tests - hc_namednodemapreturnlastitem
ok 670 (unnamed assert)
# tests - hc_namednodemapreturnnull
ok 671 langAttrNull
# tests - hc_namednodemapsetnameditem
ok 672 attribute nodeName
# tests - hc_namednodemapsetnameditemreturnvalue
ok 673 previousAttrNotNull
ok 674 previousAttrValue
# tests - hc_namednodemapsetnameditemthatexists
ok 675 namednodemapSetNamedItemThatExistsAssert
# tests - hc_namednodemapsetnameditemwithnewvalue
ok 676 prevValueNull
# tests - hc_nodeappendchild
ok 677 element nodeName
# tests - hc_nodeappendchildchildexists
ok 678 element liveByTagName
ok 679 element refreshedChildNodes
# tests - hc_nodeappendchilddocfragment
ok 680 element nodeNames
# tests - hc_nodeappendchildgetnodename
ok 681 element nodeName
# tests - hc_nodeappendchildnodeancestor
ok 682 throw_HIERARCHY_REQUEST_ERR
# tests - hc_nodeattributenodeattribute
ok 683 nodeAttributeNodeAttributeAssert1
# tests - hc_nodeattributenodename
ok 684 attribute nodeName
# tests - hc_nodeattributenodevalue
ok 685 nodeValue
# tests - hc_nodechildnodes
ok 686 textNodeType
ok 687 textNodeType
ok 688 textNodeType
ok 689 textNodeType
ok 690 textNodeType
ok 691 textNodeType
ok 692 textNodeType
ok 693 element elementNames
# tests - hc_nodechildnodesappendchild
ok 694 textNodeType
ok 695 textNodeType
ok 696 textNodeType
ok 697 textNodeType
ok 698 textNodeType
ok 699 textNodeType
ok 700 textNodeType
ok 701 element childElements
# tests - hc_nodechildnodesempty
ok 702 length_zero
# tests - hc_nodecloneattributescopied
ok 703 (unnamed assert)
# tests - hc_nodeclonefalsenocopytext
ok 704 nodeCloneFalseNoCopyTextAssert1
# tests - hc_nodeclonegetparentnull
ok 705 nodeCloneGetParentNullAssert1
# tests - hc_nodeclonenodefalse
ok 706 element strong
ok 707 length
# tests - hc_nodeclonenodetrue
ok 708 clone
# tests - hc_nodeclonetruecopytext
ok 709 cloneContainsText
# tests - hc_nodecommentnodeattributes
ok 710 existingCommentAttributesNull
ok 711 createdCommentAttributesNull
# tests - hc_nodecommentnodename
ok 712 existingNodeName
ok 713 createdNodeName
# tests - hc_nodecommentnodetype
ok 714 existingCommentNodeType
ok 715 createdCommentNodeType
# tests - hc_nodecommentnodevalue
ok 716 value
ok 717 createdCommentNodeValue
# tests - hc_nodedocumentfragmentnodename
ok 718 nodeDocumentFragmentNodeNameAssert1
# tests - hc_nodedocumentfragmentnodetype
ok 719 nodeDocumentFragmentNodeTypeAssert1
# tests - hc_nodedocumentfragmentnodevalue
ok 720 attributesNull
ok 721 initiallyNull
# tests - hc_nodedocumentnodeattribute
ok 722 doc_attributes_is_null
# tests - hc_nodedocumentnodename
ok 723 documentNodeName
# tests - hc_nodedocumentnodetype
ok 724 nodeDocumentNodeTypeAssert1
# tests - hc_nodedocumentnodevalue
ok 725 documentNodeValue
# tests - hc_nodeelementnodeattributes
ok 726 (unnamed assert)
# tests - hc_nodeelementnodename
ok 727 (unnamed assert)
# tests - hc_nodeelementnodetype
ok 728 nodeElementNodeTypeAssert1
# tests - hc_nodeelementnodevalue
ok 729 elementNodeValue
# tests - hc_nodegetfirstchild
ok 730 firstChild_w_whitespace
# tests - hc_nodegetfirstchildnull
ok 731 nullChild
# tests - hc_nodegetlastchild
ok 732 whitespace
# tests - hc_nodegetlastchildnull
ok 733 nullChild
# tests - hc_nodegetnextsibling
ok 734 whitespace
# tests - hc_nodegetnextsiblingnull
ok 735 nodeGetNextSiblingNullAssert1
# tests - hc_nodegetownerdocument
ok 736 (unnamed assert)
# tests - hc_nodegetownerdocumentnull
ok 737 nodeGetOwnerDocumentNullAssert1
# tests - hc_nodegetprevioussibling
ok 738 whitespace
# tests - hc_nodegetprevioussiblingnull
ok 739 nodeGetPreviousSiblingNullAssert1
# tests - hc_nodehaschildnodes
ok 740 nodeHasChildAssert1
# tests - hc_nodehaschildnodesfalse
ok 741 hasChild
# tests - hc_nodeinsertbefore
ok 742 element nodeNames
# tests - hc_nodeinsertbeforedocfragment
ok 743 element childName3
ok 744 element childName4
# tests - hc_nodeinsertbeforenewchildexists
ok 745 element childNames
# tests - hc_nodeinsertbeforenodeancestor
ok 746 throw_HIERARCHY_REQUEST_ERR
# tests - hc_nodeinsertbeforenodename
ok 747 element nodeName
# tests - hc_nodeinsertbeforerefchildnonexistent
ok 748 throw_NOT_FOUND_ERR
# tests - hc_nodeinsertbeforerefchildnull
ok 749 element nodeName
# tests - hc_nodelistindexequalzero
ok 750 childName_w_whitespace
# tests - hc_nodelistindexgetlength
ok 751 length_w_space
# tests - hc_nodelistindexgetlengthofemptylist
ok 752 length
# tests - hc_nodelistindexnotzero
ok 753 element childName_strong
# tests - hc_nodelistreturnfirstitem
ok 754 nodeName_w_space
# tests - hc_nodelistreturnlastitem
ok 755 lastNodeName_w_whitespace
# tests - hc_nodelisttraverselist
ok 756 textNodeType
ok 757 textNodeName
ok 758 textNodeType
ok 759 textNodeName
ok 760 textNodeType
ok 761 textNodeName
ok 762 textNodeType
ok 763 textNodeName
ok 764 textNodeType
ok 765 textNodeName
ok 766 textNodeType
ok 767 textNodeName
ok 768 textNodeType
ok 769 textNodeName
ok 770 element nodeNames
# tests - hc_nodeparentnode
ok 771 element parentNodeName
# tests - hc_nodeparentnodenull
ok 772 parentNode
# tests - hc_noderemovechild
ok 773 parentNodeNull
# tests - hc_noderemovechildgetnodename
ok 774 notnull
ok 775 nodeName
# tests - hc_noderemovechildnode
ok 776 element removedName
ok 777 textNodeType
ok 778 textNodeName
ok 779 textNodeType
ok 780 textNodeName
ok 781 textNodeType
ok 782 textNodeName
ok 783 textNodeType
ok 784 textNodeName
ok 785 textNodeType
ok 786 textNodeName
ok 787 textNodeType
ok 788 textNodeName
ok 789 textNodeType
ok 790 textNodeName
ok 791 element childNames
# tests - hc_noderemovechildoldchildnonexistent
ok 792 throw_NOT_FOUND_ERR
# tests - hc_nodereplacechild
ok 793 element nodeName
# tests - hc_nodereplacechildnewchildexists
ok 794 return_value_same
ok 795 element childNames
# tests - hc_nodereplacechildnodeancestor
ok 796 throw_HIERARCHY_REQUEST_ERR
# tests - hc_nodereplacechildnodename
ok 797 element replacedNodeName
# tests - hc_nodereplacechildoldchildnonexistent
ok 798 throw_NOT_FOUND_ERR
# tests - hc_nodetextnodeattribute
ok 799 text_attributes_is_null
# tests - hc_nodetextnodename
ok 800 textNodeName
# tests - hc_nodetextnodetype
ok 801 nodeTextNodeTypeAssert1
# tests - hc_nodetextnodevalue
ok 802 textNodeValue
# tests - hc_nodevalue01
ok 803 initiallyNull
ok 804 nullAfterAttemptedChange
# tests - hc_nodevalue02
ok 805 initial
ok 806 afterChange
# tests - hc_nodevalue04
ok 807 docTypeNotNullOrDocIsHTML
ok 808 docTypeNotNull
ok 809 initiallyNull
ok 810 nullAfterAttemptedChange
# tests - hc_nodevalue05
ok 811 initiallyNull
ok 812 nullAfterAttemptedChange
# tests - hc_nodevalue06
ok 813 initiallyNull
ok 814 nullAfterAttemptedChange
# tests - hc_textindexsizeerrnegativeoffset
ok 815 throws_INDEX_SIZE_ERR
# tests - hc_textindexsizeerroffsetoutofbounds
ok 816 throw_INDEX_SIZE_ERR
# tests - hc_textparseintolistofelements
ok 817 assertEqCoalescing
# tests - hc_textsplittextfour
ok 818 textSplitTextFourAssert
# tests - hc_textsplittextone
ok 819 textSplitTextOneAssert
# tests - hc_textsplittextthree
ok 820 textSplitTextThreeAssert
# tests - hc_textsplittexttwo
ok 821 textSplitTextTwoAssert
# tests - hc_textwithnomarkup
ok 822 textWithNoMarkupAssert
# attrgetownerelement - attrgetownerelement02
ok 823 (unnamed assert)
# attrgetownerelement - attrgetownerelement03
ok 824 should be null
# attrgetownerelement - attrgetownerelement05
ok 825 (unnamed assert)
# createAttributeNS - createAttributeNS01
ok 826 throw_NAMESPACE_ERR
# createAttributeNS - createAttributeNS02
ok 827 throw_NAMESPACE_ERR
# createAttributeNS - createAttributeNS03
ok 828 throw_INVALID_CHARACTER_ERR
ok 829 throw_INVALID_CHARACTER_ERR
ok 830 throw_INVALID_CHARACTER_ERR
ok 831 throw_INVALID_CHARACTER_ERR
ok 832 throw_INVALID_CHARACTER_ERR
ok 833 throw_INVALID_CHARACTER_ERR
ok 834 throw_INVALID_CHARACTER_ERR
ok 835 throw_INVALID_CHARACTER_ERR
ok 836 throw_INVALID_CHARACTER_ERR
ok 837 throw_INVALID_CHARACTER_ERR
ok 838 throw_INVALID_CHARACTER_ERR
ok 839 throw_INVALID_CHARACTER_ERR
ok 840 throw_INVALID_CHARACTER_ERR
ok 841 throw_INVALID_CHARACTER_ERR
ok 842 throw_INVALID_CHARACTER_ERR
ok 843 throw_INVALID_CHARACTER_ERR
ok 844 throw_INVALID_CHARACTER_ERR
ok 845 throw_INVALID_CHARACTER_ERR
ok 846 throw_INVALID_CHARACTER_ERR
ok 847 throw_INVALID_CHARACTER_ERR
ok 848 throw_INVALID_CHARACTER_ERR
ok 849 throw_INVALID_CHARACTER_ERR
ok 850 throw_INVALID_CHARACTER_ERR
ok 851 throw_INVALID_CHARACTER_ERR
ok 852 throw_INVALID_CHARACTER_ERR
ok 853 throw_INVALID_CHARACTER_ERR
ok 854 throw_INVALID_CHARACTER_ERR
# createAttributeNS - createAttributeNS04
ok 855 throw_NAMESPACE_ERR
# createAttributeNS - createAttributeNS05
# createAttributeNS - createAttributeNS06
ok 856 throw_INVALID_CHARACTER_ERR
# createDocument - createDocument01
ok 857 throw_NAMESPACE_ERR
# createDocument - createDocument02
ok 858 throw_NAMESPACE_ERR
# createDocument - createDocument05
ok 859 throw_INVALID_CHARACTER_ERR
ok 860 throw_INVALID_CHARACTER_ERR
ok 861 throw_INVALID_CHARACTER_ERR
ok 862 throw_INVALID_CHARACTER_ERR
ok 863 throw_INVALID_CHARACTER_ERR
ok 864 throw_INVALID_CHARACTER_ERR
ok 865 throw_INVALID_CHARACTER_ERR
ok 866 throw_INVALID_CHARACTER_ERR
ok 867 throw_INVALID_CHARACTER_ERR
ok 868 throw_INVALID_CHARACTER_ERR
ok 869 throw_INVALID_CHARACTER_ERR
ok 870 throw_INVALID_CHARACTER_ERR
ok 871 throw_INVALID_CHARACTER_ERR
ok 872 throw_INVALID_CHARACTER_ERR
ok 873 throw_INVALID_CHARACTER_ERR
ok 874 throw_INVALID_CHARACTER_ERR
ok 875 throw_INVALID_CHARACTER_ERR
ok 876 throw_INVALID_CHARACTER_ERR
ok 877 throw_INVALID_CHARACTER_ERR
ok 878 throw_INVALID_CHARACTER_ERR
ok 879 throw_INVALID_CHARACTER_ERR
ok 880 throw_INVALID_CHARACTER_ERR
ok 881 throw_INVALID_CHARACTER_ERR
ok 882 throw_INVALID_CHARACTER_ERR
ok 883 throw_INVALID_CHARACTER_ERR
ok 884 throw_INVALID_CHARACTER_ERR
ok 885 throw_INVALID_CHARACTER_ERR
# createDocument - createDocument06
ok 886 throw_NAMESPACE_ERR
# createDocument - createDocument07
ok 887 nodeName
ok 888 nodeValue should not be null
# createDocument - createDocument08
ok 889 (unnamed assert)
# createDocumentType - createDocumentType01
ok 890 throw_NAMESPACE_ERR
# createDocumentType - createDocumentType02
ok 891 throw_INVALID_CHARACTER_ERR
ok 892 throw_INVALID_CHARACTER_ERR
ok 893 throw_INVALID_CHARACTER_ERR
ok 894 throw_INVALID_CHARACTER_ERR
ok 895 throw_INVALID_CHARACTER_ERR
ok 896 throw_INVALID_CHARACTER_ERR
ok 897 throw_INVALID_CHARACTER_ERR
ok 898 throw_INVALID_CHARACTER_ERR
ok 899 throw_INVALID_CHARACTER_ERR
ok 900 throw_INVALID_CHARACTER_ERR
ok 901 throw_INVALID_CHARACTER_ERR
ok 902 throw_INVALID_CHARACTER_ERR
ok 903 throw_INVALID_CHARACTER_ERR
ok 904 throw_INVALID_CHARACTER_ERR
ok 905 throw_INVALID_CHARACTER_ERR
ok 906 throw_INVALID_CHARACTER_ERR
ok 907 throw_INVALID_CHARACTER_ERR
ok 908 throw_INVALID_CHARACTER_ERR
ok 909 throw_INVALID_CHARACTER_ERR
ok 910 throw_INVALID_CHARACTER_ERR
ok 911 throw_INVALID_CHARACTER_ERR
ok 912 throw_INVALID_CHARACTER_ERR
ok 913 throw_INVALID_CHARACTER_ERR
ok 914 throw_INVALID_CHARACTER_ERR
ok 915 throw_INVALID_CHARACTER_ERR
ok 916 throw_INVALID_CHARACTER_ERR
ok 917 throw_INVALID_CHARACTER_ERR
# createDocumentType - createDocumentType03
ok 918 nodeName
ok 919 nodeValue should not be null
# createDocumentType - createDocumentType04
ok 920 throw_INVALID_CHARACTER_ERR
# createElementNS - createElementNS01
ok 921 throw_NAMESPACE_ERR
# createElementNS - createElementNS02
ok 922 throw_NAMESPACE_ERR
# createElementNS - createElementNS03
ok 923 throw_INVALID_CHARACTER_ERR
ok 924 throw_INVALID_CHARACTER_ERR
ok 925 throw_INVALID_CHARACTER_ERR
ok 926 throw_INVALID_CHARACTER_ERR
ok 927 throw_INVALID_CHARACTER_ERR
ok 928 throw_INVALID_CHARACTER_ERR
ok 929 throw_INVALID_CHARACTER_ERR
ok 930 throw_INVALID_CHARACTER_ERR
ok 931 throw_INVALID_CHARACTER_ERR
ok 932 throw_INVALID_CHARACTER_ERR
ok 933 throw_INVALID_CHARACTER_ERR
ok 934 throw_INVALID_CHARACTER_ERR
ok 935 throw_INVALID_CHARACTER_ERR
ok 936 throw_INVALID_CHARACTER_ERR
ok 937 throw_INVALID_CHARACTER_ERR
ok 938 throw_INVALID_CHARACTER_ERR
ok 939 throw_INVALID_CHARACTER_ERR
ok 940 throw_INVALID_CHARACTER_ERR
ok 941 throw_INVALID_CHARACTER_ERR
ok 942 throw_INVALID_CHARACTER_ERR
ok 943 throw_INVALID_CHARACTER_ERR
ok 944 throw_INVALID_CHARACTER_ERR
ok 945 throw_INVALID_CHARACTER_ERR
ok 946 throw_INVALID_CHARACTER_ERR
ok 947 throw_INVALID_CHARACTER_ERR
ok 948 throw_INVALID_CHARACTER_ERR
ok 949 throw_INVALID_CHARACTER_ERR
# createElementNS - createElementNS04
ok 950 throw_NAMESPACE_ERR
# createElementNS - createElementNS05
ok 951 throw_Equals
# createElementNS - createElementNS06
ok 952 throw_INVALID_CHARACTER_ERR
# documentcreateattributeNS - documentcreateattributeNS01
ok 953 documentcreateattributeNS01
# documentcreateattributeNS - documentcreateattributeNS02
ok 954 documentcreateattributeNS02_att1_name
ok 955 documentcreateattributeNS02_att1_nodeValue
ok 956 documentcreateattributeNS02_att1_prefix
ok 957 documentcreateattributeNS02_att1_namespaceURI
ok 958 documentcreateattributeNS02_att2_name
ok 959 documentcreateattributeNS02_att2_nodeValue
ok 960 documentcreateattributeNS02_att2_namespaceURI
# documentcreateattributeNS - documentcreateattributeNS03
ok 961 documentcreateattributeNS03
ok 962 documentcreateattributeNS03
ok 963 documentcreateattributeNS03
ok 964 documentcreateattributeNS03
ok 965 documentcreateattributeNS03
ok 966 documentcreateattributeNS03
ok 967 documentcreateattributeNS03
ok 968 documentcreateattributeNS03
ok 969 documentcreateattributeNS03
# documentcreateattributeNS - documentcreateattributeNS04
ok 970 documentcreateattributeNS04
ok 971 documentcreateattributeNS04
ok 972 documentcreateattributeNS04
ok 973 documentcreateattributeNS04
ok 974 documentcreateattributeNS04
# documentcreateattributeNS - documentcreateattributeNS05
ok 975 documentcreateattributeNS05
# documentcreateattributeNS - documentcreateattributeNS06
ok 976 documentcreateattributeNS06
# documentcreateattributeNS - documentcreateattributeNS07
ok 977 documentcreateattributeNS07
# documentcreateelementNS - documentcreateelementNS01
ok 978 documentcreateelementNS01_nodeName
ok 979 documentcreateelementNS01_namespaceURI
ok 980 documentcreateelementNS01_localName
ok 981 documentcreateelementNS01_prefix
ok 982 documentcreateelementNS01_tagName
# documentcreateelementNS - documentcreateelementNS02
ok 983 documentcreateelementNS02
# documentcreateelementNS - documentcreateelementNS05
ok 984 documentcreateelementNS05
# documentcreateelementNS - documentcreateelementNS06
ok 985 documentcreateelementNS06
# documentgetelementby - documentgetelementbyid01
ok 986 element should not be null
# documentgetelementby - documentgetelementsbytagnameNS01
ok 987 documentgetelementsbytagnameNS01
# documentgetelementby - documentgetelementsbytagnameNS02
ok 988 documentgetelementsbytagnameNS02
# documentgetelementby - documentgetelementsbytagnameNS03
ok 989 documentgetelementsbytagnameNS03
# documentgetelementby - documentgetelementsbytagnameNS04
ok 990 documentgetelementsbytagnameNS04
# documentgetelementby - documentgetelementsbytagnameNS05
ok 991 documentgetelementsbytagnameNS05
# documentimportnode - documentimportnode06
ok 992 throw_NOT_SUPPORTED_ERR
# documentimportnode - documentimportnode09
ok 993 success should be *false*
# documentimportnode - documentimportnode10
ok 994 documentimportnode10
# documentimportnode - documentimportnode11
ok 995 success should be *false*
ok 996 documentimportnode11_NodeName
# documentimportnode - documentimportnode12
ok 997 documentimportnode12
# documentimportnode - documentimportnode13
ok 998 documentimportnode13
# documentimportnode - documentimportnode15
ok 999 documentimportnode15
# documentimportnode - documentimportnode17
ok 1000 documentimportnode17
# documentimportnode - documentimportnode18
ok 1001 documentimportnode18_Target
ok 1002 documentimportnode18_Data
# documenttypepublicid - documenttypepublicid01
ok 1003 documenttypepublicid01
# documenttypesystemid - documenttypesystemid01
ok 1004 documenttypepublicid01
ok 1005 documenttypesystemid01
# domimplementationcreatedocument - domimplementationcreatedocument03
ok 1006 newDoc should be null
ok 1007 newDoc should be null
ok 1008 newDoc should be null
ok 1009 newDoc should be null
ok 1010 newDoc should be null
ok 1011 newDoc should be null
ok 1012 newDoc should be null
ok 1013 newDoc should be null
ok 1014 newDoc should be null
ok 1015 newDoc should be null
# domimplementationcreatedocument - domimplementationcreatedocument04
ok 1016 domimplementationcreatedocument04
# domimplementationcreatedocument - domimplementationcreatedocument05
ok 1017 domimplementationcreatedocument05
# domimplementationcreatedocument - domimplementationcreatedocument07
ok 1018 domimplementationcreatedocument07
# domimplementationcreatedocument - domimplementationcreatedocumenttype01
ok 1019 newDocType should be null
ok 1020 ownerDocument should not be null
ok 1021 newDocType should be null
ok 1022 ownerDocument should not be null
ok 1023 newDocType should be null
ok 1024 ownerDocument should not be null
ok 1025 newDocType should be null
ok 1026 ownerDocument should not be null
# domimplementationcreatedocument - domimplementationcreatedocumenttype02
ok 1027 newDocType should be null
ok 1028 ownerDocument should not be null _:_
ok 1029 newDocType should be null
ok 1030 ownerDocument should not be null _:h0
ok 1031 newDocType should be null
ok 1032 ownerDocument should not be null _:test
ok 1033 newDocType should be null
ok 1034 ownerDocument should not be null _:_.
ok 1035 newDocType should be null
ok 1036 ownerDocument should not be null _:a-
ok 1037 newDocType should be null
ok 1038 ownerDocument should not be null l_:_
ok 1039 newDocType should be null
ok 1040 ownerDocument should not be null ns:_0
ok 1041 newDocType should be null
ok 1042 ownerDocument should not be null ns:a0
ok 1043 newDocType should be null
ok 1044 ownerDocument should not be null ns0:test
ok 1045 newDocType should be null
ok 1046 ownerDocument should not be null ns:EEE.
ok 1047 newDocType should be null
ok 1048 ownerDocument should not be null ns:_-
ok 1049 newDocType should be null
ok 1050 ownerDocument should not be null a.b:c
ok 1051 newDocType should be null
ok 1052 ownerDocument should not be null a-b:c.j
ok 1053 newDocType should be null
ok 1054 ownerDocument should not be null a-b:c
# domimplementationcreatedocument - domimplementationcreatedocumenttype04
ok 1055 domimplementationcreatedocumenttype04
ok 1056 domimplementationcreatedocumenttype04
ok 1057 domimplementationcreatedocumenttype04
ok 1058 domimplementationcreatedocumenttype04
ok 1059 domimplementationcreatedocumenttype04
ok 1060 domimplementationcreatedocumenttype04
ok 1061 domimplementationcreatedocumenttype04
ok 1062 domimplementationcreatedocumenttype04
ok 1063 domimplementationcreatedocumenttype04
ok 1064 domimplementationcreatedocumenttype04
ok 1065 domimplementationcreatedocumenttype04
ok 1066 domimplementationcreatedocumenttype04
ok 1067 domimplementationcreatedocumenttype04
ok 1068 domimplementationcreatedocumenttype04
# domimplementationfeaturecore - domimplementationfeaturecore
ok 1069 domimplementationFeaturecore
# domimplementationfeaturexmlversion2 - domimplementationfeaturexmlversion2
ok 1070 domimplementationFeaturexmlVersion2
# elementgetattributenodens - elementgetattributenodens01
ok 1071 elementgetattributenodens01_attrValue
ok 1072 elementgetattributenodens01_attrName
ok 1073 elementgetattributenodens01_attrNodeName
ok 1074 elementgetattributenodens01_attrLocalName
ok 1075 elementgetattributenodens01_attrNs
# elementgetattributenodens - elementgetattributenodens02
ok 1076 elementgetattributenodens02
# elementgetelementsbytagnamens - elementgetelementsbytagnamens02
ok 1077 elementgetelementsbytagnamens02
# elementgetelementsbytagnamens - elementgetelementsbytagnamens04
ok 1078 elementgetelementsbytagnamens04_1
ok 1079 elementgetelementsbytagnamens04_2
# elementgetelementsbytagnamens - elementgetelementsbytagnamens05
ok 1080 elementgetelementsbytagnamens05
# elementhasattribute - elementhasattribute01
ok 1081 state should be *false*
# elementhasattribute - elementhasattribute03
ok 1082 state should be *false*
ok 1083 elementhasattribute03_True
# elementhasattribute - elementhasattribute04
ok 1084 elementhasattribute04
# elementhasattributens - elementhasattributens01
ok 1085 elementhasattributens01
# elementhasattributens - elementhasattributens02
ok 1086 hasDomesticAttr
# elementhasattributens - elementhasattributens03
ok 1087 element should be null
ok 1088 elementhasattributens03
# elementremoveattributens - elementremoveattributens01
ok 1089 should be undefined
ok 1090 state should be *false*
# elementsetattributenodens - elementsetattributenodens01
ok 1091 elementsetattributenodens01_attrName
ok 1092 elementsetattributenodens01_attrNS
ok 1093 length
# elementsetattributenodens - elementsetattributenodens03
ok 1094 elementsetattributenodens03
# elementsetattributenodens - elementsetattributenodens04
ok 1095 elementsetattributenodens04
# elementsetattributens - elementsetattributens01
ok 1096 elementsetattributens01_attrName
ok 1097 elementsetattributens01_attrValue
# elementsetattributens - elementsetattributens02
ok 1098 elementsetattributens02_attrName
ok 1099 elementsetattributens02_attrValue
# elementsetattributens - elementsetattributens03
ok 1100 element should be null
ok 1101 elementsetattributens03_attrName
ok 1102 elementsetattributens03_attrValue
# elementsetattributens - elementsetattributens04
ok 1103 elementsetattributens04
ok 1104 elementsetattributens04
ok 1105 elementsetattributens04
ok 1106 elementsetattributens04
ok 1107 elementsetattributens04
ok 1108 elementsetattributens04
ok 1109 elementsetattributens04
ok 1110 elementsetattributens04
ok 1111 elementsetattributens04
# elementsetattributens - elementsetattributens05
ok 1112 elementsetattributens05
# elementsetattributens - elementsetattributens08
ok 1113 elementsetattributens08_Err1
ok 1114 elementsetattributens08_Err2
# elementsetattributens - elementsetattributens09
ok 1115 getAttribute
ok 1116 getAttributeNS with ''
ok 1117 getAttributeNS with null
# elementsetattributensurinull - elementsetattributensurinull
ok 1118 throw_NAMESPACE_ERR
# getAttributeNS - getAttributeNS01
ok 1119 attrValue
# getAttributeNS - getAttributeNS02
ok 1120 testAddr should be null
ok 1121 throw_Equals
# getAttributeNS - getAttributeNS03
ok 1122 testAddr should be null
ok 1123 throw_Equals
# getAttributeNS - getAttributeNS04
ok 1124 testAddr should be null
ok 1125 throw_Equals
# getAttributeNS - getAttributeNS05
ok 1126 testAddr should be null
ok 1127 attrValue
# getAttributeNodeNS - getAttributeNodeNS01
ok 1128 testAddr should be null
ok 1129 attribute should not be null
# getAttributeNodeNS - getAttributeNodeNS02
ok 1130 testAddr should be null
ok 1131 attrName
# getElementById - getElementById01
ok 1132 throw_Equals
# getElementById - getElementById02
ok 1133 element should not be null
# getElementsByTagNameNS - getElementsByTagNameNS01
ok 1134 throw_Size
# getElementsByTagNameNS - getElementsByTagNameNS02
ok 1135 employeeCount
ok 1136 prefix
ok 1137 lname
# getElementsByTagNameNS - getElementsByTagNameNS03
ok 1138 nodeNames
# getElementsByTagNameNS - getElementsByTagNameNS04
ok 1139 nodeNames
# getElementsByTagNameNS - getElementsByTagNameNS05
ok 1140 throw_Size
# getElementsByTagNameNS - getElementsByTagNameNS06
ok 1141 matchSize
# getElementsByTagNameNS - getElementsByTagNameNS07
ok 1142 addresses
# getElementsByTagNameNS - getElementsByTagNameNS08
ok 1143 listSize
# getElementsByTagNameNS - getElementsByTagNameNS09
ok 1144 employeeCount
ok 1145 prefix
ok 1146 lname
# getElementsByTagNameNS - getElementsByTagNameNS10
ok 1147 nodeNames
# getElementsByTagNameNS - getElementsByTagNameNS11
ok 1148 nodeNames
# getElementsByTagNameNS - getElementsByTagNameNS12
ok 1149 size
# getElementsByTagNameNS - getElementsByTagNameNS13
ok 1150 matchSize
# getElementsByTagNameNS - getElementsByTagNameNS14
ok 1151 addresses
# getNamedItemNS - getNamedItemNS01
ok 1152 attrName
# getNamedItemNS - getNamedItemNS02
ok 1153 newAttr should not be null
# hasAttribute - hasAttribute01
ok 1154 state should be *false*
# hasAttribute - hasAttribute03
ok 1155 state should be *false*
# hasAttribute - hasAttribute04
ok 1156 hasDomesticAttr
# hasAttributeNS - hasAttributeNS01
ok 1157 state should be *false*
# hasAttributeNS - hasAttributeNS02
ok 1158 state should be *false*
# hasAttributeNS - hasAttributeNS03
ok 1159 testNode should be null
ok 1160 state should be *false*
# hasAttributeNS - hasAttributeNS05
ok 1161 hasAttribute
# hasAttributeNS - hasAttributeNS06
ok 1162 getAttributeNS with ''
ok 1163 getAttributeNS with null
# hasAttributes - hasAttributes01
ok 1164 state should be *false*
# hasAttributes - hasAttributes02
ok 1165 throw_True
# importNode - importNode03
ok 1166 ownerDocument should be null
ok 1167 (unnamed assert)
ok 1168 nodeValue
# importNode - importNode04
ok 1169 throw_Size
ok 1170 descendant1
# importNode - importNode05
ok 1171 element should be null
ok 1172 hasChild should be *false*
ok 1173 (unnamed assert)
ok 1174 nodeName
# importNode - importNode06
ok 1175 element should be null
ok 1176 throw_True
ok 1177 nodeName
ok 1178 nodeValue
# importNode - importNode08
ok 1179 hasChild should be *false*
ok 1180 (unnamed assert)
# importNode - importNode14
ok 1181 ownerDocument should be null
ok 1182 (unnamed assert)
ok 1183 piTarget
ok 1184 piData
# importNode - importNode15
ok 1185 ownerDocument should be null
ok 1186 (unnamed assert)
ok 1187 nodeValue
# importNode - importNode17
ok 1188 throw_NOT_SUPPORTED_ERR
# localName - localName01
ok 1189 testAddr should be null
ok 1190 localName
# localName - localName02
ok 1191 localName should be "test:employee"
# localName - localName03
ok 1192 localName should not be null
# localName - localName04
ok 1193 lname
# namednodemapgetnameditemns - namednodemapgetnameditemns02
ok 1194 namednodemapgetnameditemns02
# namednodemapgetnameditemns - namednodemapgetnameditemns03
ok 1195 namednodemapgetnameditemns03
# namednodemapgetnameditemns - namednodemapgetnameditemns04
ok 1196 namednodemapgetnameditemns04
# namednodemapgetnameditemns - namednodemapgetnameditemns05
ok 1197 attribute should not be null
# namednodemapgetnameditemns - namednodemapgetnameditemns06
ok 1198 namednodemapgetnameditemnsMap106
ok 1199 namednodemapgetnameditemnsMap206
# namednodemapremovenameditemns - namednodemapremovenameditemns01
ok 1200 attribute should not be null
# namednodemapremovenameditemns - namednodemapremovenameditemns03
ok 1201 namednodemapremovenameditemns02
# namednodemapremovenameditemns - namednodemapremovenameditemns04
ok 1202 attribute should not be null
ok 1203 attribute should not be null
# namednodemapremovenameditemns - namednodemapremovenameditemns06
ok 1204 throw_NOT_FOUND_ERR
# namednodemapremovenameditemns - namednodemapremovenameditemns07
ok 1205 throw_NOT_FOUND_ERR
# namednodemapremovenameditemns - namednodemapremovenameditemns08
ok 1206 should be undefined
ok 1207 throw_NOT_FOUND_ERR
# namednodemapremovenameditemns - namednodemapremovenameditemns09
ok 1208 attribute should not be null
# namednodemapsetnameditemns - namednodemapsetnameditemns01
ok 1209 namednodemapsetnameditemns01
# namednodemapsetnameditemns - namednodemapsetnameditemns02
ok 1210 namednodemapsetnameditemns02
# namednodemapsetnameditemns - namednodemapsetnameditemns06
ok 1211 namednodemapsetnameditemns06
# namednodemapsetnameditemns - namednodemapsetnameditemns07
ok 1212 namednodemapsetnameditemns07
# namednodemapsetnameditemns - namednodemapsetnameditemns08
ok 1213 namednodemapsetnameditemns08
# namespaceURI - namespaceURI01
ok 1214 namespaceURI
# namespaceURI - namespaceURI02
ok 1215 testAddr should be null
ok 1216 namespaceURI
# namespaceURI - namespaceURI03
ok 1217 testEmployee should be null
ok 1218 namespaceURI
# namespaceURI - namespaceURI04
ok 1219 employeeNamespace should not be null
# nodegetlocalname - nodegetlocalname03
ok 1220 nodegetlocalname03_localElemName
ok 1221 nodegetlocalname03_localQElemName
ok 1222 nodegetlocalname03_localAttrName
ok 1223 nodegetlocalname03_localQAttrName
# nodegetlocalname - nodegetnamespaceuri03
ok 1224 nodegetnamespaceuri03_elemNSURI
ok 1225 elemNSURINull should not be null
ok 1226 nodegetnamespaceuri03_attrNSURI
ok 1227 attrNSURINull should not be null
# nodegetlocalname - nodegetownerdocument01
ok 1228 ownerDoc should not be null
# nodegetlocalname - nodegetownerdocument02
ok 1229 ownerDocDoc should not be null
ok 1230 ownerDocElem should be null
# nodegetlocalname - nodegetprefix03
ok 1231 elemNoPrefix should not be null
ok 1232 nodegetprefix03_2
ok 1233 attrNoPrefix should not be null
ok 1234 nodegetprefix03_4
# nodehasattributes - nodehasattributes01
ok 1235 hasAttributes should be *false*
ok 1236 nodehasattributes01_2
# nodehasattributes - nodehasattributes04
ok 1237 nodehasattributes04
# nodenormalize - normalize01
ok 1238 data
# ownerDocument - ownerDocument01
ok 1239 ownerDocument should not be null
# ownerDocument - ownerElement01
ok 1240 throw_Equals
# ownerDocument - ownerElement02
ok 1241 elementNode should not be null
# prefix - prefix01
ok 1242 prefix should not be null
# prefix - prefix02
ok 1243 testEmployee should be null
ok 1244 prefix should not be null
# prefix - prefix03
ok 1245 testEmployee should be null
ok 1246 prefix
# prefix - prefix04
ok 1247 prefix should not be null
# prefix - publicId01
ok 1248 throw_Equals
# remove attribute or namedItem NS - removeAttributeNS03
ok 1249 should be undefined
# remove attribute or namedItem NS - removeNamedItemNS01
ok 1250 removedNode should not be null
ok 1251 newAttr should be null
# remove attribute or namedItem NS - removeNamedItemNS02
ok 1252 throw_NOT_FOUND_ERR
# setAttributeNS - setAttributeNS01
ok 1253 throw_INVALID_CHARACTER_ERR
# setAttributeNS - setAttributeNS02
ok 1254 throw_NAMESPACE_ERR
# setAttributeNS - setAttributeNS04_modified
ok 1255 testAddr should not be null
ok 1256 (unnamed assert)
ok 1257 (unnamed assert)
ok 1258 (unnamed assert)
ok 1259 (unnamed assert)
# setAttributeNS - setAttributeNS05
ok 1260 testAddr should not be null
ok 1261 (unnamed assert)
# setAttributeNS - setAttributeNS06
ok 1262 throw_NAMESPACE_ERR
# setAttributeNS - setAttributeNS07
ok 1263 throw_NAMESPACE_ERR
# setAttributeNS - setAttributeNS09
ok 1264 testAddr should not be null
ok 1265 (unnamed assert)
ok 1266 (unnamed assert)
ok 1267 (unnamed assert)
ok 1268 (unnamed assert)
# setAttributeNS - setAttributeNS10
ok 1269 throw_INVALID_CHARACTER_ERR
# setAttributeNodeNS - setAttributeNodeNS01
ok 1270 empAddrNotNull
ok 1271 throw_INUSE_ATTRIBUTE_ERR
# setAttributeNodeNS - setAttributeNodeNS03
ok 1272 testAddr should not be null
ok 1273 newAddrAttr should be null
# setAttributeNodeNS - setAttributeNodeNS04
ok 1274 testAddr should not be null
ok 1275 (unnamed assert)
# setNamedItemNS - setNamedItemNS01
ok 1276 throw_INUSE_ATTRIBUTE_ERR
# setNamedItemNS - setNamedItemNS03
ok 1277 (unnamed assert)
# setNamedItemNS - setNamedItemNS05
ok 1278 (unnamed assert)
# systemId01
ok 1279 (unnamed assert)
# memoizationQueriesCleared
ok 1280 address count should be incremented after adding element w/ matching NS
# tests - HTMLAnchorElement01
ok 1281 Asize
ok 1282 accessKeyLink
# tests - HTMLAnchorElement02
ok 1283 Asize
ok 1284 charsetLink
# tests - HTMLAnchorElement03
ok 1285 Asize
ok 1286 coordsLink
# tests - HTMLAnchorElement04
ok 1287 Asize
ok 1288 hrefLink
# tests - HTMLAnchorElement05
ok 1289 Asize
ok 1290 hreflangLink
# tests - HTMLAnchorElement06
ok 1291 Asize
ok 1292 nameLink
# tests - HTMLAnchorElement07
ok 1293 Asize
ok 1294 relLink
# tests - HTMLAnchorElement08
ok 1295 Asize
ok 1296 revLink
# tests - HTMLAnchorElement09
ok 1297 Asize
ok 1298 shapeLink
# tests - HTMLAnchorElement10
ok 1299 Asize
ok 1300 tabIndexLink
# tests - HTMLAnchorElement11
ok 1301 Asize
ok 1302 targetLink
# tests - HTMLAnchorElement12
ok 1303 Asize
ok 1304 typeLink
# tests - HTMLAnchorElement13
ok 1305 Asize
# tests - HTMLAnchorElement14
ok 1306 Asize
# tests - HTMLAnchorElement15
ok 1307 Asize
ok 1308 a.hostname relative
# tests - HTMLAnchorElement16
ok 1309 Asize
ok 1310 a.hostname absolute
# tests - HTMLAnchorElement17
ok 1311 Asize
ok 1312 a.pathname relative with ./
# tests - HTMLAnchorElement18
ok 1313 Asize
ok 1314 a.pathname absolute
# tests - HTMLAnchorElement19
ok 1315 Asize
ok 1316 a.host
ok 1317 Asize
ok 1318 a.host
# tests - HTMLAnchorElement20
ok 1319 Asize
ok 1320 a.host
ok 1321 a.hash
# tests - HTMLAnchorElement21
ok 1322 Asize
ok 1323 a.port
ok 1324 Asize
ok 1325 a.port
# tests - HTMLAnchorElement22
ok 1326 Asize
ok 1327 a.protocol
ok 1328 Asize
ok 1329 a.protocol
ok 1330 Asize
ok 1331 a.protocol
ok 1332 Asize
ok 1333 a.protocol
ok 1334 Asize
ok 1335 a.protocol
# tests - HTMLAnchorElement23
ok 1336 A size
ok 1337 A.href is empty
# tests - HTMLAnchorElement24
ok 1338 A size
ok 1339 A.pathname is empty
# tests - HTMLAnchorElement25
ok 1340 A size
ok 1341 A.username
# tests - HTMLAnchorElement26
ok 1342 A size
ok 1343 A.password
# tests - HTMLAnchorElement27
ok 1344 A size
ok 1345 a.origin
ok 1346 A size
ok 1347 a.origin
ok 1348 A size
ok 1349 a.origin
ok 1350 A size
ok 1351 a.origin
ok 1352 A size
ok 1353 a.origin
# tests - HTMLAnchorElement28
ok 1354 A size
ok 1355 a.search
ok 1356 A size
ok 1357 A.search
# tests - HTMLAppletElement01
ok 1358 Asize
ok 1359 alignLink
# tests - HTMLAppletElement02
ok 1360 Asize
ok 1361 altLink
# tests - HTMLAppletElement03
ok 1362 Asize
ok 1363 archiveLink
# tests - HTMLAppletElement04
ok 1364 Asize
ok 1365 codeLink
# tests - HTMLAppletElement05
ok 1366 Asize
ok 1367 codebase
# tests - HTMLAppletElement06
ok 1368 Asize
ok 1369 heightLink
# tests - HTMLAppletElement07
ok 1370 Asize
ok 1371 hspaceLink
# tests - HTMLAppletElement08
ok 1372 Asize
ok 1373 nameLink
# tests - HTMLAppletElement09
ok 1374 Asize
ok 1375 vspaceLink
# tests - HTMLAppletElement10
ok 1376 Asize
ok 1377 widthLink
# tests - HTMLAppletElement11
ok 1378 Asize
ok 1379 object
# tests - HTMLAreaElement01
ok 1380 Asize
ok 1381 alignLink
# tests - HTMLAreaElement02
ok 1382 Asize
ok 1383 altLink
# tests - HTMLAreaElement03
ok 1384 Asize
ok 1385 coordsLink
# tests - HTMLAreaElement04
ok 1386 Asize
ok 1387 hrefLink
# tests - HTMLAreaElement05
ok 1388 Asize
ok 1389 vnohref should be *false*
# tests - HTMLAreaElement06
ok 1390 Asize
ok 1391 shapeLink
# tests - HTMLAreaElement07
ok 1392 Asize
ok 1393 tabIndexLink
# tests - HTMLAreaElement08
ok 1394 Asize
ok 1395 targetLink
# tests - HTMLBRElement01
ok 1396 Asize
ok 1397 clearLink
# tests - HTMLBaseElement01
ok 1398 Asize
ok 1399 hrefLink
# tests - HTMLBaseElement02
ok 1400 Asize
ok 1401 targetLink
# tests - HTMLBodyElement01
ok 1402 Asize
ok 1403 aLinkLink
# tests - HTMLBodyElement02
ok 1404 Asize
ok 1405 backgroundLink
# tests - HTMLBodyElement03
ok 1406 Asize
ok 1407 bgColorLink
# tests - HTMLBodyElement04
ok 1408 Asize
ok 1409 linkLink
# tests - HTMLBodyElement05
ok 1410 Asize
ok 1411 textLink
# tests - HTMLBodyElement06
ok 1412 Asize
ok 1413 vLinkLink
# tests - HTMLButtonElement01
ok 1414 Asize
ok 1415 formLink
# tests - HTMLButtonElement02
ok 1416 Asize
ok 1417 vform should be null
# tests - HTMLButtonElement03
ok 1418 Asize
ok 1419 accessKeyLink
# tests - HTMLButtonElement04
ok 1420 Asize
ok 1421 disabledLink
# tests - HTMLButtonElement05
ok 1422 Asize
ok 1423 nameLink
# tests - HTMLButtonElement06
ok 1424 Asize
ok 1425 tabIndexLink
# tests - HTMLButtonElement07
ok 1426 Asize
ok 1427 typeLink
# tests - HTMLButtonElement08
ok 1428 Asize
ok 1429 valueLink
# tests - HTMLCollection01
ok 1430 Asize
ok 1431 rowIndexLink
# tests - HTMLCollection02
ok 1432 Asize
ok 1433 nameIndexLink
# tests - HTMLCollection03
ok 1434 Asize
ok 1435 nameIndexLink
# tests - HTMLCollection04
ok 1436 Asize
ok 1437 rowIndexLink
# tests - HTMLCollection05
ok 1438 Asize
ok 1439 rowIndexLink
# tests - HTMLCollection06
ok 1440 Asize
ok 1441 rowIndexLink
# tests - HTMLCollection07
ok 1442 Asize
ok 1443 rowIndexLink
# tests - HTMLCollection08
ok 1444 Asize
ok 1445 rowIndexLink
# tests - HTMLCollection09
ok 1446 Asize
ok 1447 rowNode should be null
# tests - HTMLCollection10
ok 1448 Asize
ok 1449 nameIndexLink
# tests - HTMLCollection11
ok 1450 Asize
ok 1451 nameIndexLink
# tests - HTMLCollection12
ok 1452 Asize
ok 1453 formNode should be null
# tests - HTMLDirectoryElement01
ok 1454 Asize
ok 1455 compactLink
# tests - HTMLDivElement01
ok 1456 Asize
ok 1457 alignLink
# tests - HTMLDlistElement01
ok 1458 Asize
ok 1459 compactLink
# tests - HTMLDocument01
ok 1460 titleLink
# tests - HTMLDocument02
ok 1461 referrerLink
ok 1462 referrerLink
# tests - HTMLDocument04
ok 1463 URLLink
# tests - HTMLDocument05
ok 1464 idLink
# tests - HTMLDocument07
ok 1465 lengthLink
# tests - HTMLDocument08
ok 1466 length
# tests - HTMLDocument09
ok 1467 lengthLink
# tests - HTMLDocument10
ok 1468 lengthLink
# tests - HTMLDocument11
ok 1469 lengthLink
# tests - HTMLDocument12
ok 1470 cookieLink
ok 1471 cookieLink
ok 1472 cookieLink
ok 1473 cookieLink
ok 1474 cookieLink
ok 1475 cookieLink
ok 1476 cookieLink
# tests - HTMLDocument13
ok 1477 Asize
# tests - HTMLDocument14
ok 1478 Asize
# tests - HTMLDocument15
ok 1479 elementId
# tests - HTMLDocument16
ok 1480 elementNode should be null
# tests - HTMLDocument17
# tests - HTMLDocument18
# tests - HTMLDocument19
# tests - HTMLDocument20
# tests - HTMLDocument21
# tests - HTMLElement01
ok 1481 Asize
ok 1482 idLink
# tests - HTMLElement02
ok 1483 Asize
ok 1484 idLink
# tests - HTMLElement03
ok 1485 Asize
ok 1486 idLink
# tests - HTMLElement04
ok 1487 Asize
ok 1488 idLink
# tests - HTMLElement05
ok 1489 Asize
ok 1490 idLink
# tests - HTMLElement06
ok 1491 Asize
ok 1492 idLink
# tests - HTMLElement07
ok 1493 Asize
ok 1494 idLink
# tests - HTMLElement08
ok 1495 Asize
ok 1496 idLink
# tests - HTMLElement09
ok 1497 Asize
ok 1498 idLink
# tests - HTMLElement10
ok 1499 Asize
ok 1500 idLink
# tests - HTMLElement100
ok 1501 Asize
ok 1502 dirLink
# tests - HTMLElement101
ok 1503 Asize
ok 1504 dirLink
# tests - HTMLElement102
ok 1505 Asize
ok 1506 dirLink
# tests - HTMLElement103
ok 1507 Asize
ok 1508 dirLink
# tests - HTMLElement104
ok 1509 Asize
ok 1510 dirLink
# tests - HTMLElement105
ok 1511 Asize
ok 1512 dirLink
# tests - HTMLElement106
ok 1513 Asize
ok 1514 dirLink
# tests - HTMLElement107
ok 1515 Asize
ok 1516 dirLink
# tests - HTMLElement108
ok 1517 Asize
ok 1518 dirLink
# tests - HTMLElement109
ok 1519 Asize
ok 1520 dirLink
# tests - HTMLElement11
ok 1521 Asize
ok 1522 idLink
# tests - HTMLElement110
ok 1523 Asize
ok 1524 dirLink
# tests - HTMLElement111
ok 1525 Asize
ok 1526 dirLink
# tests - HTMLElement112
ok 1527 Asize
ok 1528 dirLink
# tests - HTMLElement113
ok 1529 Asize
ok 1530 dirLink
# tests - HTMLElement114
ok 1531 Asize
ok 1532 dirLink
# tests - HTMLElement115
ok 1533 Asize
ok 1534 dirLink
# tests - HTMLElement116
ok 1535 Asize
ok 1536 dirLink
# tests - HTMLElement117
ok 1537 Asize
ok 1538 classNameLink
# tests - HTMLElement118
ok 1539 Asize
ok 1540 classNameLink
# tests - HTMLElement119
ok 1541 Asize
ok 1542 classNameLink
# tests - HTMLElement12
ok 1543 Asize
ok 1544 idLink
# tests - HTMLElement120
ok 1545 Asize
ok 1546 classNameLink
# tests - HTMLElement121
ok 1547 Asize
ok 1548 classNameLink
# tests - HTMLElement122
ok 1549 Asize
ok 1550 classNameLink
# tests - HTMLElement123
ok 1551 Asize
ok 1552 classNameLink
# tests - HTMLElement124
ok 1553 Asize
ok 1554 classNameLink
# tests - HTMLElement125
ok 1555 Asize
ok 1556 classNameLink
# tests - HTMLElement126
ok 1557 Asize
ok 1558 classNameLink
# tests - HTMLElement127
ok 1559 Asize
ok 1560 classNameLink
# tests - HTMLElement128
ok 1561 Asize
ok 1562 classNameLink
# tests - HTMLElement129
ok 1563 Asize
ok 1564 classNameLink
# tests - HTMLElement13
ok 1565 Asize
ok 1566 idLink
# tests - HTMLElement130
ok 1567 Asize
ok 1568 classNameLink
# tests - HTMLElement131
ok 1569 Asize
ok 1570 classNameLink
# tests - HTMLElement132
ok 1571 Asize
ok 1572 classNameLink
# tests - HTMLElement133
ok 1573 Asize
ok 1574 classNameLink
# tests - HTMLElement134
ok 1575 Asize
ok 1576 classNameLink
# tests - HTMLElement135
ok 1577 Asize
ok 1578 classNameLink
# tests - HTMLElement136
ok 1579 Asize
ok 1580 classNameLink
# tests - HTMLElement137
ok 1581 Asize
ok 1582 classNameLink
# tests - HTMLElement138
ok 1583 Asize
ok 1584 classNameLink
# tests - HTMLElement139
ok 1585 Asize
ok 1586 classNameLink
# tests - HTMLElement14
ok 1587 Asize
ok 1588 idLink
# tests - HTMLElement140
ok 1589 Asize
ok 1590 classNameLink
# tests - HTMLElement141
ok 1591 Asize
ok 1592 classNameLink
# tests - HTMLElement142
ok 1593 Asize
ok 1594 classNameLink
# tests - HTMLElement143
ok 1595 Asize
ok 1596 classNameLink
# tests - HTMLElement144
ok 1597 Asize
ok 1598 classNameLink
# tests - HTMLElement145
ok 1599 Asize
ok 1600 classNameLink
# tests - HTMLElement15
ok 1601 Asize
ok 1602 idLink
# tests - HTMLElement16
ok 1603 Asize
ok 1604 idLink
# tests - HTMLElement17
ok 1605 Asize
ok 1606 idLink
# tests - HTMLElement18
ok 1607 Asize
ok 1608 idLink
# tests - HTMLElement19
ok 1609 Asize
ok 1610 idLink
# tests - HTMLElement20
ok 1611 Asize
ok 1612 idLink
# tests - HTMLElement21
ok 1613 Asize
ok 1614 idLink
# tests - HTMLElement22
ok 1615 Asize
ok 1616 idLink
# tests - HTMLElement23
ok 1617 Asize
ok 1618 idLink
# tests - HTMLElement24
ok 1619 Asize
ok 1620 idLink
# tests - HTMLElement25
ok 1621 Asize
ok 1622 idLink
# tests - HTMLElement26
ok 1623 Asize
ok 1624 idLink
# tests - HTMLElement27
ok 1625 Asize
ok 1626 idLink
# tests - HTMLElement28
ok 1627 Asize
ok 1628 idLink
# tests - HTMLElement29
ok 1629 Asize
ok 1630 idLink
# tests - HTMLElement30
ok 1631 Asize
ok 1632 titleLink
# tests - HTMLElement31
ok 1633 Asize
ok 1634 titleLink
# tests - HTMLElement32
ok 1635 Asize
ok 1636 titleLink
# tests - HTMLElement33
ok 1637 Asize
ok 1638 titleLink
# tests - HTMLElement34
ok 1639 Asize
ok 1640 titleLink
# tests - HTMLElement35
ok 1641 Asize
ok 1642 titleLink
# tests - HTMLElement36
ok 1643 Asize
ok 1644 titleLink
# tests - HTMLElement37
ok 1645 Asize
ok 1646 titleLink
# tests - HTMLElement38
ok 1647 Asize
ok 1648 titleLink
# tests - HTMLElement39
ok 1649 Asize
ok 1650 titleLink
# tests - HTMLElement40
ok 1651 Asize
ok 1652 titleLink
# tests - HTMLElement41
ok 1653 Asize
ok 1654 titleLink
# tests - HTMLElement42
ok 1655 Asize
ok 1656 titleLink
# tests - HTMLElement43
ok 1657 Asize
ok 1658 titleLink
# tests - HTMLElement44
ok 1659 Asize
ok 1660 titleLink
# tests - HTMLElement45
ok 1661 Asize
ok 1662 titleLink
# tests - HTMLElement46
ok 1663 Asize
ok 1664 titleLink
# tests - HTMLElement47
ok 1665 Asize
ok 1666 titleLink
# tests - HTMLElement48
ok 1667 Asize
ok 1668 titleLink
# tests - HTMLElement49
ok 1669 Asize
ok 1670 titleLink
# tests - HTMLElement50
ok 1671 Asize
ok 1672 titleLink
# tests - HTMLElement51
ok 1673 Asize
ok 1674 titleLink
# tests - HTMLElement52
ok 1675 Asize
ok 1676 titleLink
# tests - HTMLElement53
ok 1677 Asize
ok 1678 titleLink
# tests - HTMLElement54
ok 1679 Asize
ok 1680 titleLink
# tests - HTMLElement55
ok 1681 Asize
ok 1682 titleLink
# tests - HTMLElement56
ok 1683 Asize
ok 1684 titleLink
# tests - HTMLElement57
ok 1685 Asize
ok 1686 titleLink
# tests - HTMLElement58
ok 1687 Asize
ok 1688 titleLink
# tests - HTMLElement59
ok 1689 Asize
ok 1690 langLink
# tests - HTMLElement60
ok 1691 Asize
ok 1692 langLink
# tests - HTMLElement61
ok 1693 Asize
ok 1694 langLink
# tests - HTMLElement62
ok 1695 Asize
ok 1696 langLink
# tests - HTMLElement63
ok 1697 Asize
ok 1698 langLink
# tests - HTMLElement64
ok 1699 Asize
ok 1700 langLink
# tests - HTMLElement65
ok 1701 Asize
ok 1702 langLink
# tests - HTMLElement66
ok 1703 Asize
ok 1704 langLink
# tests - HTMLElement67
ok 1705 Asize
ok 1706 langLink
# tests - HTMLElement68
ok 1707 Asize
ok 1708 langLink
# tests - HTMLElement69
ok 1709 Asize
ok 1710 langLink
# tests - HTMLElement70
ok 1711 Asize
ok 1712 langLink
# tests - HTMLElement71
ok 1713 Asize
ok 1714 langLink
# tests - HTMLElement72
ok 1715 Asize
ok 1716 langLink
# tests - HTMLElement73
ok 1717 Asize
ok 1718 langLink
# tests - HTMLElement74
ok 1719 Asize
ok 1720 langLink
# tests - HTMLElement75
ok 1721 Asize
ok 1722 langLink
# tests - HTMLElement76
ok 1723 Asize
ok 1724 langLink
# tests - HTMLElement77
ok 1725 Asize
ok 1726 langLink
# tests - HTMLElement78
ok 1727 Asize
ok 1728 langLink
# tests - HTMLElement79
ok 1729 Asize
ok 1730 langLink
# tests - HTMLElement80
ok 1731 Asize
ok 1732 langLink
# tests - HTMLElement81
ok 1733 Asize
ok 1734 langLink
# tests - HTMLElement82
ok 1735 Asize
ok 1736 langLink
# tests - HTMLElement83
ok 1737 Asize
ok 1738 langLink
# tests - HTMLElement84
ok 1739 Asize
ok 1740 langLink
# tests - HTMLElement85
ok 1741 Asize
ok 1742 langLink
# tests - HTMLElement86
ok 1743 Asize
ok 1744 langLink
# tests - HTMLElement87
ok 1745 Asize
ok 1746 langLink
# tests - HTMLElement88
ok 1747 Asize
ok 1748 dirLink
# tests - HTMLElement89
ok 1749 Asize
ok 1750 dirLink
# tests - HTMLElement90
ok 1751 Asize
ok 1752 dirLink
# tests - HTMLElement91
ok 1753 Asize
ok 1754 dirLink
# tests - HTMLElement92
ok 1755 Asize
ok 1756 dirLink
# tests - HTMLElement93
ok 1757 Asize
ok 1758 dirLink
# tests - HTMLElement94
ok 1759 Asize
ok 1760 dirLink
# tests - HTMLElement95
ok 1761 Asize
ok 1762 dirLink
# tests - HTMLElement96
ok 1763 Asize
ok 1764 dirLink
# tests - HTMLElement97
ok 1765 Asize
ok 1766 dirLink
# tests - HTMLElement98
ok 1767 Asize
ok 1768 dirLink
# tests - HTMLElement99
ok 1769 Asize
ok 1770 dirLink
# tests - HTMLFieldSetElement01
ok 1771 Asize
ok 1772 formLink
# tests - HTMLFieldSetElement02
ok 1773 Asize
ok 1774 vform should be null
# tests - HTMLFontElement01
ok 1775 Asize
ok 1776 colorLink
# tests - HTMLFontElement02
ok 1777 Asize
ok 1778 faceLink
# tests - HTMLFontElement03
ok 1779 Asize
ok 1780 sizeLink
# tests - HTMLFormElement01
ok 1781 Asize
ok 1782 elementsLink
# tests - HTMLFormElement02
ok 1783 Asize
ok 1784 lengthLink
# tests - HTMLFormElement03
ok 1785 Asize
ok 1786 nameLink
# tests - HTMLFormElement04
ok 1787 Asize
ok 1788 acceptCharsetLink
# tests - HTMLFormElement05
ok 1789 Asize
ok 1790 actionLink
# tests - HTMLFormElement06
ok 1791 Asize
ok 1792 enctypeLink
# tests - HTMLFormElement07
ok 1793 Asize
ok 1794 methodLink
# tests - HTMLFormElement08
ok 1795 Asize
ok 1796 targetLink
# tests - HTMLFormElement09
ok 1797 Asize
# tests - HTMLFormElement10
ok 1798 Asize
# tests - HTMLFrameElement01
ok 1799 Asize
ok 1800 frameborderLink
# tests - HTMLFrameElement02
ok 1801 Asize
ok 1802 longdescLink
# tests - HTMLFrameElement03
ok 1803 Asize
ok 1804 marginheightLink
# tests - HTMLFrameElement04
ok 1805 Asize
ok 1806 marginwidthLink
# tests - HTMLFrameElement05
ok 1807 Asize
ok 1808 nameLink
# tests - HTMLFrameElement06
ok 1809 Asize
ok 1810 noresizeLink
# tests - HTMLFrameElement07
ok 1811 Asize
ok 1812 scrollingLink
# tests - HTMLFrameElement08
ok 1813 Asize
ok 1814 srcLink
# tests - HTMLFrameElement09
# tests - HTMLFrameSetElement01
ok 1815 Asize
ok 1816 colsLink
# tests - HTMLFrameSetElement02
ok 1817 Asize
ok 1818 rowsLink
# tests - HTMLHRElement01
ok 1819 Asize
ok 1820 alignLink
# tests - HTMLHRElement02
ok 1821 Asize
ok 1822 noShadeLink
# tests - HTMLHRElement03
ok 1823 Asize
ok 1824 sizeLink
# tests - HTMLHRElement04
ok 1825 Asize
ok 1826 widthLink
# tests - HTMLHeadingElement01
ok 1827 Asize
ok 1828 alignLink
# tests - HTMLHeadingElement02
ok 1829 Asize
ok 1830 alignLink
# tests - HTMLHeadingElement03
ok 1831 Asize
ok 1832 alignLink
# tests - HTMLHeadingElement04
ok 1833 Asize
ok 1834 alignLink
# tests - HTMLHeadingElement05
ok 1835 Asize
ok 1836 alignLink
# tests - HTMLHeadingElement06
ok 1837 Asize
ok 1838 alignLink
# tests - HTMLHtmlElement01
ok 1839 Asize
ok 1840 versionLink
# tests - HTMLIFrameElement01
ok 1841 Asize
ok 1842 alignLink
# tests - HTMLIFrameElement02
ok 1843 Asize
ok 1844 frameborderLink
# tests - HTMLIFrameElement03
ok 1845 Asize
ok 1846 heightLink
# tests - HTMLIFrameElement04
ok 1847 Asize
ok 1848 longdescLink
# tests - HTMLIFrameElement05
ok 1849 Asize
ok 1850 marginwidthLink
# tests - HTMLIFrameElement06
ok 1851 Asize
ok 1852 marginheightLink
# tests - HTMLIFrameElement07
ok 1853 Asize
ok 1854 nameLink
# tests - HTMLIFrameElement08
ok 1855 Asize
ok 1856 scrollingLink
# tests - HTMLIFrameElement09
ok 1857 Asize
ok 1858 srcLink
# tests - HTMLIFrameElement10
ok 1859 Asize
ok 1860 widthLink
# tests - HTMLIFrameElement11
# tests - HTMLImageElement01
ok 1861 Asize
ok 1862 nameLink
# tests - HTMLImageElement02
ok 1863 Asize
ok 1864 alignLink
# tests - HTMLImageElement03
ok 1865 Asize
ok 1866 altLink
# tests - HTMLImageElement04
ok 1867 Asize
ok 1868 borderLink
# tests - HTMLImageElement05
ok 1869 Asize
ok 1870 heightLink
# tests - HTMLImageElement06
ok 1871 Asize
ok 1872 hspaceLink
# tests - HTMLImageElement07
ok 1873 Asize
ok 1874 vismap should be *false*
# tests - HTMLImageElement08
ok 1875 Asize
ok 1876 longDescLink
# tests - HTMLImageElement09
ok 1877 Asize
ok 1878 srcLink
# tests - HTMLImageElement10
ok 1879 Asize
ok 1880 useMapLink
# tests - HTMLImageElement11
ok 1881 Asize
ok 1882 vspaceLink
# tests - HTMLImageElement12
ok 1883 Asize
ok 1884 widthLink
# tests - HTMLInputElement01
ok 1885 Asize
ok 1886 defaultValueLink
# tests - HTMLInputElement02
ok 1887 Asize
ok 1888 defaultCheckedLink
# tests - HTMLInputElement03
ok 1889 Asize
ok 1890 formLink
# tests - HTMLInputElement04
ok 1891 Asize
ok 1892 acceptLink
# tests - HTMLInputElement05
ok 1893 Asize
ok 1894 accesskeyLink
# tests - HTMLInputElement06
ok 1895 Asize
ok 1896 alignLink
# tests - HTMLInputElement07
ok 1897 Asize
ok 1898 altLink
# tests - HTMLInputElement08
ok 1899 Asize
ok 1900 checkedLink
# tests - HTMLInputElement09
ok 1901 Asize
ok 1902 disabledLink
# tests - HTMLInputElement10
ok 1903 Asize
ok 1904 maxlengthLink
# tests - HTMLInputElement11
ok 1905 Asize
ok 1906 nameLink
# tests - HTMLInputElement12
ok 1907 Asize
ok 1908 readonlyLink
# tests - HTMLInputElement13
ok 1909 Asize
ok 1910 size
# tests - HTMLInputElement14
ok 1911 Asize
ok 1912 srcLink
# tests - HTMLInputElement15
ok 1913 Asize
ok 1914 tabindexLink
# tests - HTMLInputElement16
ok 1915 Asize
ok 1916 typeLink
# tests - HTMLInputElement17
ok 1917 Asize
ok 1918 usemapLink
# tests - HTMLInputElement18
ok 1919 Asize
ok 1920 valueLink
# tests - HTMLInputElement19
ok 1921 Asize
# tests - HTMLInputElement20
ok 1922 Asize
# tests - HTMLInputElement21
ok 1923 Asize
ok 1924 checked should be *false*
ok 1925 checkedAfterClick
# tests - HTMLInputElement22
ok 1926 Asize
# tests - HTMLInputElementCheckboxClickTogglesCheckedState
ok 1927 (unnamed assert)
ok 1928 (unnamed assert)
ok 1929 (unnamed assert)
# tests - HTMLInputElementDefaultEventClickForCheckboxTogglesCheckedState
ok 1930 (unnamed assert)
ok 1931 (unnamed assert)
ok 1932 (unnamed assert)
# tests - HTMLLIElement01
ok 1933 Asize
ok 1934 typeLink
# tests - HTMLLIElement02
ok 1935 Asize
ok 1936 valueLink
# tests - HTMLLabelElement01
ok 1937 Asize
ok 1938 formLink
# tests - HTMLLabelElement02
ok 1939 Asize
ok 1940 vform should be null
# tests - HTMLLabelElement03
ok 1941 Asize
ok 1942 accesskeyLink
# tests - HTMLLabelElement04
ok 1943 Asize
ok 1944 htmlForLink
# tests - HTMLLegendElement01
ok 1945 Asize
ok 1946 formLink
# tests - HTMLLegendElement02
ok 1947 Asize
ok 1948 vform should be null
# tests - HTMLLegendElement03
ok 1949 Asize
ok 1950 accesskeyLink
# tests - HTMLLegendElement04
ok 1951 Asize
ok 1952 alignLink
# tests - HTMLLinkElement02
ok 1953 Asize
ok 1954 charsetLink
# tests - HTMLLinkElement03
ok 1955 Asize
ok 1956 hrefLink
# tests - HTMLLinkElement04
ok 1957 Asize
ok 1958 hreflangLink
# tests - HTMLLinkElement05
ok 1959 Asize
ok 1960 mediaLink
# tests - HTMLLinkElement06
ok 1961 Asize
ok 1962 relLink
# tests - HTMLLinkElement07
ok 1963 Asize
ok 1964 revLink
# tests - HTMLLinkElement08
ok 1965 Asize
ok 1966 typeLink
# tests - HTMLLinkElement09
ok 1967 Asize
ok 1968 targetLink
# tests - HTMLMapElement01
ok 1969 Asize
ok 1970 areasLink
# tests - HTMLMapElement02
ok 1971 Asize
ok 1972 mapLink
# tests - HTMLMenuElement01
ok 1973 Asize
ok 1974 compactLink
# tests - HTMLMetaElement01
ok 1975 Asize
ok 1976 contentLink
# tests - HTMLMetaElement02
ok 1977 Asize
ok 1978 httpEquivLink
# tests - HTMLMetaElement03
ok 1979 Asize
ok 1980 nameLink
# tests - HTMLMetaElement04
ok 1981 Asize
ok 1982 schemeLink
# tests - HTMLModElement01
ok 1983 Asize
ok 1984 citeLink
# tests - HTMLModElement02
ok 1985 Asize
ok 1986 dateTimeLink
# tests - HTMLModElement03
ok 1987 Asize
ok 1988 citeLink
# tests - HTMLModElement04
ok 1989 Asize
ok 1990 dateTimeLink
# tests - HTMLOListElement01
ok 1991 Asize
ok 1992 compactLink
# tests - HTMLOListElement02
ok 1993 Asize
ok 1994 startLink
# tests - HTMLOListElement03
ok 1995 Asize
ok 1996 typeLink
# tests - HTMLObjectElement01
ok 1997 Asize
ok 1998 idLink
# tests - HTMLObjectElement02
ok 1999 Asize
ok 2000 codeLink
# tests - HTMLObjectElement03
ok 2001 Asize
ok 2002 alignLink
# tests - HTMLObjectElement04
ok 2003 Asize
ok 2004 archiveLink
# tests - HTMLObjectElement05
ok 2005 Asize
ok 2006 borderLink
# tests - HTMLObjectElement06
ok 2007 Asize
ok 2008 codebaseLink
# tests - HTMLObjectElement07
ok 2009 Asize
ok 2010 codetypeLink
# tests - HTMLObjectElement08
ok 2011 Asize
ok 2012 dataLink
# tests - HTMLObjectElement09
ok 2013 Asize
ok 2014 declareLink
# tests - HTMLObjectElement10
ok 2015 Asize
ok 2016 heightLink
# tests - HTMLObjectElement11
ok 2017 Asize
ok 2018 hspaceLink
# tests - HTMLObjectElement12
ok 2019 Asize
ok 2020 alignLink
# tests - HTMLObjectElement13
ok 2021 Asize
ok 2022 tabIndexLink
# tests - HTMLObjectElement14
ok 2023 Asize
ok 2024 typeLink
# tests - HTMLObjectElement15
ok 2025 Asize
ok 2026 useMapLink
# tests - HTMLObjectElement16
ok 2027 Asize
ok 2028 vspaceLink
# tests - HTMLObjectElement17
ok 2029 Asize
ok 2030 widthLink
# tests - HTMLObjectElement18
ok 2031 Asize
ok 2032 vspaceLink
# tests - HTMLObjectElement19
ok 2033 Asize
ok 2034 vform should be null
# tests - HTMLObjectElement20
ok 2035 cd should be null
# tests - HTMLOptGroupElement01
ok 2036 Asize
ok 2037 disabledLink
# tests - HTMLOptGroupElement02
ok 2038 Asize
ok 2039 labelLink
# tests - HTMLOptionElement01
ok 2040 Asize
ok 2041 formLink
# tests - HTMLOptionElement02
ok 2042 Asize
ok 2043 vform should be null
# tests - HTMLOptionElement03
ok 2044 Asize
ok 2045 defaultSelectedLink
# tests - HTMLOptionElement04
ok 2046 Asize
ok 2047 textLink
# tests - HTMLOptionElement05
ok 2048 Asize
ok 2049 indexLink
# tests - HTMLOptionElement06
ok 2050 Asize
ok 2051 disabledLink
# tests - HTMLOptionElement07
ok 2052 Asize
ok 2053 labelLink
# tests - HTMLOptionElement08
ok 2054 Asize
ok 2055 selectedLink
# tests - HTMLOptionElement09
ok 2056 Asize
ok 2057 valueLink
# tests - HTMLOptionElement10
ok 2058 (unnamed assert)
ok 2059 (unnamed assert)
ok 2060 (unnamed assert)
ok 2061 (unnamed assert)
ok 2062 (unnamed assert)
# tests - HTMLOptionElement11
ok 2063 (unnamed assert)
ok 2064 (unnamed assert)
ok 2065 (unnamed assert)
ok 2066 (unnamed assert)
ok 2067 (unnamed assert)
# tests - HTMLOptionElement12
ok 2068 (unnamed assert)
ok 2069 (unnamed assert)
ok 2070 (unnamed assert)
ok 2071 (unnamed assert)
# tests - HTMLOptionsCollection01
ok 2072 Asize
ok 2073 lengthLink
# tests - HTMLOptionsCollection02
ok 2074 Asize
ok 2075 valueIndexLink
# tests - HTMLOptionsCollection03
ok 2076 Asize
ok 2077 nameIndexLink
# tests - HTMLOptionsCollection04
ok 2078 Asize
ok 2079 nameIndexLink
# tests - HTMLOptionsCollection05
ok 2080 Asize
ok 2081 optionsNode should be null
# tests - HTMLOptionsCollection06
ok 2082 Asize
ok 2083 optionsNode should be null
# tests - HTMLOptionsCollection07
ok 2084 Asize
ok 2085 valueIndexLink
# tests - HTMLParagraphElement01
ok 2086 Asize
ok 2087 alignLink
# tests - HTMLParamElement01
ok 2088 Asize
ok 2089 nameLink
# tests - HTMLParamElement02
ok 2090 Asize
ok 2091 valueLink
# tests - HTMLParamElement03
ok 2092 Asize
ok 2093 valueTypeLink
# tests - HTMLParamElement04
ok 2094 Asize
ok 2095 typeLink
# tests - HTMLPreElement01
ok 2096 Asize
ok 2097 widthLink
# tests - HTMLQuoteElement01
ok 2098 Asize
ok 2099 citeLink
# tests - HTMLQuoteElement02
ok 2100 Asize
ok 2101 citeLink
# tests - HTMLScriptElement01
ok 2102 Asize
ok 2103 textLink
# tests - HTMLScriptElement02
ok 2104 Asize
ok 2105 charsetLink
# tests - HTMLScriptElement03
ok 2106 Asize
ok 2107 deferLink
# tests - HTMLScriptElement04
ok 2108 Asize
ok 2109 srcLink
# tests - HTMLScriptElement05
ok 2110 Asize
ok 2111 typeLink
# tests - HTMLScriptElement06
ok 2112 Asize
# tests - HTMLScriptElement07
ok 2113 Asize
# tests - HTMLScriptElement08
ok 2114 Asize
ok 2115 #inlinetest exists and contains correct text
ok 2116 #inlinetest is correctly placed after the script tag that created it
# tests - HTMLScriptElement09
ok 2117 #inlinetest exists and contains correct text
# tests - HTMLSelectElement01
ok 2118 Asize
ok 2119 typeLink
# tests - HTMLSelectElement02
ok 2120 Asize
ok 2121 selectedIndexLink
# tests - HTMLSelectElement03
ok 2122 Asize
# tests - HTMLSelectElement04
ok 2123 Asize
ok 2124 valueLink
# tests - HTMLSelectElement05
ok 2125 Asize
ok 2126 lengthLink
# tests - HTMLSelectElement06
ok 2127 Asize
ok 2128 formLink
# tests - HTMLSelectElement07
ok 2129 Asize
ok 2130 vform should be null
# tests - HTMLSelectElement08
ok 2131 Asize
ok 2132 optionsLink
# tests - HTMLSelectElement09
ok 2133 Asize
ok 2134 disabledLink
# tests - HTMLSelectElement10
ok 2135 Asize
ok 2136 multipleLink
# tests - HTMLSelectElement11
ok 2137 Asize
ok 2138 nameLink
# tests - HTMLSelectElement12
ok 2139 Asize
ok 2140 sizeLink
# tests - HTMLSelectElement13
ok 2141 Asize
ok 2142 tabIndexLink
# tests - HTMLSelectElement14
ok 2143 Asize
# tests - HTMLSelectElement15
ok 2144 Asize
# tests - HTMLSelectElement16
ok 2145 Asize
ok 2146 optLength
ok 2147 selected
# tests - HTMLSelectElement17
ok 2148 Asize
ok 2149 optLength
ok 2150 selected
# tests - HTMLSelectElement18
ok 2151 Asize
ok 2152 optLength
ok 2153 selected
ok 2154 lastValue
# tests - HTMLSelectElement19
ok 2155 Asize
ok 2156 optLength
ok 2157 selected
ok 2158 lastValue
# tests - HTMLSelectElement20
ok 2159 Asize
ok 2160 throw_NOT_FOUND_ERR
# tests - HTMLStyleElement02
ok 2161 Asize
ok 2162 mediaLink
# tests - HTMLStyleElement03
ok 2163 Asize
ok 2164 typeLink
# tests - HTMLTableCaptionElement01
ok 2165 Asize
ok 2166 alignLink
# tests - HTMLTableCellElement01
ok 2167 Asize
ok 2168 cellIndexLink
# tests - HTMLTableCellElement02
ok 2169 Asize
ok 2170 cellIndexLink
# tests - HTMLTableCellElement03
ok 2171 Asize
ok 2172 abbrLink
# tests - HTMLTableCellElement04
ok 2173 Asize
ok 2174 abbrLink
# tests - HTMLTableCellElement05
ok 2175 Asize
ok 2176 alignLink
# tests - HTMLTableCellElement06
ok 2177 Asize
ok 2178 alignLink
# tests - HTMLTableCellElement07
ok 2179 Asize
ok 2180 axisLink
# tests - HTMLTableCellElement08
ok 2181 Asize
ok 2182 axisLink
# tests - HTMLTableCellElement09
ok 2183 Asize
ok 2184 bgColorLink
# tests - HTMLTableCellElement10
ok 2185 Asize
ok 2186 bgColorLink
# tests - HTMLTableCellElement11
ok 2187 Asize
ok 2188 chLink
# tests - HTMLTableCellElement12
ok 2189 Asize
ok 2190 chLink
# tests - HTMLTableCellElement13
ok 2191 Asize
ok 2192 chOffLink
# tests - HTMLTableCellElement14
ok 2193 Asize
ok 2194 chOffLink
# tests - HTMLTableCellElement15
ok 2195 Asize
ok 2196 colSpanLink
# tests - HTMLTableCellElement16
ok 2197 Asize
ok 2198 colSpanLink
# tests - HTMLTableCellElement17
ok 2199 Asize
ok 2200 headersLink
# tests - HTMLTableCellElement18
ok 2201 Asize
ok 2202 headersLink
# tests - HTMLTableCellElement19
ok 2203 Asize
ok 2204 heightLink
# tests - HTMLTableCellElement20
ok 2205 Asize
ok 2206 heightLink
# tests - HTMLTableCellElement21
ok 2207 Asize
ok 2208 noWrapLink
# tests - HTMLTableCellElement22
ok 2209 Asize
ok 2210 noWrapLink
# tests - HTMLTableCellElement23
ok 2211 Asize
ok 2212 rowSpanLink
# tests - HTMLTableCellElement24
ok 2213 Asize
ok 2214 rowSpanLink
# tests - HTMLTableCellElement25
ok 2215 Asize
ok 2216 scopeLink
# tests - HTMLTableCellElement27
ok 2217 Asize
ok 2218 vAlignLink
# tests - HTMLTableCellElement28
ok 2219 Asize
ok 2220 vAlignLink
# tests - HTMLTableCellElement29
ok 2221 Asize
ok 2222 widthLink
# tests - HTMLTableCellElement30
ok 2223 Asize
ok 2224 widthLink
# tests - HTMLTableColElement01
ok 2225 Asize
ok 2226 alignLink
# tests - HTMLTableColElement02
ok 2227 Asize
ok 2228 alignLink
# tests - HTMLTableColElement03
ok 2229 Asize
ok 2230 chLink
# tests - HTMLTableColElement04
ok 2231 Asize
ok 2232 chLink
# tests - HTMLTableColElement05
ok 2233 Asize
ok 2234 chLink
# tests - HTMLTableColElement06
ok 2235 Asize
ok 2236 chLink
# tests - HTMLTableColElement07
ok 2237 Asize
ok 2238 spanLink
# tests - HTMLTableColElement08
ok 2239 Asize
ok 2240 spanLink
# tests - HTMLTableColElement09
ok 2241 Asize
ok 2242 vAlignLink
# tests - HTMLTableColElement10
ok 2243 Asize
ok 2244 vAlignLink
# tests - HTMLTableColElement11
ok 2245 Asize
ok 2246 widthLink
# tests - HTMLTableColElement12
ok 2247 Asize
ok 2248 widthLink
# tests - HTMLTableElement01
ok 2249 Asize
ok 2250 alignLink
# tests - HTMLTableElement02
ok 2251 Asize
ok 2252 vcaption should be null
# tests - HTMLTableElement03
ok 2253 Asize
ok 2254 alignLink
# tests - HTMLTableElement04
ok 2255 Asize
ok 2256 vsection should be null
# tests - HTMLTableElement05
ok 2257 Asize
ok 2258 alignLink
# tests - HTMLTableElement06
ok 2259 Asize
ok 2260 vsection should be null
# tests - HTMLTableElement07
ok 2261 Asize
ok 2262 rowsLink
# tests - HTMLTableElement08
ok 2263 Asize
ok 2264 tbodiesLink
# tests - HTMLTableElement09
ok 2265 Asize
ok 2266 tbodiesLink
# tests - HTMLTableElement10
ok 2267 Asize
ok 2268 alignLink
# tests - HTMLTableElement11
ok 2269 Asize
ok 2270 bgColorLink
# tests - HTMLTableElement12
ok 2271 Asize
ok 2272 borderLink
# tests - HTMLTableElement13
ok 2273 Asize
ok 2274 cellPaddingLink
# tests - HTMLTableElement14
ok 2275 Asize
ok 2276 cellSpacingLink
# tests - HTMLTableElement15
ok 2277 Asize
ok 2278 frameLink
# tests - HTMLTableElement16
ok 2279 Asize
ok 2280 rulesLink
# tests - HTMLTableElement17
ok 2281 Asize
ok 2282 summaryLink
# tests - HTMLTableElement18
ok 2283 Asize
ok 2284 widthLink
# tests - HTMLTableElement19
ok 2285 Asize
ok 2286 vsection1 should be null
ok 2287 vsection2 should not be null
# tests - HTMLTableElement20
ok 2288 Asize
ok 2289 alignLink
# tests - HTMLTableElement21
ok 2290 Asize
ok 2291 vsection1 should not be null
ok 2292 rowsLink
# tests - HTMLTableElement22
ok 2293 Asize
ok 2294 vsection1 should be null
ok 2295 vsection2 should not be null
# tests - HTMLTableElement23
ok 2296 Asize
ok 2297 alignLink
# tests - HTMLTableElement24
ok 2298 Asize
ok 2299 vsection1 should not be null
ok 2300 rowsLink
# tests - HTMLTableElement25
ok 2301 Asize
ok 2302 vsection1 should be null
ok 2303 vsection2 should not be null
# tests - HTMLTableElement26
ok 2304 Asize
ok 2305 vsection1 should not be null
ok 2306 alignLink
# tests - HTMLTableElement27
ok 2307 Asize
ok 2308 vsection1 should not be null
ok 2309 vsection2 should be null
# tests - HTMLTableElement28
ok 2310 Asize
ok 2311 rowsLink1
ok 2312 rowsLink2
# tests - HTMLTableElement29
ok 2313 Asize
ok 2314 rowsLink1
ok 2315 rowsLink2
# tests - HTMLTableElement30
ok 2316 Asize
ok 2317 rowsLink1
ok 2318 rowsLink
ok 2319 rowsLink2
ok 2320 rowsLink3
# tests - HTMLTableElement31
ok 2321 tableSize1
ok 2322 tableSize2
ok 2323 Asize3
ok 2324 Asize4
# tests - HTMLTableElement32
ok 2325 Asize
ok 2326 rowsLink1
ok 2327 rowsLink2
# tests - HTMLTableElement33
ok 2328 Asize
ok 2329 rowsLink1
ok 2330 rowsLink2
# tests - HTMLTableElement34
ok 2331 Asize
ok 2332 HTMLTableElement34
# tests - HTMLTableElement35
ok 2333 Asize
ok 2334 HTMLTableElement35
# tests - HTMLTableElement36
ok 2335 Asize
ok 2336 HTMLTableElement36
# tests - HTMLTableElement37
ok 2337 Asize
ok 2338 HTMLTableElement37
# tests - HTMLTableElement38
ok 2339 Asize
ok 2340 HTMLTableElement38
# tests - HTMLTableElement39
ok 2341 Asize
ok 2342 rowsLink1
ok 2343 rowsLink2
# tests - HTMLTableElement40
ok 2344 Asize
ok 2345 rowsLink1
ok 2346 rowsLink2
# tests - HTMLTableRowElement01
ok 2347 Asize
ok 2348 rowIndexLink
# tests - HTMLTableRowElement02
ok 2349 Asize
ok 2350 sectionRowIndexLink
# tests - HTMLTableRowElement03
ok 2351 Asize
ok 2352 sectionRowIndexLink
# tests - HTMLTableRowElement04
ok 2353 Asize
ok 2354 sectionRowIndexLink
# tests - HTMLTableRowElement05
ok 2355 Asize
ok 2356 cellsLink
# tests - HTMLTableRowElement06
ok 2357 Asize
ok 2358 alignLink
# tests - HTMLTableRowElement07
ok 2359 Asize
ok 2360 bgColorLink
# tests - HTMLTableRowElement08
ok 2361 Asize
ok 2362 chLink
# tests - HTMLTableRowElement09
ok 2363 Asize
ok 2364 charOffLink
# tests - HTMLTableRowElement10
ok 2365 Asize
ok 2366 vAlignLink
# tests - HTMLTableRowElement11
ok 2367 Asize
ok 2368 cellsLink1
ok 2369 value1Link
ok 2370 cellsLink2
ok 2371 cellNode should be null
# tests - HTMLTableRowElement12
ok 2372 Asize
ok 2373 cellsLink1
ok 2374 value1Link
ok 2375 cellsLink2
ok 2376 cellNode should be null
# tests - HTMLTableRowElement13
ok 2377 Asize
ok 2378 cellsLink1
ok 2379 value1Link
ok 2380 cellsLink2
ok 2381 value2Link
# tests - HTMLTableRowElement14
ok 2382 Asize
ok 2383 cellsLink1
ok 2384 value1Link
ok 2385 cellsLink2
ok 2386 value2Link
# tests - HTMLTableRowElement15
ok 2387 Asize
ok 2388 HTMLTableRowElement15
# tests - HTMLTableRowElement16
ok 2389 Asize
ok 2390 HTMLTableRowElement16
# tests - HTMLTableRowElement17
ok 2391 Asize
ok 2392 HTMLTableRowElement17
# tests - HTMLTableRowElement18
ok 2393 Asize
ok 2394 HTMLTableRowElement18
# tests - HTMLTableRowElement19
ok 2395 Asize
ok 2396 HTMLTableRowElement19
# tests - HTMLTableRowElement20
ok 2397 Asize
ok 2398 cellsLink1
ok 2399 value1Link
ok 2400 cellsLink2
ok 2401 cellNode should be null
# tests - HTMLTableRowElement21
ok 2402 Asize
ok 2403 cellsLink1
ok 2404 value1Link
ok 2405 cellsLink2
ok 2406 value2Link
# tests - HTMLTableSectionElement01
ok 2407 Asize
ok 2408 alignLink
# tests - HTMLTableSectionElement02
ok 2409 Asize
ok 2410 alignLink
# tests - HTMLTableSectionElement03
ok 2411 Asize
ok 2412 alignLink
# tests - HTMLTableSectionElement04
ok 2413 Asize
ok 2414 chLink
# tests - HTMLTableSectionElement05
ok 2415 Asize
ok 2416 chLink
# tests - HTMLTableSectionElement06
ok 2417 Asize
ok 2418 chLink
# tests - HTMLTableSectionElement07
ok 2419 Asize
ok 2420 chOffLink
# tests - HTMLTableSectionElement08
ok 2421 Asize
ok 2422 chOffLink
# tests - HTMLTableSectionElement09
ok 2423 Asize
ok 2424 chOffLink
# tests - HTMLTableSectionElement10
ok 2425 Asize
ok 2426 vAlignLink
# tests - HTMLTableSectionElement11
ok 2427 Asize
ok 2428 vAlignLink
# tests - HTMLTableSectionElement12
ok 2429 Asize
ok 2430 vAlignLink
# tests - HTMLTableSectionElement13
ok 2431 Asize
ok 2432 rowsLink
# tests - HTMLTableSectionElement14
ok 2433 Asize
ok 2434 rowsLink
# tests - HTMLTableSectionElement15
ok 2435 Asize
ok 2436 rowsLink
# tests - HTMLTableSectionElement16
ok 2437 Asize
ok 2438 rowsLink1
ok 2439 rowsLink2
# tests - HTMLTableSectionElement17
ok 2440 Asize
ok 2441 rowsLink1
ok 2442 rowsLink2
# tests - HTMLTableSectionElement18
ok 2443 Asize
ok 2444 rowsLink1
ok 2445 rowsLink2
# tests - HTMLTableSectionElement19
ok 2446 Asize
ok 2447 rowsLink1
ok 2448 rowsLink2
# tests - HTMLTableSectionElement20
ok 2449 Asize
ok 2450 rowsLink1
ok 2451 rowsLink2
# tests - HTMLTableSectionElement21
ok 2452 Asize
ok 2453 rowsLink1
ok 2454 rowsLink2
# tests - HTMLTableSectionElement22
ok 2455 Asize
ok 2456 rowsLink1
ok 2457 rowsLink2
# tests - HTMLTableSectionElement23
ok 2458 Asize
ok 2459 rowsLink1
ok 2460 rowsLink2
# tests - HTMLTableSectionElement24
ok 2461 Asize
ok 2462 rowsLink1
ok 2463 rowsLink2
# tests - HTMLTableSectionElement25
ok 2464 Asize
ok 2465 HTMLTableSectionElement25
# tests - HTMLTableSectionElement26
ok 2466 Asize
ok 2467 HTMLTableSectionElement26
# tests - HTMLTableSectionElement27
ok 2468 Asize
ok 2469 HTMLTableSectionElement27
# tests - HTMLTableSectionElement28
ok 2470 Asize
ok 2471 HTMLTableSectionElement28
# tests - HTMLTableSectionElement29
ok 2472 Asize
ok 2473 HTMLTableSectionElement29
# tests - HTMLTableSectionElement30
ok 2474 Asize
ok 2475 rowsLink1
ok 2476 rowsLink2
# tests - HTMLTableSectionElement31
ok 2477 Asize
ok 2478 rowsLink1
ok 2479 rowsLink2
# tests - HTMLTextAreaElement01
ok 2480 Asize
ok 2481 defaultValueLink
# tests - HTMLTextAreaElement02
ok 2482 Asize
ok 2483 formLink
# tests - HTMLTextAreaElement03
ok 2484 Asize
ok 2485 vform should be null
# tests - HTMLTextAreaElement04
ok 2486 Asize
ok 2487 accessKeyLink
# tests - HTMLTextAreaElement05
ok 2488 Asize
ok 2489 colsLink
# tests - HTMLTextAreaElement06
ok 2490 Asize
ok 2491 disabledLink
# tests - HTMLTextAreaElement07
ok 2492 Asize
ok 2493 nameLink
# tests - HTMLTextAreaElement08
ok 2494 Asize
ok 2495 readOnlyLink
# tests - HTMLTextAreaElement09
ok 2496 Asize
ok 2497 rowsLink
# tests - HTMLTextAreaElement10
ok 2498 Asize
ok 2499 tabIndexLink
# tests - HTMLTextAreaElement11
ok 2500 Asize
ok 2501 typeLink
# tests - HTMLTextAreaElement12
ok 2502 Asize
ok 2503 valueLink
# tests - HTMLTextAreaElement13
ok 2504 Asize
# tests - HTMLTextAreaElement14
ok 2505 Asize
# tests - HTMLTextAreaElement15
ok 2506 Asize
# tests - HTMLTitleElement01
ok 2507 Asize
ok 2508 textLink
# tests - HTMLUListElement01
ok 2509 Asize
ok 2510 compactLink
# tests - HTMLUListElement02
ok 2511 Asize
ok 2512 typeLink
# tests - anchor01
ok 2513 Asize
ok 2514 accessKeyLink
# tests - anchor02
ok 2515 Asize
ok 2516 charsetLink
# tests - anchor03
ok 2517 Asize
ok 2518 coordsLink
# tests - anchor04
ok 2519 Asize
ok 2520 hrefLink
# tests - anchor05
ok 2521 Asize
ok 2522 typeLink
# tests - anchor06
ok 2523 Asize
ok 2524 shapeLink
# tests - area01
ok 2525 Asize
ok 2526 coordsLink
# tests - area02
ok 2527 Asize
ok 2528 vnohref should be *false*
# tests - area03
ok 2529 Asize
ok 2530 tabIndexLink
# tests - area04
ok 2531 Asize
ok 2532 accessKeyLink
# tests - body01
ok 2533 Asize
ok 2534 aLinkLink
# tests - button01
ok 2535 Asize
ok 2536 vform should be null
# tests - button02
ok 2537 Asize
ok 2538 formLink
# tests - button03
ok 2539 Asize
ok 2540 formLink
# tests - button04
ok 2541 Asize
ok 2542 formLink
# tests - button05
ok 2543 Asize
ok 2544 accessKeyLink
# tests - button06
ok 2545 Asize
ok 2546 tabIndexLink
# tests - button07
ok 2547 Asize
ok 2548 typeLink
# tests - button08
ok 2549 Asize
ok 2550 disabledLink
# tests - button09
ok 2551 Asize
ok 2552 typeLink
# tests - dlist01
ok 2553 Asize
ok 2554 compactLink
# tests - doc01
ok 2555 titleLink
# tests - hasFeature01
ok 2556 hasHTMLnull
# tests - hasFeature02
ok 2557 hasHTML2
# tests - hasFeature03
ok 2558 hasXHTML
# tests - hasFeature04
ok 2559 hasXHTML
# tests - hasFeature05
ok 2560 hasCore
# tests - hasFeature06
ok 2561 hasCore
# tests - object01
ok 2562 Asize
ok 2563 vform should be null
# tests - object02
ok 2564 Asize
ok 2565 alignLink
# tests - object03
ok 2566 Asize
ok 2567 archiveLink
# tests - object04
ok 2568 Asize
ok 2569 borderLink
# tests - object05
ok 2570 Asize
ok 2571 codebaseLink
# tests - object06
ok 2572 Asize
ok 2573 dataLink
# tests - object07
ok 2574 Asize
ok 2575 heightLink
# tests - object08
ok 2576 Asize
ok 2577 hspaceLink
# tests - object09
ok 2578 Asize
ok 2579 standbyLink
# tests - object10
ok 2580 Asize
ok 2581 tabIndexLink
# tests - object11
ok 2582 Asize
ok 2583 typeLink
# tests - object12
ok 2584 Asize
ok 2585 useMapLink
# tests - object13
ok 2586 Asize
ok 2587 vspaceLink
# tests - object14
ok 2588 Asize
ok 2589 widthLink
# tests - object15
ok 2590 Asize
ok 2591 codeTypeLink
# tests - table01
ok 2592 Asize
ok 2593 vcaption should be null
# tests - table02
ok 2594 Asize
ok 2595 alignLink
# tests - table03
ok 2596 Asize
ok 2597 chLink
# tests - table04
ok 2598 Asize
ok 2599 alignLink
# tests - table06
ok 2600 Asize
ok 2601 vAlignLink
# tests - table07
ok 2602 Asize
ok 2603 vrowsLink
# tests - table08
ok 2604 Asize
ok 2605 alignLink
# tests - table09
ok 2606 Asize
ok 2607 alignLink
# tests - table10
ok 2608 Asize
ok 2609 chLink
# tests - table12
ok 2610 Asize
ok 2611 choffLink
# tests - table15
ok 2612 Asize
ok 2613 vrowsLink
# tests - table17
ok 2614 Asize
ok 2615 choffLink
# tests - table18
ok 2616 Asize
ok 2617 cellIndexLink
# tests - table19
ok 2618 Asize
ok 2619 abbrLink
# tests - table20
ok 2620 Asize
ok 2621 axisLink
# tests - table21
ok 2622 Asize
ok 2623 alignLink
# tests - table22
ok 2624 Asize
ok 2625 bgcolorLink
# tests - table23
ok 2626 Asize
ok 2627 chLink
# tests - table24
ok 2628 Asize
ok 2629 chOffLink
# tests - table25
ok 2630 Asize
ok 2631 colSpanLink
# tests - table26
ok 2632 Asize
ok 2633 heightLink
# tests - table27
ok 2634 Asize
ok 2635 nowrapLink
# tests - table28
ok 2636 Asize
ok 2637 rowSpanLink
# tests - table30
ok 2638 Asize
ok 2639 headersLink
# tests - table31
ok 2640 Asize
ok 2641 vAlignLink
# tests - table32
ok 2642 Asize
ok 2643 vwidthLink
# tests - table33
ok 2644 Asize
ok 2645 alignLink
# tests - table34
ok 2646 Asize
ok 2647 borderLink
# tests - table35
ok 2648 Asize
ok 2649 bgcolorLink
# tests - table36
ok 2650 Asize
ok 2651 frameLink
# tests - table37
ok 2652 Asize
ok 2653 cellpaddingLink
# tests - table38
ok 2654 Asize
ok 2655 cellspacingLink
# tests - table39
ok 2656 Asize
ok 2657 summaryLink
# tests - table40
ok 2658 Asize
ok 2659 rulesLink
# tests - table41
ok 2660 Asize
ok 2661 widthLink
# tests - table42
ok 2662 Asize
ok 2663 alignLink
# tests - table43
ok 2664 Asize
ok 2665 bgcolorLink
# tests - table44
ok 2666 Asize
ok 2667 valignLink
# tests - table45
ok 2668 Asize
ok 2669 vchLink
# tests - table46
ok 2670 Asize
ok 2671 choffLink
# tests - table47
ok 2672 Asize
ok 2673 rowIndexLink
# tests - table48
ok 2674 Asize
ok 2675 alignLink
# tests - table49
ok 2676 Asize
ok 2677 chLink
# tests - table50
ok 2678 Asize
ok 2679 chOffLink
# tests - table51
ok 2680 Asize
ok 2681 spanLink
# tests - table52
ok 2682 Asize
ok 2683 vAlignLink
# tests - table53
ok 2684 Asize
ok 2685 widthLink
# tests - event_default_action
ok 2686 canceled should be *false*
# tests - only_special_tags_have_name_and_it_reflects_the_attribute
ok 2687 <a> elements should have empty string name properties by default.
ok 2688 <a> elements should allow setting and retrieving their name properties.
ok 2689 <a> elements should have name properties equal to their name attributes.
ok 2690 <applet> elements should have empty string name properties by default.
ok 2691 <applet> elements should allow setting and retrieving their name properties.
ok 2692 <applet> elements should have name properties equal to their name attributes.
ok 2693 <button> elements should have empty string name properties by default.
ok 2694 <button> elements should allow setting and retrieving their name properties.
ok 2695 <button> elements should have name properties equal to their name attributes.
ok 2696 <form> elements should have empty string name properties by default.
ok 2697 <form> elements should allow setting and retrieving their name properties.
ok 2698 <form> elements should have name properties equal to their name attributes.
ok 2699 <frame> elements should have empty string name properties by default.
ok 2700 <frame> elements should allow setting and retrieving their name properties.
ok 2701 <frame> elements should have name properties equal to their name attributes.
ok 2702 <iframe> elements should have empty string name properties by default.
ok 2703 <iframe> elements should allow setting and retrieving their name properties.
ok 2704 <iframe> elements should have name properties equal to their name attributes.
ok 2705 <img> elements should have empty string name properties by default.
ok 2706 <img> elements should allow setting and retrieving their name properties.
ok 2707 <img> elements should have name properties equal to their name attributes.
ok 2708 <input> elements should have empty string name properties by default.
ok 2709 <input> elements should allow setting and retrieving their name properties.
ok 2710 <input> elements should have name properties equal to their name attributes.
ok 2711 <map> elements should have empty string name properties by default.
ok 2712 <map> elements should allow setting and retrieving their name properties.
ok 2713 <map> elements should have name properties equal to their name attributes.
ok 2714 <meta> elements should have empty string name properties by default.
ok 2715 <meta> elements should allow setting and retrieving their name properties.
ok 2716 <meta> elements should have name properties equal to their name attributes.
ok 2717 <object> elements should have empty string name properties by default.
ok 2718 <object> elements should allow setting and retrieving their name properties.
ok 2719 <object> elements should have name properties equal to their name attributes.
ok 2720 <param> elements should have empty string name properties by default.
ok 2721 <param> elements should allow setting and retrieving their name properties.
ok 2722 <param> elements should have name properties equal to their name attributes.
ok 2723 <select> elements should have empty string name properties by default.
ok 2724 <select> elements should allow setting and retrieving their name properties.
ok 2725 <select> elements should have name properties equal to their name attributes.
ok 2726 <textarea> elements should have empty string name properties by default.
ok 2727 <textarea> elements should allow setting and retrieving their name properties.
ok 2728 <textarea> elements should have name properties equal to their name attributes.
ok 2729 <section> elements should not have a value for the name property
ok 2730 <abbr> elements should not have a value for the name property
ok 2731 <label> elements should not have a value for the name property
ok 2732 <option> elements should not have a value for the name property
ok 2733 <customTag> elements should not have a value for the name property
# tests - checked_property_is_boolean
ok 2734 no attribute value
ok 2735 empty attribute value
ok 2736 staying false does not insert attribute
ok 2737 changing to false removes attribute
# tests - memoized_queries_cleared_on_innerhtml_set
ok 2738 Count of <em> should be 0
ok 2739 Count of <em> should be 1
# tests - memoized_queries_cleared_on_element
ok 2740 Count of <li> should be 3
ok 2741 Count of <li> should be 2 after innerHTML is set
# tests - memoized_href_resolver_returns_valid_url
ok 2742 anchor href should be valid
ok 2743 anchor href (2nd accession) should be valid
# tests - normalize_method_defined_on_string_prototype_should_not_affect_getting_attribute_properties
ok 2744 <img> elements should not have their attribute properties masked by defining a normalize method on string instances
# tests - normalize_method_defined_on_string_prototype_should_not_affect_setting_attribute_properties
ok 2745 <form> elements should not have their attribute properties masked by defining a normalize method on string instances when removing empty attributes
# tests - filename_with_spaces_in_script_tag_can_be_read
ok 2746 There should be no errors when using scripts with spaces in their filenames
# tests - rowIndex_on_detached_table_row_should_return_minus_one
ok 2747 rowIndex should equal -1
# tests - readonly_attribute_works_in_empty_form
ok 2748 (unnamed assert)
ok 2749 (unnamed assert)
# tests - selected_attribute_works_in_empty_form
ok 2750 attribute with empty value
ok 2751 attribute without value
# tests - radio_group_with_same_name_in_several_forms_work
ok 2752 Radio input in the same form should be unchecked
ok 2753 The radio input should be checked
ok 2754 Radio input in a different form should still be checked
# tests - radio_group_with_same_name_outside_form
ok 2755 Radio input in the same group should be unchecked
ok 2756 The radio input should be checked
ok 2757 Radio input in a sibling form should still be checked
# tests - htmlcollection_allows_index_access_for_name_and_id
ok 2758 form.elements by name
ok 2759 form.elements by id
# tests - htmlcollection_index_access_prefers_id_over_name
ok 2760 (unnamed assert)
ok 2761 (unnamed assert)
# tests - parsing_with_bad_html_tag
ok 2762 (unnamed assert)
# tests - option_element_id_attaching_on_id_change
ok 2763 getElementById("foo") should not match after the id has been changed from foo to bar
ok 2764 getElementById("bar") should match after the id has been changed from foo to bar
# tests - div_element_to_string
ok 2765 div.toString() should return "[object HTMLDivElement] just like a browser
# tests - document_open_return_self
ok 2766 doc.open() should return the Document on which the method was invoked
# tests - HTMLStyleElement01
ok 2767 (unnamed assert)
ok 2768 (unnamed assert)
ok 2769 (unnamed assert)
# tests - HTMLStyleElement02
ok 2770 (unnamed assert)
ok 2771 (unnamed assert)
ok 2772 (unnamed assert)
# tests - HTMLStyleAttribute01
ok 2773 (unnamed assert)
ok 2774 (unnamed assert)
ok 2775 (unnamed assert)
ok 2776 (unnamed assert)
ok 2777 (unnamed assert)
# tests - HTMLCanvasStyleAttribute01
ok 2778 (unnamed assert)
ok 2779 (unnamed assert)
ok 2780 (unnamed assert)
ok 2781 (unnamed assert)
ok 2782 (unnamed assert)
# tests - StylePropertyReflectsStyleAttribute
ok 2783 (unnamed assert)
ok 2784 (unnamed assert)
ok 2785 (unnamed assert)
ok 2786 (unnamed assert)
ok 2787 (unnamed assert)
ok 2788 (unnamed assert)
ok 2789 (unnamed assert)
# tests - StyleAttributeReflectsStyleProperty
ok 2790 (unnamed assert)
ok 2791 (unnamed assert)
ok 2792 (unnamed assert)
ok 2793 (unnamed assert)
ok 2794 (unnamed assert)
ok 2795 (unnamed assert)
ok 2796 (unnamed assert)
ok 2797 (unnamed assert)
ok 2798 (unnamed assert)
ok 2799 (unnamed assert)
# tests - StyleShorthandProperties
ok 2800 (unnamed assert)
ok 2801 (unnamed assert)
ok 2802 (unnamed assert)
ok 2803 (unnamed assert)
ok 2804 (unnamed assert)
ok 2805 (unnamed assert)
ok 2806 (unnamed assert)
# tests - retainOriginalStyleAttributeUntilStyleGetter
ok 2807 (unnamed assert)
ok 2808 (unnamed assert)
ok 2809 (unnamed assert)
ok 2810 (unnamed assert)
# tests - getComputedStyleFromDefaultStylesheet1
ok 2811 computed display of div is block by default
# tests - getComputedStyleFromDefaultStylesheet2
ok 2812 computed display of ul is block by default
# tests - getComputedStyleFromDefaultStylesheet3
ok 2813 computed display of hidden should is none
ok 2814 computed display of shown div is block
# tests - getComputedStyleInline
ok 2815 computed display of p is none
# tests - getComputedStyleFromEmbeddedSheet1
ok 2816 computed marginLeft of p[0] is 100px
# tests - getComputedStyleFromEmbeddedSheet2
ok 2817 computed marginLeft of p[0] is 100px
ok 2818 computed marginLeft of p[1] is 100px
# tests - getComputedStyleFromEmbeddedSheet3
ok 2819 computed marginLeft of p[1] is 100px
ok 2820 computed marginLeft of button[0] is 100px
# tests - ensureRelativeStylesheetFilesAreLoaded
not ok 2821 computed color of body is red
  ---
    type:    AssertionError
    message: computed color of body is red
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level2/style.js
    line:    281
    column:  16
    stack:
      - |
        Timeout.<anonymous> (/workdir/npm-module/test/level2/style.js:281:16)
      - |
        ontimeout (timers.js:424:11)
      - |
        tryOnTimeout (timers.js:288:5)
      - |
        listOnTimeout (timers.js:251:5)
      - |
        Timer.processTimers (timers.js:211:10)
    wanted:  red
    found:
    diff:    |
      FOUND:
      WANTED: red
              ^ (at position = 0)
  ...
# tests - ensureExternalStylesheetsAreLoadable
ok 2822 (unnamed assert)
# tests - getComputedStyleExternal
not ok 2823 computed color of div is red
  ---
    type:    AssertionError
    message: computed color of div is red
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level2/style.js
    line:    326
    column:  12
    stack:
      - |
        Document.onload (/workdir/npm-module/test/level2/style.js:326:12)
      - |
        Document.<anonymous> (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:243:32)
      - |
        invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:208:25)
      - |
        invokeInlineListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:171:7)
      - |
        DocumentImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:129:7)
      - |
        DocumentImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
      - |
        /workdir/npm-module/lib/jsdom/browser/resource-loader.js:41:13
      - |
        Object.check (/workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:83:11)
      - |
        Object.check (/workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:86:23)
      - |
        /workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:101:12
      - |
        wrappedEnqueued (/workdir/npm-module/lib/jsdom/browser/resource-loader.js:200:7)
      - |
        Request.<anonymous> (/workdir/npm-module/lib/jsdom/browser/resource-loader.js:159:64)
      - |
        Request.callback (/workdir/npm-module/node_modules/request/request.js:185:7)
      - |
        Request.emit (events.js:182:13)
      - |
        Request.<anonymous> (/workdir/npm-module/node_modules/request/request.js:1161:10)
      - |
        Request.emit (events.js:182:13)
      - |
        IncomingMessage.<anonymous> (/workdir/npm-module/node_modules/request/request.js:1083:12)
      - |
        Object.onceWrapper (events.js:273:13)
      - |
        IncomingMessage.emit (events.js:187:15)
      - |
        endReadableNT (_stream_readable.js:1085:12)
      - |
        process._tickCallback (internal/process/next_tick.js:63:19)
    wanted:  red
    found:
    diff:    |
      FOUND:
      WANTED: red
              ^ (at position = 0)
  ...
# tests - getComputedStyleWithBadSelectors
ok 2824 (unnamed assert)
# tests - getComputedStyleWithMediaRules
ok 2825 computed color of p is blue
# tests - getComputedStyleWithKeyframeRules
ok 2826 (unnamed assert)
# tests - setStyleToInvalidCSSSyntax
ok 2827 (unnamed assert)
ok 2828 (unnamed assert)
ok 2829 (unnamed assert)
ok 2830 (unnamed assert)
ok 2831 (unnamed assert)
ok 2832 (unnamed assert)
ok 2833 (unnamed assert)
ok 2834 (unnamed assert)
ok 2835 (unnamed assert)
ok 2836 (unnamed assert)
ok 2837 (unnamed assert)
ok 2838 (unnamed assert)
ok 2839 (unnamed assert)
ok 2840 (unnamed assert)
ok 2841 (unnamed assert)
ok 2842 (unnamed assert)
ok 2843 (unnamed assert)
ok 2844 (unnamed assert)
ok 2845 (unnamed assert)
ok 2846 (unnamed assert)
ok 2847 (unnamed assert)
ok 2848 (unnamed assert)
ok 2849 (unnamed assert)
ok 2850 (unnamed assert)
ok 2851 (unnamed assert)
ok 2852 (unnamed assert)
ok 2853 (unnamed assert)
ok 2854 (unnamed assert)
ok 2855 (unnamed assert)
ok 2856 (unnamed assert)
ok 2857 (unnamed assert)
ok 2858 (unnamed assert)
ok 2859 (unnamed assert)
ok 2860 (unnamed assert)
ok 2861 (unnamed assert)
ok 2862 (unnamed assert)
ok 2863 (unnamed assert)
ok 2864 (unnamed assert)
ok 2865 (unnamed assert)
ok 2866 (unnamed assert)
ok 2867 (unnamed assert)
ok 2868 (unnamed assert)
ok 2869 (unnamed assert)
ok 2870 (unnamed assert)
ok 2871 (unnamed assert)
ok 2872 (unnamed assert)
ok 2873 (unnamed assert)
ok 2874 (unnamed assert)
ok 2875 (unnamed assert)
# tests - getStyleSheetByItem
ok 2876 (unnamed assert)
ok 2877 (unnamed assert)
ok 2878 (unnamed assert)
ok 2879 (unnamed assert)
ok 2880 (unnamed assert)
# tests - parseStyleWithBogusComment
# tests - padding and margin component properties work correctly (GH-1353)
ok 2881 (unnamed assert)
ok 2882 (unnamed assert)
ok 2883 (unnamed assert)
ok 2884 (unnamed assert)
ok 2885 (unnamed assert)
ok 2886 (unnamed assert)
ok 2887 (unnamed assert)
ok 2888 (unnamed assert)
ok 2889 (unnamed assert)
ok 2890 (unnamed assert)
ok 2891 (unnamed assert)
ok 2892 (unnamed assert)
ok 2893 (unnamed assert)
ok 2894 (unnamed assert)
ok 2895 (unnamed assert)
ok 2896 (unnamed assert)
ok 2897 (unnamed assert)
ok 2898 (unnamed assert)
ok 2899 (unnamed assert)
ok 2900 (unnamed assert)
ok 2901 (unnamed assert)
ok 2902 (unnamed assert)
ok 2903 (unnamed assert)
ok 2904 (unnamed assert)
ok 2905 (unnamed assert)
ok 2906 (unnamed assert)
ok 2907 (unnamed assert)
ok 2908 (unnamed assert)
ok 2909 (unnamed assert)
ok 2910 (unnamed assert)
ok 2911 (unnamed assert)
ok 2912 (unnamed assert)
ok 2913 (unnamed assert)
ok 2914 (unnamed assert)
ok 2915 (unnamed assert)
ok 2916 (unnamed assert)
ok 2917 (unnamed assert)
ok 2918 (unnamed assert)
ok 2919 (unnamed assert)
ok 2920 (unnamed assert)
ok 2921 (unnamed assert)
ok 2922 (unnamed assert)
# DocumentEvent interface
ok 2923 should have createEvent function
# EventTarget interface
ok 2924 should be an instance of EventTarget
# create event with each event type
ok 2925 should not be null for Events
ok 2926 should be instanceof Events
ok 2927 should not be null for MutationEvents
ok 2928 should be instanceof MutationEvents
ok 2929 should not be null for UIEvents
ok 2930 should be instanceof UIEvents
ok 2931 should not be null for MouseEvents
ok 2932 should be instanceof MouseEvents
ok 2933 should not be null for HTMLEvents
ok 2934 should be instanceof HTMLEvents
# event interface eventInit parameter
ok 2935 (unnamed assert)
ok 2936 (unnamed assert)
ok 2937 (unnamed assert)
ok 2938 (unnamed assert)
ok 2939 (unnamed assert)
ok 2940 (unnamed assert)
ok 2941 (unnamed assert)
ok 2942 (unnamed assert)
ok 2943 (unnamed assert)
ok 2944 (unnamed assert)
ok 2945 (unnamed assert)
ok 2946 (unnamed assert)
ok 2947 (unnamed assert)
ok 2948 (unnamed assert)
ok 2949 (unnamed assert)
ok 2950 (unnamed assert)
ok 2951 (unnamed assert)
ok 2952 (unnamed assert)
ok 2953 (unnamed assert)
ok 2954 (unnamed assert)
ok 2955 (unnamed assert)
ok 2956 (unnamed assert)
ok 2957 (unnamed assert)
ok 2958 (unnamed assert)
ok 2959 (unnamed assert)
ok 2960 (unnamed assert)
ok 2961 (unnamed assert)
ok 2962 (unnamed assert)
ok 2963 (unnamed assert)
ok 2964 (unnamed assert)
ok 2965 (unnamed assert)
ok 2966 (unnamed assert)
ok 2967 (unnamed assert)
ok 2968 (unnamed assert)
ok 2969 (unnamed assert)
ok 2970 (unnamed assert)
ok 2971 (unnamed assert)
ok 2972 (unnamed assert)
ok 2973 (unnamed assert)
ok 2974 (unnamed assert)
ok 2975 (unnamed assert)
ok 2976 (unnamed assert)
ok 2977 (unnamed assert)
ok 2978 (unnamed assert)
ok 2979 (unnamed assert)
ok 2980 (unnamed assert)
ok 2981 (unnamed assert)
ok 2982 (unnamed assert)
ok 2983 (unnamed assert)
ok 2984 (unnamed assert)
ok 2985 (unnamed assert)
ok 2986 (unnamed assert)
ok 2987 (unnamed assert)
ok 2988 (unnamed assert)
ok 2989 (unnamed assert)
ok 2990 (unnamed assert)
ok 2991 (unnamed assert)
ok 2992 (unnamed assert)
ok 2993 (unnamed assert)
ok 2994 (unnamed assert)
ok 2995 (unnamed assert)
ok 2996 (unnamed assert)
ok 2997 (unnamed assert)
ok 2998 (unnamed assert)
ok 2999 (unnamed assert)
ok 3000 (unnamed assert)
ok 3001 (unnamed assert)
ok 3002 (unnamed assert)
ok 3003 (unnamed assert)
ok 3004 (unnamed assert)
ok 3005 (unnamed assert)
ok 3006 (unnamed assert)
ok 3007 (unnamed assert)
ok 3008 (unnamed assert)
ok 3009 (unnamed assert)
ok 3010 (unnamed assert)
ok 3011 (unnamed assert)
ok 3012 (unnamed assert)
ok 3013 (unnamed assert)
ok 3014 (unnamed assert)
ok 3015 (unnamed assert)
ok 3016 (unnamed assert)
# dispatch event - a null reference passed to dispatchEvent
ok 3017 should throw an exception
# dispatch event - a created but not initialized event passed to dispatchEvent
ok 3018 should throw an exception for Events
ok 3019 should throw an exception for MutationEvents
ok 3020 should throw an exception for UIEvents
ok 3021 should throw an exception for MouseEvents
ok 3022 should throw an exception for HTMLEvents
# dispatch event - EventListener with capture false
ok 3023 (unnamed assert)
ok 3024 (unnamed assert)
ok 3025 should receive atEvent
ok 3026 should not receive at bubble phase
ok 3027 should not receive at capture phase
ok 3028 (unnamed assert)
ok 3029 (unnamed assert)
# dispatch event - EventListener with capture true
ok 3030 (unnamed assert)
ok 3031 (unnamed assert)
ok 3032 should receive atEvent
ok 3033 should not receive at bubble phase
ok 3034 should not receive at capture phase
ok 3035 (unnamed assert)
ok 3036 (unnamed assert)
# dispatch event - EventListener is registered twice
ok 3037 should receive atEvent only once
ok 3038 should not receive at bubble phase
ok 3039 should not receive at capture phase
# dispatch event - EventListener is registered twice, removed once
ok 3040 should not receive any handleEvent calls
# dispatch event - EventListener is registered, other listeners (similar but not identical) are removed
ok 3041 should still receive the handleEvent call
# dispatch event - two EventListeners which both handle by unregistering itself and the other
ok 3042 should only be handled by one EventListener
# init event - set state from params, bubble no cancel
ok 3043 event should not be null for undefined
ok 3044 event type should be "rotate" for undefined
ok 3045 event should bubble for undefined
ok 3046 event should not be cancelable for undefined
ok 3047 event should not be null for undefined
ok 3048 event type should be "rotate" for undefined
ok 3049 event should bubble for undefined
ok 3050 event should not be cancelable for undefined
# init event - set state from params, cancel no bubble
ok 3051 event should not be null forundefined
ok 3052 event type should be "rotate" for undefined
ok 3053 event should not bubble for undefined
ok 3054 event should be cancelable for undefined
ok 3055 event should not be null forundefined
ok 3056 event type should be "rotate" for undefined
ok 3057 event should not bubble for undefined
ok 3058 event should be cancelable for undefined
# init event - initEvent called multiple times, final time is definitive
ok 3059 event should not be null for undefined
ok 3060 event type should be "rotate" for undefined
ok 3061 event should bubble for undefined
ok 3062 event should be cancelable for undefined
ok 3063 event type should be "shear" for undefined
ok 3064 event should not bubble for undefined
ok 3065 event should not be cancelable for undefined
ok 3066 event should not be null for undefined
ok 3067 event type should be "rotate" for undefined
ok 3068 event should bubble for undefined
ok 3069 event should be cancelable for undefined
ok 3070 event type should be "shear" for undefined
ok 3071 event should not bubble for undefined
ok 3072 event should not be cancelable for undefined
# capture event - all capturing listeners in a direct line from dispatched node will receive the event
ok 3073 should be at 1 event
ok 3074 should not have any bubbled events
ok 3075 should have captured 1 event
# capture event - only capture listeners in a direct line from target to the document node should receive the event
ok 3076 dispatchEvent should return *true*
ok 3077 should be at 1 event
ok 3078 should have bubbled 1 event
ok 3079 should not have captured any events
# bubble event - all non-capturing listeners in a direct line from dispatched node will receive a bubbling event
ok 3080 should be at 1 event
ok 3081 should have 2 bubbled events
ok 3082 should not have any captured events
# bubble event - only bubble listeners in a direct line from target to the document node should receive the event
ok 3083 dispatchEvent should return *true*
ok 3084 should be at 1 event
ok 3085 should have 1 bubbled event
ok 3086 should have captured 1 event
# bubble event - if an event does not bubble, bubble listeners should not receive the event
ok 3087 dispatchEvent should return *true*
ok 3088 should be at 1 event
ok 3089 should not have any bubbled events
ok 3090 should have captured 1 event
# stop propagation - should prevent the target from receiving the event
ok 3091 should be at 0 events
ok 3092 should have no bubbled events
ok 3093 should have 1 captured event
# stop propagation - should prevent all listeners from receiving the event
ok 3094 should be at 1 event
ok 3095 should have 1 bubbled event
ok 3096 should have no captured events
# stop propagation - stopPropagation should not prevent listeners on the same element from receiving the event
ok 3097 should be at 4 events
ok 3098 should have no bubbled events
ok 3099 should have no captured events
# prevent default - the defaultPrevented flag is set when the event is prevented
ok 3100 the defaultPrevented flag should be true when the event is prevented
# prevent default - the defaultPrevented flag is not set when the event is not prevented
ok 3101 the defaultPrevented flag should be false when the event is not prevented
# prevent default - a cancelable event can have its default event disabled
ok 3102 dispatchEvent should return *false*
ok 3103 should be at 1 event
ok 3104 should have bubbled 1 event
ok 3105 should have captured 1 event
# prevent default - a non-cancelable event cannot have its default event disabled
ok 3106 dispatchEvent should return *true*
ok 3107 should be at 1 event
ok 3108 should have bubbled 1 event
ok 3109 should have captured 1 event
# remove listener in handler
ok 3110 handler1 must be called once
ok 3111 handler2 must be called once
ok 3112 handler1 must be called once
ok 3113 handler2 must be called twice
# tests - nodesettextcontent07
ok 3114 nodegettextcontent10
# tests - NIST_coreFunction001
ok 3115 correct substring
# tests - NIST_coreFunction002
ok 3116 correct substring
# tests - NIST_coreFunction003
ok 3117 (unnamed assert)
# tests - NIST_coreFunction004
ok 3118 (unnamed assert)
# tests - NIST_coreFunction005
ok 3119 (unnamed assert)
# tests - NIST_coreFunction006
ok 3120 (unnamed assert)
# tests - NIST_coreFunction007
ok 3121 (unnamed assert)
# tests - NIST_coreFunction008
ok 3122 (unnamed assert)
# tests - NIST_coreFunction009
ok 3123 (unnamed assert)
# tests - NIST_coreFunction010
ok 3124 (unnamed assert)
# tests - NIST_coreFunction011
ok 3125 (unnamed assert)
# tests - NIST_coreFunction012
ok 3126 (unnamed assert)
# tests - NIST_coreFunction013
ok 3127 (unnamed assert)
# tests - NIST_coreFunction014
ok 3128 (unnamed assert)
# tests - NIST_coreFunction015
ok 3129 (unnamed assert)
# tests - NIST_coreFunction016
ok 3130 (unnamed assert)
# tests - NIST_coreFunction017
ok 3131 (unnamed assert)
# tests - NIST_coreFunction060
ok 3132 (unnamed assert)
# tests - NIST_coreFunction061
ok 3133 (unnamed assert)
# tests - NIST_coreFunction064
ok 3134 (unnamed assert)
# tests - NIST_coreFunction065
ok 3135 (unnamed assert)
# tests - NIST_coreFunction066
ok 3136 (unnamed assert)
# tests - NIST_coreFunction067
ok 3137 (unnamed assert)
# tests - NIST_coreFunction068
ok 3138 (unnamed assert)
# tests - NIST_coreFunction069
ok 3139 (unnamed assert)
# tests - NIST_coreFunction071
ok 3140 (unnamed assert)
# tests - NIST_coreFunction072
ok 3141 (unnamed assert)
# tests - NIST_coreFunction074
ok 3142 (unnamed assert)
# tests - NIST_coreFunction075
ok 3143 (unnamed assert)
# tests - NIST_coreFunction078
ok 3144 (unnamed assert)
# tests - NIST_coreFunction079
ok 3145 (unnamed assert)
# tests - NIST_coreFunction080
ok 3146 (unnamed assert)
# tests - NIST_coreFunction081
ok 3147 (unnamed assert)
# tests - NIST_coreFunction082
ok 3148 (unnamed assert)
# tests - NIST_coreFunction083
ok 3149 (unnamed assert)
# tests - NIST_coreFunction084
ok 3150 (unnamed assert)
# tests - NIST_coreFunction085
ok 3151 (unnamed assert)
# tests - NIST_coreFunction086
ok 3152 (unnamed assert)
# tests - NIST_coreFunction087
ok 3153 (unnamed assert)
# tests - NIST_coreFunction088
ok 3154 (unnamed assert)
# tests - NIST_coreFunction089
ok 3155 Array lengths are not the same!
ok 3156 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_dataManipulation001a
ok 3157 (unnamed assert)
# tests - NIST_dataManipulation001b
ok 3158 (unnamed assert)
# tests - NIST_dataManipulation002a
ok 3159 (unnamed assert)
# tests - NIST_dataManipulation003
ok 3160 (unnamed assert)
# tests - NIST_dataManipulation004
ok 3161 (unnamed assert)
# tests - NIST_dataManipulation007
ok 3162 (unnamed assert)
# tests - NIST_dataManipulation009
ok 3163 Array lengths are not the same!
ok 3164 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_dataManipulation013
ok 3165 Array lengths are not the same!
ok 3166 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_dataManipulation014
ok 3167 Array lengths are not the same!
ok 3168 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_dataManipulation016
ok 3169 Array lengths are not the same!
ok 3170 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression001
ok 3171 Array lengths are not the same!
ok 3172 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3173 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression002
ok 3174 Array lengths are not the same!
ok 3175 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3176 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression003
ok 3177 Array lengths are not the same!
ok 3178 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3179 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3180 Array lengths are not the same!
ok 3181 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3182 Array lengths are not the same!
ok 3183 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression004
ok 3184 Array lengths are not the same!
ok 3185 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3186 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3187 Array lengths are not the same!
ok 3188 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3189 Array lengths are not the same!
ok 3190 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression005
ok 3191 Array lengths are not the same!
ok 3192 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3193 Array lengths are not the same!
ok 3194 Array lengths are not the same!
ok 3195 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression006
ok 3196 Array lengths are not the same!
ok 3197 Arrays not equal![object Object] vs [object Object]
ok 3198 Arrays not equal![object Object] vs [object Object]
# tests - NIST_expression007
ok 3199 Array lengths are not the same!
ok 3200 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3201 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression008
ok 3202 Array lengths are not the same!
ok 3203 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3204 Array lengths are not the same!
ok 3205 Array lengths are not the same!
ok 3206 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression009
ok 3207 Array lengths are not the same!
ok 3208 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3209 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression010
ok 3210 Array lengths are not the same!
ok 3211 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression011
ok 3212 Array lengths are not the same!
ok 3213 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3214 Array lengths are not the same!
ok 3215 Array lengths are not the same!
ok 3216 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression012_noVariables
ok 3217 Array lengths are not the same!
ok 3218 Array lengths are not the same!
ok 3219 Array lengths are not the same!
# tests - NIST_expression013
ok 3220 Array lengths are not the same!
ok 3221 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3222 Array lengths are not the same!
ok 3223 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3224 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression016
ok 3225 Array lengths are not the same!
ok 3226 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3227 Array lengths are not the same!
ok 3228 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3229 Array lengths are not the same!
ok 3230 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3231 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression017
ok 3232 Array lengths are not the same!
ok 3233 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3234 Array lengths are not the same!
ok 3235 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3236 Array lengths are not the same!
ok 3237 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3238 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression018
ok 3239 Array lengths are not the same!
ok 3240 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3241 Array lengths are not the same!
ok 3242 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression019_noVariables
ok 3243 Array lengths are not the same!
ok 3244 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3245 Array lengths are not the same!
ok 3246 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression020
ok 3247 Array lengths are not the same!
ok 3248 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3249 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression021
ok 3250 Array lengths are not the same!
ok 3251 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3252 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3253 Array lengths are not the same!
ok 3254 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3255 Array lengths are not the same!
ok 3256 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression022
ok 3257 Array lengths are not the same!
ok 3258 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3259 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression023
ok 3260 Array lengths are not the same!
ok 3261 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3262 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3263 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression025_noVariables
ok 3264 Array lengths are not the same!
ok 3265 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3266 Array lengths are not the same!
ok 3267 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
ok 3268 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_expression027
ok 3269 (unnamed assert)
# tests - NIST_expression028
ok 3270 (unnamed assert)
# tests - NIST_expression029
ok 3271 (unnamed assert)
# tests - NIST_expression030
ok 3272 (unnamed assert)
# tests - NIST_expression031
ok 3273 (unnamed assert)
# tests - NIST_expression032
ok 3274 (unnamed assert)
# tests - NIST_expression033
ok 3275 (unnamed assert)
ok 3276 (unnamed assert)
ok 3277 (unnamed assert)
ok 3278 (unnamed assert)
# tests - NIST_expression034
ok 3279 (unnamed assert)
ok 3280 (unnamed assert)
ok 3281 (unnamed assert)
ok 3282 (unnamed assert)
# tests - NIST_expression035
ok 3283 (unnamed assert)
ok 3284 (unnamed assert)
ok 3285 (unnamed assert)
ok 3286 (unnamed assert)
# tests - NIST_expression036
ok 3287 (unnamed assert)
ok 3288 (unnamed assert)
ok 3289 (unnamed assert)
ok 3290 (unnamed assert)
# tests - NIST_locationPath001
ok 3291 Array lengths are not the same!
ok 3292 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath002
ok 3293 Array lengths are not the same!
ok 3294 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath003
ok 3295 Array lengths are not the same!
ok 3296 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath004
ok 3297 Array lengths are not the same!
ok 3298 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath005
ok 3299 Array lengths are not the same!
ok 3300 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath006
ok 3301 Array lengths are not the same!
ok 3302 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath007
ok 3303 Array lengths are not the same!
ok 3304 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath008
ok 3305 Array lengths are not the same!
ok 3306 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath009
ok 3307 Array lengths are not the same!
ok 3308 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# tests - NIST_locationPath010
ok 3309 Array lengths are not the same!
ok 3310 Arrays not equal![object HTMLUnknownElement] vs [object HTMLUnknownElement]
# testTokenizeRegexp
ok 3311 (unnamed assert)
ok 3312 (unnamed assert)
ok 3313 (unnamed assert)
ok 3314 (unnamed assert)
ok 3315 (unnamed assert)
ok 3316 (unnamed assert)
ok 3317 (unnamed assert)
ok 3318 (unnamed assert)
ok 3319 (unnamed assert)
ok 3320 (unnamed assert)
ok 3321 (unnamed assert)
ok 3322 (unnamed assert)
ok 3323 (unnamed assert)
ok 3324 (unnamed assert)
ok 3325 (unnamed assert)
ok 3326 (unnamed assert)
ok 3327 (unnamed assert)
ok 3328 (unnamed assert)
ok 3329 (unnamed assert)
ok 3330 (unnamed assert)
ok 3331 (unnamed assert)
ok 3332 (unnamed assert)
ok 3333 (unnamed assert)
ok 3334 (unnamed assert)
# testPeekPop
ok 3335 (unnamed assert)
ok 3336 (unnamed assert)
ok 3337 (unnamed assert)
ok 3338 (unnamed assert)
ok 3339 (unnamed assert)
ok 3340 (unnamed assert)
# testPopFuncName
ok 3341 (unnamed assert)
ok 3342 (unnamed assert)
ok 3343 (unnamed assert)
ok 3344 (unnamed assert)
ok 3345 (unnamed assert)
ok 3346 (unnamed assert)
ok 3347 (unnamed assert)
ok 3348 (unnamed assert)
ok 3349 (unnamed assert)
ok 3350 (unnamed assert)
ok 3351 (unnamed assert)
ok 3352 (unnamed assert)
ok 3353 (unnamed assert)
ok 3354 (unnamed assert)
ok 3355 (unnamed assert)
ok 3356 (unnamed assert)
ok 3357 (unnamed assert)
ok 3358 (unnamed assert)
ok 3359 (unnamed assert)
# testPopFuncWithSpaces
ok 3360 (unnamed assert)
ok 3361 (unnamed assert)
ok 3362 (unnamed assert)
ok 3363 (unnamed assert)
ok 3364 (unnamed assert)
ok 3365 (unnamed assert)
ok 3366 (unnamed assert)
ok 3367 (unnamed assert)
ok 3368 (unnamed assert)
ok 3369 (unnamed assert)
ok 3370 (unnamed assert)
ok 3371 (unnamed assert)
# testTryPopNameTest
ok 3372 (unnamed assert)
ok 3373 (unnamed assert)
ok 3374 (unnamed assert)
ok 3375 (unnamed assert)
ok 3376 (unnamed assert)
ok 3377 (unnamed assert)
ok 3378 (unnamed assert)
ok 3379 (unnamed assert)
ok 3380 (unnamed assert)
# testTryPopLiteral
ok 3381 (unnamed assert)
ok 3382 (unnamed assert)
ok 3383 (unnamed assert)
ok 3384 (unnamed assert)
ok 3385 (unnamed assert)
ok 3386 (unnamed assert)
ok 3387 (unnamed assert)
ok 3388 (unnamed assert)
# testTryPopNumber
ok 3389 (unnamed assert)
ok 3390 (unnamed assert)
ok 3391 (unnamed assert)
ok 3392 (unnamed assert)
ok 3393 (unnamed assert)
ok 3394 (unnamed assert)
ok 3395 (unnamed assert)
ok 3396 (unnamed assert)
ok 3397 (unnamed assert)
ok 3398 (unnamed assert)
ok 3399 (unnamed assert)
# testTryPopVarRef
ok 3400 (unnamed assert)
ok 3401 (unnamed assert)
ok 3402 (unnamed assert)
ok 3403 (unnamed assert)
ok 3404 (unnamed assert)
ok 3405 (unnamed assert)
# testParseNumber
ok 3406 (unnamed assert)
# testParseLiteral
ok 3407 (unnamed assert)
# testParseFunctionCall
ok 3408 (unnamed assert)
# testParseFunctionOfEmptyString
ok 3409 (unnamed assert)
# testParseVariableReference
ok 3410 (unnamed assert)
# testParsePrimative
ok 3411 (unnamed assert)
# testPrimaryParens
ok 3412 (unnamed assert)
# testParseStepShorthands
ok 3413 (unnamed assert)
# testParseWildcard
ok 3414 (unnamed assert)
# testParseFilter
ok 3415 (unnamed assert)
# testParseStepWithPredicate
ok 3416 (unnamed assert)
# testParsePathWithPredicate
ok 3417 (unnamed assert)
# testParseAbsoluteLocationPath
ok 3418 (unnamed assert)
# testParseRelativeLocationPath
ok 3419 (unnamed assert)
# testParseNodeTest
ok 3420 (unnamed assert)
# testParseAbsoluteShorthand
ok 3421 (unnamed assert)
# testParseLocationShorthand
ok 3422 (unnamed assert)
# testParseRoot
ok 3423 (unnamed assert)
# testEvaluateNumber
ok 3424 (unnamed assert)
# testEvaluateExtraParens
ok 3425 (unnamed assert)
# testEvaluateNumberFunction
ok 3426 (unnamed assert)
# testEvaluateUnaryMinus
ok 3427 (unnamed assert)
# testEvaluateUnaryMinusCoerced
ok 3428 (unnamed assert)
# testEvaluateArithmetic
ok 3429 (unnamed assert)
# testEvaluateArithmetic2
ok 3430 (unnamed assert)
# testEvaluateWildcardChild
ok 3431 (unnamed assert)
# testEvaluateArithmetic3
ok 3432 (unnamed assert)
# testEvaluateRoot
not ok 3433 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level3/xpath.js
    line:    345
    column:  8
    stack:
      - |
        Object.testEvaluateRoot (/workdir/npm-module/test/level3/xpath.js:345:8)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  |
      {"nodes":[{"location":{"href":"about:blank","origin":"null","protocol":"about:","host":"","hostname":"","port":"","pathname":"blank","search":"","hash":""},"children":{"0":"<html><head></head><body>Hello.</body></html>"},"firstElementChild":"<html><head></head><body>Hello.</body></html>","lastElementChild":"<html><head></head><body>Hello.</body></html>","childElementCount":1,"implementation":{},"URL":"about:blank","documentURI":"about:blank","compatMode":"BackCompat","characterSet":"UTF-8","charset":"UTF-8","inputEncoding":"UTF-8","contentType":"text/html","doctype":null,"documentElement":"<html><head></head><body>Hello.</body></html>","referrer":"","cookie":"","readyState":"complete","title":"","body":"<body>Hello.</body>","head":"<head></head>","images":{},"links":{},"forms":{},"currentScript":null,"defaultView":{"_core":{},"_globalProxy":"[circular]","__timers":{},"_top":"[circular]","_parent":"[circular]","_document":"[circular]","_sessionHistory":[{"document":{"_eventListeners":{},"_core":{},"_ownerDocument":"[circular]","_readonly":false,"_childNodesList":{"0":"<html><head></head><body>Hello.</body></html>"},"_childrenList":{"0":"<html><head></head><body>Hello.</body></html>"},"_version":5,"_memoizedQueries":{"6":{"IMG":{},"FORM":{},"A":{},"base":{}}},"nodeType":9,"_parsingMode":"html","_htmlToDom":{"core":{},"parser":{"JsDomParser":{},"TreeAdapters":{"default":{},"htmlparser2":{}}},"parsingMode":"html","parserType":"parse5v1"},"_implementation":{"core":{},"_ownerDocument":"[circular]","_features":{"core":["2.0"],"html":["2.0"],"xhtml":["2.0"],"xml":["2.0"],"fetchexternalresources":["script","link"],"processexternalresources":["script"],"mutationevents":["2.0"]}},"_defaultView":"[circular]","_global":"[circular]","_documentElement":"<html><head></head><body>Hello.</body></html>","_ids":{},"_attached":true,"_currentScript":null,"_cookieJar":{"version":"tough-cookie@2.4.3","storeType":null,"rejectPublicSuffixes":true,"cookies":[]},"_contentType":"text/html","_URL":{"scheme":"about","username":"","password":null,"host":null,"port":null,"path":["blank"],"query":null,"fragment":null,"nonRelative":true},"_location":{"_relevantDocument":"[circular]","url":null},"_history":{"_window":"[circular]","_document":"[circular]","_state":null,"_latestEntry":null,"_historyTraversalQueue":{}},"_activeNodeIterators":[],"_activeNodeIteratorsMax":10,"_referrer":"","_queue":{"paused":false,"tail":null},"readyState":"complete","_lastFocusedElement":null,"_styleSheets":{},"_nwmatcher":{"ACCEPT_NODE":"r[r.length]=c[k];if(f&&false===f(c[k]))break main;else continue main;","Config":{"CACHING":false,"ESCAPECHR":true,"NON_ASCII":true,"SELECTOR3":true,"UNICODE16":true,"SHORTCUTS":false,"SIMPLENOT":true,"SVG_LCASE":false,"UNIQUE_ID":false,"USE_HTML5":true,"VERBOSITY":true,"LOGERRORS":true},"Snapshot":{},"Operators":{"=":"n=='%m'","^=":"n.indexOf('%m')==0","*=":"n.indexOf('%m')>-1","|=":"(n+'-').indexOf('%m-')==0","~=":"(' '+n+' ').indexOf(' %m ')>-1","$=":"n.substr(n.length-'%m'.length)=='%m'"},"Selectors":{},"Tokens":{"prefixes":"(?:[#.:]|::)?","identifier":"-?(?:-{2}|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])(?:-|[0-9]|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])*","attributes":"[\\x20\\t\\n\\r\\f]*(-?(?:-{2}|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])(?:-|[0-9]|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])*(?::-?(?:-{2}|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])(?:-|[0-9]|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])*)?)[\\x20\\t\\n\\r\\f]*(?:([~*^$|!]?={1})[\\x20\\t\\n\\r\\f]*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|-?(?:-{2}|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])(?:-|[0-9]|[_a-zA-Z]|[^\\x00-\\x9f]|\\\\[0-9a-fA-F]{1,6}(?:\\r\\n|[\\x20\\t\\n\\r\\f])?|\\\\[^\\n\\r\\f0-9a-fA-F])*))?[\\x20\\t\\n\\r\\f]*(i)?[\\x20\\t\\n\\r\\f]*"},"Version":"nwmatcher-1.4.4"},"_elementBuilders":{}},"url":{"scheme":"about","username":"","password":null,"host":null,"port":null,"path":["blank"],"query":null,"fragment":null,"nonRelative":true},"stateObject":null}],"_currentSessionHistoryEntryIndex":0,"_length":0,"_virtualConsole":{"_events":{},"_eventsCount":1},"length":0,"window":"[circular]","frames":"[circular]","self":"[circular]","parent":"[circular]","top":"[circular]","document":"[circular]","location":{"href":"about:blank","origin":"null","protocol":"about:","host":"","hostname":"","port":"","pathname":"blank","search":"","hash":""},"history":{"length":1,"state":null},"console":{},"navigator":{"userAgent":"Node.js (linux; U; rv:v10.9.0)","appName":"Node.js jsDom","platform":"linux","appVersion":"v10.9.0","noUI":true,"cookieEnabled":true},"name":"nodejs","innerWidth":1024,"innerHeight":768,"outerWidth":1024,"outerHeight":768,"pageXOffset":0,"pageYOffset":0,"screenX":0,"screenY":0,"screenLeft":0,"screenTop":0,"scrollX":0,"scrollY":0,"scrollTop":0,"scrollLeft":0,"screen":{"width":0,"height":0}},"activeElement":"<body>Hello.</body>","anchors":{},"applets":{},"styleSheets":{},"ELEMENT_NODE":1,"ATTRIBUTE_NODE":2,"TEXT_NODE":3,"CDATA_SECTION_NODE":4,"ENTITY_REFERENCE_NODE":5,"ENTITY_NODE":6,"PROCESSING_INSTRUCTION_NODE":7,"COMMENT_NODE":8,"DOCUMENT_NODE":9,"DOCUMENT_TYPE_NODE":10,"DOCUMENT_FRAGMENT_NODE":11,"NOTATION_NODE":12,"nodeType":9,"nodeName":"#document","baseURI":"about:blank","ownerDocument":null,"parentNode":null,"parentElement":null,"childNodes":{"0":"<html><head></head><body>Hello.</body></html>"},"firstChild":"<html><head></head><body>Hello.</body></html>","lastChild":"<html><head></head><body>Hello.</body></html>","previousSibling":null,"nextSibling":null,"nodeValue":null,"textContent":null,"DOCUMENT_POSITION_DISCONNECTED":1,"DOCUMENT_POSITION_PRECEDING":2,"DOCUMENT_POSITION_FOLLOWING":4,"DOCUMENT_POSITION_CONTAINS":8,"DOCUMENT_POSITION_CONTAINED_BY":16,"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC":32}]}
    found:   |
      {"nodes":[{"location":{"href":"about:blank","origin":"null","protocol":"about:","host":"","hostname":"","port":"","pathname":"blank","search":"","hash":""},"children":{"0":"<html><head></head><body>Hello.</body></html>"},"firstElementChild":"<html><head></head><body>Hello.</body></html>","lastElementChild":"<html><head></head><body>Hello.</body></html>","childElementCount":1,"implementation":{},"URL":"about:blank","documentURI":"about:blank","compatMode":"BackCompat","characterSet":"UTF-8","charset":"UTF-8","inputEncoding":"UTF-8","contentType":"text/html","doctype":null,"documentElement":"<html><head></head><body>Hello.</body></html>","referrer":"","cookie":"","readyState":"complete","title":"","body":"<body>Hello.</body>","head":"<head></head>","images":{},"links":{},"forms":{},"currentScript":null,"defaultView":{"_core":{},"_globalProxy":"[circular]","__timers":{},"_top":"[circular]","_parent":"[circular]","_document":"[circular]","_sessionHistory":[{"document":{"_eventListeners":{},"_core":{},"_ownerDocument":"[circular]","_readonly":false,"_childNodesList":null,"_childrenList":{"0":"<html><head></head><body>Hello.</body></html>"},"_version":5,"_memoizedQueries":{"6":{"IMG":{},"FORM":{}}},"nodeType":9,"_parsingMode":"html","_htmlToDom":{"core":{},"parser":{"JsDomParser":{},"TreeAdapters":{"default":{},"htmlparser2":{}}},"parsingMode":"html","parserType":"parse5v1"},"_implementation":{"core":{},"_ownerDocument":"[circular]","_features":{"core":["2.0"],"html":["2.0"],"xhtml":["2.0"],"xml":["2.0"],"fetchexternalresources":["script","link"],"processexternalresources":["script"],"mutationevents":["2.0"]}},"_defaultView":"[circular]","_global":"[circular]","_documentElement":"<html><head></head><body>Hello.</body></html>","_ids":{},"_attached":true,"_currentScript":null,"_cookieJar":{"version":"tough-cookie@2.4.3","storeType":null,"rejectPublicSuffixes":true,"cookies":[]},"_contentType":"text/html","_URL":{"scheme":"about","username":"","password":null,"host":null,"port":null,"path":["blank"],"query":null,"fragment":null,"nonRelative":true},"_location":{"_relevantDocument":"[circular]","url":null},"_history":{"_window":"[circular]","_document":"[circular]","_state":null,"_latestEntry":null,"_historyTraversalQueue":{}},"_activeNodeIterators":[],"_activeNodeIteratorsMax":10,"_referrer":"","_queue":{"paused":false,"tail":null},"readyState":"complete","_lastFocusedElement":null,"_elementBuilders":{}},"url":{"scheme":"about","username":"","password":null,"host":null,"port":null,"path":["blank"],"query":null,"fragment":null,"nonRelative":true},"stateObject":null}],"_currentSessionHistoryEntryIndex":0,"_length":0,"_virtualConsole":{"_events":{},"_eventsCount":1},"length":0,"window":"[circular]","frames":"[circular]","self":"[circular]","parent":"[circular]","top":"[circular]","document":"[circular]","location":{"href":"about:blank","origin":"null","protocol":"about:","host":"","hostname":"","port":"","pathname":"blank","search":"","hash":""},"history":{"length":1,"state":null},"console":{},"navigator":{"userAgent":"Node.js (linux; U; rv:v10.9.0)","appName":"Node.js jsDom","platform":"linux","appVersion":"v10.9.0","noUI":true,"cookieEnabled":true},"name":"nodejs","innerWidth":1024,"innerHeight":768,"outerWidth":1024,"outerHeight":768,"pageXOffset":0,"pageYOffset":0,"screenX":0,"screenY":0,"screenLeft":0,"screenTop":0,"scrollX":0,"scrollY":0,"scrollTop":0,"scrollLeft":0,"screen":{"width":0,"height":0}},"activeElement":"<body>Hello.</body>","anchors":{},"applets":{},"styleSheets":{},"ELEMENT_NODE":1,"ATTRIBUTE_NODE":2,"TEXT_NODE":3,"CDATA_SECTION_NODE":4,"ENTITY_REFERENCE_NODE":5,"ENTITY_NODE":6,"PROCESSING_INSTRUCTION_NODE":7,"COMMENT_NODE":8,"DOCUMENT_NODE":9,"DOCUMENT_TYPE_NODE":10,"DOCUMENT_FRAGMENT_NODE":11,"NOTATION_NODE":12,"nodeType":9,"nodeName":"#document","baseURI":"about:blank","ownerDocument":null,"parentNode":null,"parentElement":null,"childNodes":{"0":"<html><head></head><body>Hello.</body></html>"},"firstChild":"<html><head></head><body>Hello.</body></html>","lastChild":"<html><head></head><body>Hello.</body></html>","previousSibling":null,"nextSibling":null,"nodeValue":null,"textContent":null,"DOCUMENT_POSITION_DISCONNECTED":1,"DOCUMENT_POSITION_PRECEDING":2,"DOCUMENT_POSITION_FOLLOWING":4,"DOCUMENT_POSITION_CONTAINS":8,"DOCUMENT_POSITION_CONTAINED_BY":16,"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC":32}]}
    diff:    |
      FOUND:  \"_childNodesList\":null,\"_childrenList
      WANTED: \"_childNodesList\":{\"0\":\"<html><head
                                  ^ (at position = 1078)
  ...
# testEvaluateSelf
ok 3434 (unnamed assert)
# testEvaluateParent
ok 3435 (unnamed assert)
# testSortUniqDocumentOrder
ok 3436 (unnamed assert)
# testId
ok 3437 (unnamed assert)
# testEvaluateChildAxis
ok 3438 (unnamed assert)
# testDescendantDfs1
ok 3439 (unnamed assert)
# testDescendantOrSelfChild
ok 3440 (unnamed assert)
# testDescendantDfs
ok 3441 (unnamed assert)
# testDescendantDfsAndSelf
ok 3442 (unnamed assert)
# testDescendantDfsMultipleRoots
not ok 3443 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level3/xpath.js
    line:    482
    column:  8
    stack:
      - |
        Object.testDescendantDfsMultipleRoots (/workdir/npm-module/test/level3/xpath.js:482:8)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  |
      {"nodes":["<head></head>","<body><div>a<div>b</div></div></body>","<div>a<div>b</div></div>","<div>b</div>"],"pos":[[1],[2],[3],[4,1]],"lasts":[[4],[4],[4],[4,1]]}
    found:   |
      {"nodes":["<body><div>a<div>b</div></div></body>","<div>a<div>b</div></div>","<div>b</div>"],"pos":[[1],[2],[3,1]],"lasts":[[3],[3],[3,1]]}
    diff:    |
      FOUND:  {\"nodes\":[\"<body><div>a<div>b</div></
      WANTED: {\"nodes\":[\"<head></head>\",\"<body><d
                             ^ (at position = 12)
  ...
# testFollowing
ok 3444 (unnamed assert)
# testPreceding
not ok 3445 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level3/xpath.js
    line:    521
    column:  8
    stack:
      - |
        Object.testPreceding (/workdir/npm-module/test/level3/xpath.js:521:8)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  |
      {"nodes":["<head></head>","<div>a<div>b</div></div>","<div>b</div>"],"pos":[[3],[2],[1]],"lasts":[[3],[3],[3]]}
    found:   |
      {"nodes":["<div>a<div>b</div></div>","<div>b</div>"],"pos":[[2],[1]],"lasts":[[2],[2]]}
    diff:    |
      FOUND:  {\"nodes\":[\"<div>a<div>b</div></div>\"
      WANTED: {\"nodes\":[\"<head></head>\",\"<div>a<d
                             ^ (at position = 12)
  ...
# testPreceding2
ok 3446 (unnamed assert)
# testFollowingSibling
ok 3447 (unnamed assert)
# testPrecedingSibling
ok 3448 (unnamed assert)
# testAncestor
ok 3449 (unnamed assert)
# testChild
ok 3450 (unnamed assert)
# testEvaluatePosition
ok 3451 (unnamed assert)
# testEvaluatePositionAndLast
ok 3452 (unnamed assert)
# testAttributePredicate
ok 3453 (unnamed assert)
# testMorePredicates
ok 3454 (unnamed assert)
# testAttributeWildcard
ok 3455 (unnamed assert)
# testEvaluatePath
ok 3456 (unnamed assert)
# testEvaluateName
not ok 3457 (unnamed assert)
  ---
    type:
      found:  undefined
      wanted: undefined
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level3/xpath.js
    line:    676
    column:  8
    stack:
      - |
        Object.testEvaluateName (/workdir/npm-module/test/level3/xpath.js:676:8)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  ~
    found:   body
  ...
not ok 3458 (unnamed assert)
  ---
    type:
      found:  undefined
      wanted: undefined
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level3/xpath.js
    line:    677
    column:  8
    stack:
      - |
        Object.testEvaluateName (/workdir/npm-module/test/level3/xpath.js:677:8)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  ~
    found:   body
  ...
# testEvaluateSubstringBefore
ok 3459 (unnamed assert)
# testEvaluateSubstringAfter
ok 3460 (unnamed assert)
# testEvaluateSubstring
ok 3461 (unnamed assert)
ok 3462 (unnamed assert)
# testEvaluateContains
ok 3463 (unnamed assert)
ok 3464 (unnamed assert)
# testEvaluateTranslate
ok 3465 (unnamed assert)
ok 3466 (unnamed assert)
ok 3467 (unnamed assert)
# testUnion
ok 3468 (unnamed assert)
# testUnion2
ok 3469 (unnamed assert)
# testUnion3
ok 3470 (unnamed assert)
# testAttributesHaveNoChildren
ok 3471 (unnamed assert)
ok 3472 (unnamed assert)
ok 3473 (unnamed assert)
ok 3474 (unnamed assert)
ok 3475 (unnamed assert)
ok 3476 (unnamed assert)
ok 3477 (unnamed assert)
not ok 3478 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/level3/xpath.js
    line:    783
    column:  8
    stack:
      - |
        Object.testAttributesHaveNoChildren (/workdir/npm-module/test/level3/xpath.js:783:8)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  |
      {"nodes":["<head></head>","<a></a>"],"pos":[[2],[1]],"lasts":[[2],[2]]}
    found:   |
      {"nodes":["<a></a>"],"pos":[[1]],"lasts":[[1]]}
    diff:    |
      FOUND:  {\"nodes\":[\"<a></a>\"],\"pos\":[[1]],\
      WANTED: {\"nodes\":[\"<head></head>\",\"<a></a>\
                             ^ (at position = 12)
  ...
ok 3479 (unnamed assert)
# testDocumentEvaluate
ok 3480 (unnamed assert)
# testDocumentEvaluate2
ok 3481 (unnamed assert)
# testDocumentEvaluateWildcard
ok 3482 (unnamed assert)
# testDocumentEvaluateStringPred
ok 3483 (unnamed assert)
# testAttributeNodePredicate
ok 3484 (unnamed assert)
ok 3485 (unnamed assert)
ok 3486 (unnamed assert)
ok 3487 (unnamed assert)
ok 3488 (unnamed assert)
# an attribute set by setAttributeNS should be accessible as a field on the `attributes` field of an Element
ok 3489 body is not null
ok 3490 one attribute
ok 3491 (unnamed assert)
# setNamedItem and removeNamedItem on `attributes` should add and remove fields from `attributes`
ok 3492 (unnamed assert)
ok 3493 (unnamed assert)
ok 3494 (unnamed assert)
ok 3495 (unnamed assert)
ok 3496 (unnamed assert)
ok 3497 (unnamed assert)
ok 3498 (unnamed assert)
ok 3499 (unnamed assert)
ok 3500 (unnamed assert)
# setNamedItem and removeNamedItem on `attributes` should not interfere with existing method names
ok 3501 (unnamed assert)
ok 3502 (unnamed assert)
ok 3503 (unnamed assert)
# an attribute with a null namespace should be accessible as a field on the `attributes` field of an Element
ok 3504 body is not null
ok 3505 one attribute
ok 3506 (unnamed assert)
# an attribute with a set namespace should be accessible as a field on the `attributes` field of an Element
ok 3507 body is not null
ok 3508 one attribute
ok 3509 (unnamed assert)
# setting an attribute should not overwrite the methods of an `NamedNodeMap` object
ok 3510 body is not null
ok 3511 one attribute
ok 3512 (unnamed assert)
# setting an attribute should not overwrite the methods defined by parents of an `NamedNodeMap` object
ok 3513 body is not null
ok 3514 one attribute
ok 3515 (unnamed assert)
# setting an attribute should not overwrite the fields of an `NamedNodeMap` object
ok 3516 body is not null
ok 3517 one attribute
# classList is a DOMTokenList
ok 3518 (unnamed assert)
ok 3519 (unnamed assert)
# .length returns number of tokens
ok 3520 (unnamed assert)
ok 3521 (unnamed assert)
ok 3522 (unnamed assert)
ok 3523 (unnamed assert)
# .item(index) returns expected token
ok 3524 (unnamed assert)
ok 3525 (unnamed assert)
ok 3526 (unnamed assert)
ok 3527 (unnamed assert)
ok 3528 (unnamed assert)
# [index] returns expected token
ok 3529 (unnamed assert)
ok 3530 (unnamed assert)
ok 3531 (unnamed assert)
# .contains(token) returns whether token exists
ok 3532 (unnamed assert)
ok 3533 (unnamed assert)
ok 3534 (unnamed assert)
# .contains() throws if token empty
ok 3535 (unnamed assert)
# .contains() throws if token contains whitespace
ok 3536 (unnamed assert)
# .add(tokens...) adds provided tokens
ok 3537 (unnamed assert)
ok 3538 (unnamed assert)
ok 3539 (unnamed assert)
ok 3540 (unnamed assert)
ok 3541 (unnamed assert)
ok 3542 (unnamed assert)
ok 3543 (unnamed assert)
ok 3544 (unnamed assert)
ok 3545 (unnamed assert)
# .add() throws if a token is empty
ok 3546 (unnamed assert)
# .add() throws if a token contains whitespace
ok 3547 (unnamed assert)
# .remove(tokens...) removes provided tokens
ok 3548 (unnamed assert)
ok 3549 (unnamed assert)
ok 3550 (unnamed assert)
ok 3551 (unnamed assert)
ok 3552 (unnamed assert)
ok 3553 (unnamed assert)
ok 3554 (unnamed assert)
ok 3555 (unnamed assert)
ok 3556 (unnamed assert)
ok 3557 (unnamed assert)
# .remove() throws if a token is empty
ok 3558 (unnamed assert)
# .remove() throws if a token contains whitespace
ok 3559 (unnamed assert)
# .toggle(token) toggles specified token
ok 3560 (unnamed assert)
ok 3561 (unnamed assert)
ok 3562 (unnamed assert)
ok 3563 (unnamed assert)
# .toggle(token, true) adds token
ok 3564 (unnamed assert)
ok 3565 (unnamed assert)
ok 3566 (unnamed assert)
ok 3567 (unnamed assert)
# .toggle(token, false) removes token
ok 3568 (unnamed assert)
ok 3569 (unnamed assert)
ok 3570 (unnamed assert)
ok 3571 (unnamed assert)
# .toggle(token) returns whether token exists
ok 3572 (unnamed assert)
ok 3573 (unnamed assert)
# .toggle() throws if a token is empty
ok 3574 (unnamed assert)
# .toggle() throws if a token contains whitespace
ok 3575 (unnamed assert)
# accessing classList should remove duplicates
ok 3576 (unnamed assert)
ok 3577 (unnamed assert)
# .toString() should return empty string when empty
ok 3578 (unnamed assert)
# classList should return same object
ok 3579 (unnamed assert)
ok 3580 (unnamed assert)
# length should be readonly
ok 3581 (unnamed assert)
ok 3582 (unnamed assert)
# A document contains and precedes its document type
ok 3583 Doctype contained
ok 3584 Doctype follows
# A document contains and precedes its newly attached document type
ok 3585 Doctype contained
ok 3586 Doctype follows
# Two document nodes obtained from the same document are disconnected and implementation specific
ok 3587 Disconnected
ok 3588 Implementation Specific
# A document is disconnected from and precedes a DocumentFragment
ok 3589 Fragment disconnected
ok 3590 Fragment follows
ok 3591 Implementation Specific
# A document node compared to itself returns nothing
ok 3592 No Bitmask
# A document and a newly created document are disconnected and implementation specific
ok 3593 Fragment disconnected
ok 3594 Fragment follows
ok 3595 Implementation Specific
# A document contains and precedes its document element and vice versa
ok 3596 DocumentElement contained
ok 3597 DocumentElement follows
ok 3598 Document contains
ok 3599 Document precedes
# Document contains and precedes a newly attached element and vice versa
ok 3600 Document contains
ok 3601 Document precedes
ok 3602 Element contained
ok 3603 Element follows
# Document contains and precedes an existing element and vice versa
ok 3604 Document contains
ok 3605 Document precedes
ok 3606 Element contained
ok 3607 Element follows
# Document contains and precedes a newly attached processing instruction and vice versa
ok 3608 Document contains
ok 3609 Document precedes
ok 3610 Element contained
ok 3611 Element follows
# Document contains and precedes a newly attached comment and vice versa
ok 3612 Document contains
ok 3613 Document precedes
ok 3614 Comment contained
ok 3615 Comment follows
# Document fragment contains and precedes a newly attached nide and vice versa
ok 3616 Fragment contains
ok 3617 Fragment precedes
ok 3618 Span contained
ok 3619 Span follows
# Newly appended ProcessingInstruction node follows older appended ProcessingInstruction Node
ok 3620 Second PI Follows
ok 3621 First PI Precedes
# Newly appended Text node follows older appended Text Node
ok 3622 Second Text Node Follows
ok 3623 First Text Node Precedes
# Existing element precedes one later in the markup and vice versa
ok 3624 Second Element Follows
ok 3625 First Element Precedes
# Element contains and precedes a decendant node and vice versa
ok 3626 Span contains
ok 3627 Span precedes
ok 3628 Strong contained
ok 3629 Strong follows
# A Child node precedes a child of a node later in the markup
ok 3630 Second Element Follows
ok 3631 First Element Precedes
# A newly attached child node precedes a child node later in the markup
ok 3632 Second Element Follows
ok 3633 New Element Precedes
# A newly attached child node follows a child node earlier in the markup
ok 3634 Second Element Precedes
ok 3635 New Element Follows
# Testing a node against a non node type throws an error
ok 3636 (unnamed assert)
# new DOMImplementation() is not allowed
ok 3637 (unnamed assert)
# create an empty document
ok 3638 document should not contain any nodes
# doctype ownerDocument
ok 3639 doctype should belong to the document the implementation belongs to
ok 3640 doctype should belong to the new document
# doctype child of ownerDocument
ok 3641 doctype should be a child of the document
# defaultView should be null
ok 3642 defaultView should be null
# location should be null
ok 3643 location should be null
# setting proxied event handlers on the body should have no effect
ok 3644 onafterprint should always be null because there is no window
ok 3645 onbeforeprint should always be null because there is no window
ok 3646 onbeforeunload should always be null because there is no window
ok 3647 onblur should always be null because there is no window
ok 3648 onerror should always be null because there is no window
ok 3649 onfocus should always be null because there is no window
ok 3650 onhashchange should always be null because there is no window
ok 3651 onload should always be null because there is no window
ok 3652 onmessage should always be null because there is no window
ok 3653 onoffline should always be null because there is no window
ok 3654 ononline should always be null because there is no window
ok 3655 onpagehide should always be null because there is no window
ok 3656 onpageshow should always be null because there is no window
ok 3657 onpopstate should always be null because there is no window
ok 3658 onresize should always be null because there is no window
ok 3659 onscroll should always be null because there is no window
ok 3660 onstorage should always be null because there is no window
ok 3661 onunload should always be null because there is no window
# iframe added to a created Document should not load
ok 3662 contentWindow should be null, the iframe should never load
ok 3663 contentDocument should be null, the iframe should never load
ok 3664 contentWindow should be null, the iframe should never load
ok 3665 contentDocument should be null, the iframe should never load
# should fire events properly
ok 3666 (unnamed assert)
ok 3667 events should be called FIFO
ok 3668 events should be called FIFO
# Should be able to clone elements with strange names containing colons
ok 3669 (unnamed assert)
ok 3670 (unnamed assert)
# Should be able to clone elements with strange names containing angle brackets
ok 3671 (unnamed assert)
ok 3672 (unnamed assert)
# Cloning a text node
ok 3673 (unnamed assert)
ok 3674 (unnamed assert)
ok 3675 (unnamed assert)
# Cloning a comment node
ok 3676 (unnamed assert)
ok 3677 (unnamed assert)
ok 3678 (unnamed assert)
# Cloning a doctype node
ok 3679 (unnamed assert)
ok 3680 (unnamed assert)
ok 3681 (unnamed assert)
ok 3682 (unnamed assert)
ok 3683 (unnamed assert)
# Cloning a document fragment node, shallowly
ok 3684 (unnamed assert)
ok 3685 (unnamed assert)
ok 3686 (unnamed assert)
# Cloning a document fragment node, deeply
ok 3687 (unnamed assert)
ok 3688 (unnamed assert)
ok 3689 (unnamed assert)
ok 3690 (unnamed assert)
ok 3691 (unnamed assert)
# Deep heterogenous clone of a document
ok 3692 (unnamed assert)
ok 3693 (unnamed assert)
ok 3694 (unnamed assert)
ok 3695 (unnamed assert)
# A node should contain its document type
ok 3696 Document contains its DocumentType
ok 3697 DocumentType does not contain its Document
# A Document should be an inclusive descendant of itself
ok 3698 Document contains itself
# A document should contain its document element but not the reverse
ok 3699 Document contains its DocumentElement
ok 3700 Document Element does not contain its Document
# A DocumentElement should contain a newly created and appended element
ok 3701 DocumentElement contains new appended element
ok 3702 New appended Element does not contain DocumentElement
# The Document should contain a descendant node
ok 3703 Document contains a descendant node
ok 3704 Descentant node does not contain Document
# An element should contain a new appended element
ok 3705 Element contains new appended Element
ok 3706 New Element does not contain Element
# The Document should contain a newly attached ProcessingInstruction
ok 3707 Document contains new attached processing instruction
ok 3708 Processing Instruction does not contain doc
# The document should contain a new attached Comment
ok 3709 Document contains new attached Comment
ok 3710 Comment does not contain Document
# A DocumentFragment should contain a child node
ok 3711 DocumentFragment contains child
ok 3712 DocumentFragment child does not contain DocumentFragment
# Created and attached sibling ProcessingInstructions should not not contain one another
ok 3713 Attached ProcessingInstruction does not contain second attached ProcessingInstruction
ok 3714 Second attached ProcessingInstruction does not contain first attached ProcessingInstruction
# Two created sibling ProcessingInstruction nodes should not contain one another
ok 3715 First attached TextNode does not contain second attached TextNode
ok 3716 Second attached TextNode does not contain first attached TextNode
# The Text node children of two sibling elements should not contain one another
ok 3717 Text node child of first sibling Element does not contain Text node child of second sibling Element
ok 3718 Text node child of second sibling Element does not contain Text node child of first sibling Element
# An element should not contain a following element and vice versa
ok 3719 Element does not contain following element
ok 3720 Element does not contain previous element
# A document should not contain null
ok 3721 Document does not contain null
# A DocumentType should not contain null
ok 3722 Doctype does not contain null
# An existing node should not contain null
ok 3723 Element does not contain null
# A document should not contain an unattached DocumentFragment
ok 3724 Document does not contain fragment
ok 3725 Fragment does not contain document
# A DocumentType should not contain an unattached DocumentFragment
ok 3726 DocumentType does not contain DocumentFragment
ok 3727 DocumentFragment does not contain DocumentType
# An existing element should not contain an unattached DocumentFragment
ok 3728 Element does not contain DocumentFragment
ok 3729 DocumentFragment does not contain Element
# An unattached element should not contain another unattached element
ok 3730 Element does not contain second Element
ok 3731 Second Element does not contain Element
# Should return a boolean value
ok 3732 Return value must be 'true' (strictly)
ok 3733 Return value must be 'false' (strictly)
# Object.keys on a NodeList gives the correct keys
ok 3734 (unnamed assert)
# NodeList is for..of iterable
ok 3735 (unnamed assert)
ok 3736 (unnamed assert)
ok 3737 (unnamed assert)
ok 3738 (unnamed assert)
# NodeList is for..of iterable on live content
ok 3739 (unnamed assert)
ok 3740 (unnamed assert)
ok 3741 (unnamed assert)
ok 3742 (unnamed assert)
ok 3743 (unnamed assert)
ok 3744 (unnamed assert)
# ownerDocument returns null for document nodes
ok 3745 (unnamed assert)
# ownerDocument returns the appropriate document for in-document nodes
ok 3746 (unnamed assert)
ok 3747 element node
ok 3748 (unnamed assert)
ok 3749 text node
ok 3750 (unnamed assert)
ok 3751 comment node
ok 3752 (unnamed assert)
ok 3753 doctype node
# ownerDocument returns the appropriate document for detached nodes
ok 3754 (unnamed assert)
ok 3755 element node
ok 3756 (unnamed assert)
ok 3757 text node
ok 3758 (unnamed assert)
ok 3759 comment node
ok 3760 (unnamed assert)
ok 3761 doctype node
ok 3762 (unnamed assert)
ok 3763 document fragment node
ok 3764 (unnamed assert)
ok 3765 procesing instruction node
# When the parent is null parentElement should be null
ok 3766 When the parent is null, parentElement is not null
# When the parent is a document parentElement should be null (doctype)
ok 3767 When the parent is a document, parentElement is not null (doctype)
# When the parent is a document parentElement should be null (element)
ok 3768 When the parent is a document, parentElement is not null (element)
# When the parent is a document parentElement should be null (comment)
ok 3769 When the parent is a document, parentElement is not null (comment)
# parentElement should return null for children of DocumentFragments (element)
ok 3770 parentElement of DocumentFragment does not return null
ok 3771 parentElement of Element that is not attached to the DOM does not return null
ok 3772 parentNode does return null for an child Element of DocumentFragment
ok 3773 parentElement does not return null for children of DocumentFragments (element)
# parentElement should return null for children of DocumentFragments (text)
ok 3774 parentElement of DocumentFragment does not return null
ok 3775 parentElement of Text that is not attached to the DOM does not return null
ok 3776 parentNode does return null for an child Text node of DocumentFragment
ok 3777 parentElement doesn't return null for children of DocumentFragments (text)
# parentElement should work correctly with DocumentFragments (element)
ok 3778 parentElement of Element that is not attached to the DOM does not return null
ok 3779 parentElement doesn't work correctly with DocumentFragments (element)
# parentElement should work correctly with DocumentFragments (text)
ok 3780 parentElement of Text that is not attached to the DOM does not return null
ok 3781 parentElement doesn't work correctly with DocumentFragments (text)
# parentElement should work correctly in disconnected subtrees (element)
ok 3782 parentElement of Element that is not attached to the DOM does not return null
ok 3783 parentElement doesn't work correctly in disconnected subtrees (element)
# parentElement should work correctly in disconnected subtrees (text)
ok 3784 parentElement of Text that is not attached to the DOM does not return null
ok 3785 parentElement doesn't work correctly in disconnected subtrees (text)
# parentElement should work correctly in a document (element)
ok 3786 parentElement of Element that is not attached to the DOM does not return null
ok 3787 parentElement doesn't work correctly in a document (element)
# querySelector exists on documents
ok 3788 document.querySelector exists
ok 3789 document.querySelector is a function
ok 3790 document.querySelector can find the <body> element
ok 3791 document.querySelector can find a <p> element
# querySelector exists on elements
ok 3792 document.body.querySelector exists
ok 3793 document.body.querySelector is a function
ok 3794 document.body.querySelector can find a <p> element
# querySelector exists on document fragments
ok 3795 docFrag.querySelector exists
ok 3796 docFrag.querySelector is a function
ok 3797 document.querySelector can find a <div> element
ok 3798 document.querySelector can find a <p> element
# querySelector converts its argument to a string before processing
ok 3799 document.querySelector returns the <strong> element
ok 3800 document.querySelector calls toString on any given object
# querySelectorAll exists on documents
ok 3801 document.querySelectorAll exists
ok 3802 document.querySelectorAll is a function
ok 3803 document.querySelectorAll can find the <body> element
ok 3804 document.querySelectorAll can find a <p> element
# querySelectorAll exists on elements
ok 3805 document.body.querySelectorAll exists
ok 3806 document.body.querySelectorAll is a function
ok 3807 document.querySelectorAll can find a <p> element
# querySelectorAll exists on document fragments
ok 3808 docFrag.querySelectorAll exists
ok 3809 docFrag.querySelectorAll is a function
ok 3810 document.querySelectorAll can find a <div> element
ok 3811 document.querySelectorAll can find a <p> element
# querySelectorAll converts its argument to a string before processing
ok 3812 document.querySelectorAll returns all instances of <strong> and <em> elements
ok 3813 document.querySelectorAll calls toString on any given object
# createNodeIterator(): should throw if the first argument is missing
ok 3814 (unnamed assert)
# createNodeIterator(): should throw if the filter argument is not a function or NodeFilter
ok 3815 (unnamed assert)
# createNodeIterator(): should set defaults for missing arguments
ok 3816 root should be set
ok 3817 root was set to the <body>
ok 3818 referenceNode should be set to root right after creation
ok 3819 pointerBeforeReferenceNode should be true right after creation
ok 3820 whatToShow is NodeFilter.SHOW_ALL by default
ok 3821 filter is null by default
# createNodeIterator(): whatToShow should unset high bits
ok 3822 whatToShow should unset high bits
# new NodeIterator() is not allowed
ok 3823 (unnamed assert)
# createNodeIterator(): should create an instanceof NodeIterator
ok 3824 (unnamed assert)
# too many concurrent iterators should throw when accessing the iterator
ok 3825 (unnamed assert)
ok 3826 (unnamed assert)
ok 3827 (unnamed assert)
ok 3828 (unnamed assert)
# detach() should be a no-op
# filter exceptions should be propagated
ok 3829 (unnamed assert)
# NodeIterator instances should not expose any extra properties
ok 3830 root should not be an 'own' property
ok 3831 referenceNode should not be an 'own' property
ok 3832 pointerBeforeReferenceNode should not be an 'own' property
ok 3833 whatToShow should not be an 'own' property
ok 3834 filter should not be an 'own' property
ok 3835 previousNode should not be an 'own' property
ok 3836 nextNode should not be an 'own' property
ok 3837 detach should not be an 'own' property
ok 3838 toString should not be an 'own' property
# The first nextNode() call should return the root
ok 3839 (unnamed assert)
ok 3840 (unnamed assert)
ok 3841 pointerBeforeReferenceNode should be false after nextNode()
# nextNode() should iterate over each descendant of root (in tree order)
ok 3842 (unnamed assert)
ok 3843 (unnamed assert)
ok 3844 pointerBeforeReferenceNode should be false after nextNode()
ok 3845 (unnamed assert)
ok 3846 (unnamed assert)
ok 3847 pointerBeforeReferenceNode should be false after nextNode()
ok 3848 (unnamed assert)
ok 3849 (unnamed assert)
ok 3850 pointerBeforeReferenceNode should be false after nextNode()
ok 3851 (unnamed assert)
ok 3852 (unnamed assert)
ok 3853 pointerBeforeReferenceNode should be false after nextNode()
ok 3854 (unnamed assert)
ok 3855 (unnamed assert)
ok 3856 pointerBeforeReferenceNode should be false after nextNode()
ok 3857 (unnamed assert)
ok 3858 (unnamed assert)
ok 3859 pointerBeforeReferenceNode should be false after nextNode()
ok 3860 (unnamed assert)
ok 3861 (unnamed assert)
ok 3862 pointerBeforeReferenceNode should be false after nextNode()
ok 3863 (unnamed assert)
ok 3864 (unnamed assert)
ok 3865 pointerBeforeReferenceNode should be false after nextNode()
ok 3866 (unnamed assert)
ok 3867 (unnamed assert)
ok 3868 pointerBeforeReferenceNode should be false after nextNode()
ok 3869 (unnamed assert)
ok 3870 (unnamed assert)
ok 3871 pointerBeforeReferenceNode should be false after nextNode()
ok 3872 (unnamed assert)
ok 3873 (unnamed assert)
ok 3874 pointerBeforeReferenceNode should be false after nextNode()
ok 3875 (unnamed assert)
ok 3876 (unnamed assert)
ok 3877 pointerBeforeReferenceNode should be false after nextNode()
ok 3878 (unnamed assert)
ok 3879 (unnamed assert)
ok 3880 pointerBeforeReferenceNode should be false after nextNode()
ok 3881 (unnamed assert)
ok 3882 (unnamed assert)
ok 3883 pointerBeforeReferenceNode should be false after nextNode()
ok 3884 (unnamed assert)
ok 3885 (unnamed assert)
ok 3886 pointerBeforeReferenceNode should be false after nextNode()
ok 3887 (unnamed assert)
ok 3888 (unnamed assert)
ok 3889 pointerBeforeReferenceNode should be false after nextNode()
ok 3890 nextNode should return null after having iterated through all the nodes
ok 3891 referenceNode should reference the last node even though nextNode() returns null
ok 3892 pointerBeforeReferenceNode should be false after nextNode()
# iterating over nodes of a foreign document should be allowed
ok 3893 (unnamed assert)
ok 3894 (unnamed assert)
ok 3895 pointerBeforeReferenceNode should be false after nextNode()
ok 3896 (unnamed assert)
ok 3897 (unnamed assert)
ok 3898 pointerBeforeReferenceNode should be false after nextNode()
ok 3899 (unnamed assert)
ok 3900 (unnamed assert)
ok 3901 pointerBeforeReferenceNode should be false after nextNode()
ok 3902 (unnamed assert)
ok 3903 (unnamed assert)
ok 3904 pointerBeforeReferenceNode should be false after nextNode()
ok 3905 (unnamed assert)
ok 3906 (unnamed assert)
ok 3907 pointerBeforeReferenceNode should be false after nextNode()
ok 3908 (unnamed assert)
ok 3909 (unnamed assert)
ok 3910 pointerBeforeReferenceNode should be false after nextNode()
ok 3911 (unnamed assert)
ok 3912 (unnamed assert)
ok 3913 pointerBeforeReferenceNode should be false after nextNode()
ok 3914 (unnamed assert)
ok 3915 (unnamed assert)
ok 3916 pointerBeforeReferenceNode should be false after nextNode()
ok 3917 (unnamed assert)
ok 3918 (unnamed assert)
ok 3919 pointerBeforeReferenceNode should be false after nextNode()
ok 3920 (unnamed assert)
ok 3921 (unnamed assert)
ok 3922 pointerBeforeReferenceNode should be false after nextNode()
ok 3923 (unnamed assert)
ok 3924 (unnamed assert)
ok 3925 pointerBeforeReferenceNode should be false after nextNode()
ok 3926 (unnamed assert)
ok 3927 (unnamed assert)
ok 3928 pointerBeforeReferenceNode should be false after nextNode()
ok 3929 (unnamed assert)
ok 3930 (unnamed assert)
ok 3931 pointerBeforeReferenceNode should be false after nextNode()
ok 3932 (unnamed assert)
ok 3933 (unnamed assert)
ok 3934 pointerBeforeReferenceNode should be false after nextNode()
ok 3935 (unnamed assert)
ok 3936 (unnamed assert)
ok 3937 pointerBeforeReferenceNode should be false after nextNode()
ok 3938 (unnamed assert)
ok 3939 (unnamed assert)
ok 3940 pointerBeforeReferenceNode should be false after nextNode()
ok 3941 nextNode should return null after having iterated through all the nodes
ok 3942 referenceNode should reference the last node even though nextNode() returns null
ok 3943 pointerBeforeReferenceNode should be false after nextNode()
# previousNode() should have no effect on a newly created iterator
ok 3944 (unnamed assert)
ok 3945 (unnamed assert)
ok 3946 (unnamed assert)
# The root should be the last node that previousNode() will return
ok 3947 (unnamed assert)
ok 3948 (unnamed assert)
ok 3949 pointerBeforeReferenceNode should be true after previousNode()
# previousNode() should return the same node that nextNode() just returned
ok 3950 (unnamed assert)
# previousNode() should iterate over each descendant of root (in reverse tree order)
ok 3951 (unnamed assert)
ok 3952 (unnamed assert)
ok 3953 pointerBeforeReferenceNode should be true after previousNode()
ok 3954 (unnamed assert)
ok 3955 (unnamed assert)
ok 3956 pointerBeforeReferenceNode should be true after previousNode()
ok 3957 (unnamed assert)
ok 3958 (unnamed assert)
ok 3959 pointerBeforeReferenceNode should be true after previousNode()
ok 3960 (unnamed assert)
ok 3961 (unnamed assert)
ok 3962 pointerBeforeReferenceNode should be true after previousNode()
ok 3963 (unnamed assert)
ok 3964 (unnamed assert)
ok 3965 pointerBeforeReferenceNode should be true after previousNode()
ok 3966 (unnamed assert)
ok 3967 (unnamed assert)
ok 3968 pointerBeforeReferenceNode should be true after previousNode()
ok 3969 (unnamed assert)
ok 3970 (unnamed assert)
ok 3971 pointerBeforeReferenceNode should be true after previousNode()
ok 3972 (unnamed assert)
ok 3973 (unnamed assert)
ok 3974 pointerBeforeReferenceNode should be true after previousNode()
ok 3975 (unnamed assert)
ok 3976 (unnamed assert)
ok 3977 pointerBeforeReferenceNode should be true after previousNode()
ok 3978 (unnamed assert)
ok 3979 (unnamed assert)
ok 3980 pointerBeforeReferenceNode should be true after previousNode()
ok 3981 (unnamed assert)
ok 3982 (unnamed assert)
ok 3983 pointerBeforeReferenceNode should be true after previousNode()
ok 3984 (unnamed assert)
ok 3985 (unnamed assert)
ok 3986 pointerBeforeReferenceNode should be true after previousNode()
ok 3987 (unnamed assert)
ok 3988 (unnamed assert)
ok 3989 pointerBeforeReferenceNode should be true after previousNode()
ok 3990 (unnamed assert)
ok 3991 (unnamed assert)
ok 3992 pointerBeforeReferenceNode should be true after previousNode()
ok 3993 (unnamed assert)
ok 3994 (unnamed assert)
ok 3995 pointerBeforeReferenceNode should be true after previousNode()
ok 3996 (unnamed assert)
ok 3997 (unnamed assert)
ok 3998 pointerBeforeReferenceNode should be true after previousNode()
ok 3999 (unnamed assert)
ok 4000 (unnamed assert)
ok 4001 pointerBeforeReferenceNode should be true after previousNode()
ok 4002 nextNode should return null after having iterated through all the nodes
ok 4003 referenceNode should reference root node even though previousNode() returns null
ok 4004 pointerBeforeReferenceNode should be true after previousNode()
# whatToShow should skip nodes of types not present in the bitset
ok 4005 (unnamed assert)
ok 4006 (unnamed assert)
ok 4007 (unnamed assert)
ok 4008 (unnamed assert)
ok 4009 (unnamed assert)
ok 4010 (unnamed assert)
ok 4011 (unnamed assert)
ok 4012 (unnamed assert)
ok 4013 (unnamed assert)
ok 4014 nextNode should return null after having iterated through all the nodes
# should skip nodes using a filter function
ok 4015 Test case prerequisite
ok 4016 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4017 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4018 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4019 (unnamed assert)
ok 4020 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4021 (unnamed assert)
ok 4022 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4023 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4024 nextNode should return null after having iterated through all the nodes
# should skip nodes using a NodeFilter as a filter
ok 4025 Test case prerequisite
ok 4026 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4027 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4028 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4029 (unnamed assert)
ok 4030 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4031 (unnamed assert)
ok 4032 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4033 whatToShow should have filtered non element nodes before acceptNode() is called
ok 4034 nextNode should return null after having iterated through all the nodes
# filter function should also accept booleans as a return value
ok 4035 Test case prerequisite
ok 4036 (unnamed assert)
ok 4037 (unnamed assert)
ok 4038 nextNode should return null after having iterated through all the nodes
# Removing the root node should not affect the iterator state
ok 4039 (unnamed assert)
ok 4040 referenceNode should be set to root right after creation
ok 4041 pointerBeforeReferenceNode should be true right after creation
ok 4042 (unnamed assert)
# Removing a node that is not an inclusive ancestor of the referenceNode should not affect the state
ok 4043 Test case prerequisite
ok 4044 (unnamed assert)
ok 4045 (unnamed assert)
ok 4046 (unnamed assert)
# Removing the referenceNode after nextNode() should update the state properly (null oldPreviousSibling)
ok 4047 referenceNode should be root again
ok 4048 should be false so that nextNode() will return the firstChild again
ok 4049 nextNode() should return the first child again after the previous one was removed
# Removing the referenceNode after nextNode() should update the state properly (non-null oldPreviousSibling)
ok 4050 Test case prerequisite
ok 4051 referenceNode should be set the the oldPreviousSibling of the removed node
ok 4052 (unnamed assert)
ok 4053 nextNode() should return the second child again
# Removing and reinserting the referenceNode after nextNode() should iterate it again
ok 4054 referenceNode should be root again
ok 4055 should be false so that nextNode() will return the firstChild again
ok 4056 (unnamed assert)
# Removing and reinserting the referenceNode after previousNode() should iterate it again
ok 4057 referenceNode should be the nextSibling of the removed node
ok 4058 should be true so that previousNode() will return the same node again
ok 4059 (unnamed assert)
# Removing a parent of the referenceNode should update the state properly
ok 4060 Test case prerequisite
ok 4061 (unnamed assert)
ok 4062 (unnamed assert)
ok 4063 (unnamed assert)
# Removing referenceNode after previousNode(): oldPreviousSibling == null && oldParent.firstChild != null
ok 4064 Test case prerequisite
ok 4065 Test case prerequisite
ok 4066 referenceNode should be the nextSibling of the removed node
ok 4067 (unnamed assert)
ok 4068 (unnamed assert)
ok 4069 (unnamed assert)
# Removing referenceNode after previousNode(): oldPreviousSibling != null && oldPreviousSibling.nextSibling != null
ok 4070 Test case prerequisite
ok 4071 Test case prerequisite
ok 4072 referenceNode should be the nextSibling of the removed node
ok 4073 (unnamed assert)
# Removing referenceNode after previousNode(): oldPreviousSibling == null && oldParent.firstChild == null
ok 4074 Test case prerequisite
ok 4075 Test case prerequisite
ok 4076 referenceNode should be the following node of the oldParent
ok 4077 (unnamed assert)
# Removing referenceNode after previousNode(): oldPreviousSibling != null && oldPreviousSibling.nextSibling == null
ok 4078 Test case prerequisite
ok 4079 Test case prerequisite
ok 4080 Test case prerequisite
ok 4081 referenceNode should be the following node of the oldParent
ok 4082 (unnamed assert)
# Removing referenceNode after previousNode(): node following oldParent is outside of root
ok 4083 referenceNode should be the oldParent
ok 4084 (unnamed assert)
# Removing referenceNode after nextNode(): oldPreviousSibling != null
ok 4085 (unnamed assert)
ok 4086 (unnamed assert)
# Document should implement ParentNode:children
ok 4087 (unnamed assert)
ok 4088 (unnamed assert)
ok 4089 (unnamed assert)
ok 4090 (unnamed assert)
ok 4091 (unnamed assert)
ok 4092 (unnamed assert)
ok 4093 (unnamed assert)
ok 4094 children should be a HTMLCollection
# Element should implement ParentNode:children
ok 4095 (unnamed assert)
ok 4096 (unnamed assert)
ok 4097 (unnamed assert)
ok 4098 (unnamed assert)
ok 4099 (unnamed assert)
ok 4100 (unnamed assert)
ok 4101 (unnamed assert)
ok 4102 (unnamed assert)
ok 4103 (unnamed assert)
ok 4104 children should be a HTMLCollection
# DocumentFragment should implement ParentNode:children
ok 4105 (unnamed assert)
ok 4106 (unnamed assert)
ok 4107 (unnamed assert)
ok 4108 (unnamed assert)
ok 4109 (unnamed assert)
ok 4110 (unnamed assert)
ok 4111 (unnamed assert)
ok 4112 (unnamed assert)
ok 4113 (unnamed assert)
ok 4114 children should be a HTMLCollection
# Document should implement ParentNode:firstElementChild
ok 4115 (unnamed assert)
# Element should implement ParentNode:firstElementChild
ok 4116 (unnamed assert)
ok 4117 (unnamed assert)
# DocumentFragment should implement ParentNode:firstElementChild
ok 4118 (unnamed assert)
ok 4119 (unnamed assert)
# Document should implement ParentNode:lastElementChild
ok 4120 (unnamed assert)
# Element should implement ParentNode:lastElementChild
ok 4121 (unnamed assert)
ok 4122 (unnamed assert)
# DocumentFragment should implement ParentNode:lastElementChild
ok 4123 (unnamed assert)
ok 4124 (unnamed assert)
# Document should implement ParentNode:childElementCount
ok 4125 (unnamed assert)
# Element should implement ParentNode:childElementCount
ok 4126 (unnamed assert)
# DocumentFragment should implement ParentNode:childElementCount
ok 4127 (unnamed assert)
# TextNode should implement NonDocumentTypeChildNode:nextElementSibling
ok 4128 (unnamed assert)
# TextNode should implement NonDocumentTypeChildNode:previousElementSibling
ok 4129 (unnamed assert)
# CommentNode should implement NonDocumentTypeChildNode:nextElementSibling
ok 4130 (unnamed assert)
# CommentNode should implement NonDocumentTypeChildNode:previousElementSibling
ok 4131 (unnamed assert)
# Element should implement NonDocumentTypeChildNode:nextElementSibling
ok 4132 (unnamed assert)
ok 4133 (unnamed assert)
ok 4134 (unnamed assert)
# Element should implement NonDocumentTypeChildNode:previousElementSibling
ok 4135 (unnamed assert)
ok 4136 (unnamed assert)
ok 4137 (unnamed assert)
# document.currentScript is null when not executing <script>
ok 4138 (unnamed assert)
# document.currentScript is currently executing <script> element
ok 4139 currentScript is the currently executing script element
ok 4140 currentScript is still null at top-level
# focus method exists on any html element
ok 4141 (unnamed assert)
ok 4142 HTMLInputElement.focus exists
ok 4143 HTMLInputElement.focus is a function
ok 4144 (unnamed assert)
ok 4145 HTMLDivElement.focus exists
ok 4146 HTMLDivElement.focus is a function
# relative URLs resolved relative to file base URLs (GH-1141)
ok 4147 (unnamed assert)
ok 4148 (unnamed assert)
# a button's type should be submit by default
ok 4149 (unnamed assert)
# a button's type should stay within the range of valid values
ok 4150 (unnamed assert)
ok 4151 (unnamed assert)
ok 4152 (unnamed assert)
ok 4153 (unnamed assert)
ok 4154 (unnamed assert)
ok 4155 (unnamed assert)
ok 4156 (unnamed assert)
ok 4157 (unnamed assert)
ok 4158 (unnamed assert)
ok 4159 (unnamed assert)
# clicking a button with .click() should trigger a submit
ok 4160 (unnamed assert)
# clicking a button by dispatching an event should trigger a submit
ok 4161 (unnamed assert)
# unknown elements should return HTMLUnknownElement
ok 4162 unknown element should inherit from HTMLUnknownElement (createElement)
ok 4163 unknown element should inherit from HTMLElement too (createElement)
ok 4164 unknown element should inherit from HTMLUnknownElement (parsing)
ok 4165 unknown element should inherit from HTMLElement too (parsing)
# other elements should have their respective types
ok 4166 div element should inherit from HTMLDivElement (createElement)
ok 4167 div element should inherit from HTMLElement too (createElement)
ok 4168 div element should inherit from HTMLDivElement (parsing)
ok 4169 div element should inherit from HTMLElement too (parsing)
# non-inherited elements should have the HTMLElement type
ok 4170 article element should be a HTMLElement (parsing)
ok 4171 article element should be a HTMLElement (createElement)
ok 4172 section element should be a HTMLElement (parsing)
ok 4173 section element should be a HTMLElement (createElement)
ok 4174 nav element should be a HTMLElement (parsing)
ok 4175 nav element should be a HTMLElement (createElement)
ok 4176 aside element should be a HTMLElement (parsing)
ok 4177 aside element should be a HTMLElement (createElement)
ok 4178 hgroup element should be a HTMLElement (parsing)
ok 4179 hgroup element should be a HTMLElement (createElement)
ok 4180 header element should be a HTMLElement (parsing)
ok 4181 header element should be a HTMLElement (createElement)
ok 4182 footer element should be a HTMLElement (parsing)
ok 4183 footer element should be a HTMLElement (createElement)
ok 4184 address element should be a HTMLElement (parsing)
ok 4185 address element should be a HTMLElement (createElement)
ok 4186 dt element should be a HTMLElement (parsing)
ok 4187 dt element should be a HTMLElement (createElement)
ok 4188 dd element should be a HTMLElement (parsing)
ok 4189 dd element should be a HTMLElement (createElement)
ok 4190 figure element should be a HTMLElement (parsing)
ok 4191 figure element should be a HTMLElement (createElement)
ok 4192 figcaption element should be a HTMLElement (parsing)
ok 4193 figcaption element should be a HTMLElement (createElement)
ok 4194 main element should be a HTMLElement (parsing)
ok 4195 main element should be a HTMLElement (createElement)
ok 4196 em element should be a HTMLElement (parsing)
ok 4197 em element should be a HTMLElement (createElement)
ok 4198 strong element should be a HTMLElement (parsing)
ok 4199 strong element should be a HTMLElement (createElement)
ok 4200 small element should be a HTMLElement (parsing)
ok 4201 small element should be a HTMLElement (createElement)
ok 4202 s element should be a HTMLElement (parsing)
ok 4203 s element should be a HTMLElement (createElement)
ok 4204 cite element should be a HTMLElement (parsing)
ok 4205 cite element should be a HTMLElement (createElement)
ok 4206 abbr element should be a HTMLElement (parsing)
ok 4207 abbr element should be a HTMLElement (createElement)
ok 4208 code element should be a HTMLElement (parsing)
ok 4209 code element should be a HTMLElement (createElement)
ok 4210 i element should be a HTMLElement (parsing)
ok 4211 i element should be a HTMLElement (createElement)
ok 4212 b element should be a HTMLElement (parsing)
ok 4213 b element should be a HTMLElement (createElement)
ok 4214 u element should be a HTMLElement (parsing)
ok 4215 u element should be a HTMLElement (createElement)
# canvas element is an instance of HTMLElement and HTMLCanvasElement (GH-649)
ok 4216 (unnamed assert)
ok 4217 (unnamed assert)
# canvas elements work with getElementById (GH-737)
ok 4218 (unnamed assert)
# canvas elements width and height must default to 300x150
ok 4219 (unnamed assert)
ok 4220 (unnamed assert)
ok 4221 (unnamed assert)
ok 4222 (unnamed assert)
ok 4223 (unnamed assert)
ok 4224 (unnamed assert)
ok 4225 (unnamed assert)
ok 4226 (unnamed assert)
ok 4227 (unnamed assert)
ok 4228 (unnamed assert)
ok 4229 (unnamed assert)
ok 4230 (unnamed assert)
ok 4231 (unnamed assert)
ok 4232 (unnamed assert)
ok 4233 (unnamed assert)
ok 4234 (unnamed assert)
ok 4235 (unnamed assert)
ok 4236 (unnamed assert)
# canvas width and height must parse correctly initially (GH-1025)
ok 4237 (unnamed assert)
ok 4238 (unnamed assert)
# canvas must resize correctly when given a non-default width/height (GH-1025)
ok 4239 test ignored; not running with the canvas npm package installed
# canvas width and height properties must reflect their attributes after setting them (GH-1281)
ok 4240 (unnamed assert)
ok 4241 (unnamed assert)
# toDataURL should work (when the canvas npm package is provided) (GH-1025)
ok 4242 test ignored; not running with the canvas npm package installed
# Image constructor should create a HTMLImageElement with specified width and height
ok 4243 width should be set to the passed constructor parameter
ok 4244 height should be set to the passed constructor parameter
# html input should handle value/defaultValue correctly
ok 4245 value should equal empty string if uninitialized
ok 4246 defaultValue should equal empty string if uninitialized
ok 4247 value attribute should be null (uninitialized)
ok 4248 setting the defaultValue should also change the value if "dirty value" is false
ok 4249 defaultValue should equal to set string
ok 4250 value attribute should equal to set string
ok 4251 value should get changed by setter
ok 4252 defaultValue should equal to set string
ok 4253 value attribute should not change
ok 4254 value should not change by setting defaultValue is dirtyValue is set
ok 4255 defaultValue should equal to set string
ok 4256 setting value to null should result in an empty string
ok 4257 value attribute should not change
# html input should handle checked/defaultChecked correctly
ok 4258 checkedness is false by default
ok 4259 checked property must return the current checkedness
ok 4260 dirty checkedness is still false, the checkedness should have been changed
ok 4261 on setting, the checked property must set the element's checkedness to the new value
ok 4262 checkedness should not have been changed because dirty checkedness is now true
# uncheck other radio buttons in the same group
ok 4263 Setting checked on a radio should uncheck others in the same group
ok 4264 Last radio to be set should be checked
ok 4265 Radio"s should not affect the checkedness of checkboxes
ok 4266 Just checked this
ok 4267 Just checked this
ok 4268 Changing the form owner should uncheck others
ok 4269 Just checked this
ok 4270 Just checked this
ok 4271 Changing the name should uncheck others
ok 4272 Changing the name not uncheck itself
ok 4273 Just checked this
ok 4274 Changing the type should uncheck others
ok 4275 Changing the name not uncheck itself
# inputs should default to type text on the property, despite having no attribute
ok 4276 (unnamed assert)
ok 4277 (unnamed assert)
ok 4278 (unnamed assert)
# setting an input's type property should set its type attribute
ok 4279 (unnamed assert)
# an input's parsed type attribute should be reflected in both its property and attribute
ok 4280 (unnamed assert)
ok 4281 (unnamed assert)
# html option should handle selected/defaultSelected correctly
ok 4282 selectedness is false by default
ok 4283 selected property must return the current selectedness
ok 4284 dirtiness is still false, the selectedness should have been changed
ok 4285 on setting, the selected property must set the element's selectedness to the new value
ok 4286 selectedness should not have been changed because dirtiness is now true
# html option should ask-for-a-reset correctly
ok 4287 If 0 options are selected in an ask-for-a-reset, select the first option
ok 4288 If 0 options are selected in an ask-for-a-reset, select the first option
ok 4289 If 0 options are selected in an ask-for-a-reset, select the first option
ok 4290 Setting defaultSelected should reset others
ok 4291 Setting defaultSelected should reset others
ok 4292 Setting defaultSelected should reset others
ok 4293 Setting defaultSelected should reset others without setting dirtyness
ok 4294 Setting defaultSelected should reset others without setting dirtyness
ok 4295 Setting defaultSelected should reset others without setting dirtyness
ok 4296 If 0 options are selected in an ask-for-a-reset, select the first non disabled option
ok 4297 If 0 options are selected in an ask-for-a-reset, select the first non disabled option
ok 4298 If 0 options are selected in an ask-for-a-reset, select the first non disabled option
ok 4299 options in a distached optgroup should not affect each other
ok 4300 options in a distached optgroup should not affect each other
ok 4301 options in a distached optgroup should not affect each other
ok 4302 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4303 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4304 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4305 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4306 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4307 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4308 If 0 options are selected in an ask-for-a-reset, select the first option
ok 4309 If 0 options are selected in an ask-for-a-reset, select the first option
ok 4310 If 0 options are selected in an ask-for-a-reset, select the first option
ok 4311 setting disabled on an selected option should not change the selection
ok 4312 setting disabled on an selected option should not change the selection
ok 4313 setting disabled on an selected option should not change the selection
ok 4314 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4315 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4316 If 2 or more options are selected in an ask-for-a-reset, select the last option
ok 4317 If 0 options are selected in an ask-for-a-reset, select the first non disabled option
ok 4318 If 0 options are selected in an ask-for-a-reset, select the first non disabled option
ok 4319 If 0 options are selected in an ask-for-a-reset, select the first non disabled option
# html textarea should handle value correctly
ok 4320 defaultValue is empty string when it has no content
ok 4321 value is empty string when it has no content
ok 4322 the defaultValue should reflect the textContent
ok 4323 changing the textContent should change the raw value, and subsequently the api value
ok 4324 the defaultValue should reflect the textContent
ok 4325 changing the textContent should change the raw value, and subsequently the api value
ok 4326 the defaultValue should reflect the textContent
ok 4327 The value property should normalize CRLF and CR to LF
ok 4328 setting the value property should not affect the defaultValue
ok 4329 setting the value property should not affect the textContent
ok 4330 on setting, the value property must set the element's raw & api value to the new value
ok 4331 The API value should normalize CRLF and CR to LF
ok 4332 setting the value property to null should result in an empty string
# html form should implement the reset() method
ok 4333 input should reset value to default
ok 4334 input should reset checkedness to default
ok 4335 second option should reset selectedness to default
ok 4336 second option should reset selectedness to default
ok 4337 textarea should reset api value to default
ok 4338 input should reset dirty value to false
ok 4339 input should reset dirty checkedness to false
ok 4340 option should reset dirtyness to false
ok 4341 option should reset dirtyness to false
ok 4342 textarea should reset dirty value to false
# inline event handlers have the correct global scope
ok 4343 (unnamed assert)
# inline error event handlers have the correct global scope
ok 4344 (unnamed assert)
# inline event handlers have their return values reflected in the corresponding property
ok 4345 (unnamed assert)
# inline event handlers have access to an event argument
ok 4346 (unnamed assert)
# inline error event handlers have access to a lot of arguments
ok 4347 (unnamed assert)
ok 4348 (unnamed assert)
ok 4349 (unnamed assert)
ok 4350 (unnamed assert)
ok 4351 (unnamed assert)
# inline event handlers set via properties have access to an event argument
ok 4352 (unnamed assert)
# inline error event handlers set via properties have access to lots of arguments
ok 4353 (unnamed assert)
ok 4354 (unnamed assert)
ok 4355 (unnamed assert)
ok 4356 (unnamed assert)
ok 4357 (unnamed assert)
# returning false from a click inline event handler cancels the event
ok 4358 (unnamed assert)
ok 4359 (unnamed assert)
# returning false from a click inline event handler property cancels the event
ok 4360 (unnamed assert)
ok 4361 (unnamed assert)
# returning true from a click inline event handler does nothing to the event
ok 4362 (unnamed assert)
ok 4363 (unnamed assert)
# returning true from a click inline event handler property does nothing to the event
ok 4364 (unnamed assert)
ok 4365 (unnamed assert)
# returning false from a mouseover inline event handler does nothing to the event
ok 4366 (unnamed assert)
ok 4367 (unnamed assert)
# returning false from a mouseover inline event handler property does nothing to the event
ok 4368 (unnamed assert)
ok 4369 (unnamed assert)
# returning true from a mouseover inline event handler cancels the event
ok 4370 (unnamed assert)
ok 4371 (unnamed assert)
# returning true from a mouseover inline event handler property cancels the event
ok 4372 (unnamed assert)
ok 4373 (unnamed assert)
# returning false from an error inline event handler does nothing to the event
ok 4374 (unnamed assert)
ok 4375 (unnamed assert)
# returning false from an error inline event handler property does nothing to the event
ok 4376 (unnamed assert)
ok 4377 (unnamed assert)
# returning true from an error inline event handler cancels the event
ok 4378 (unnamed assert)
ok 4379 (unnamed assert)
# returning true from an error inline event handler property cancels the event
ok 4380 (unnamed assert)
ok 4381 (unnamed assert)
# proxied body/window event handlers: setting on body as properties reflects on window
ok 4382 onblur should be set on the body correctly
ok 4383 onblur should be set on the window correctly
ok 4384 onblur should be unset on the body correctly
ok 4385 onblur should be unset on the window correctly
ok 4386 onerror should be set on the body correctly
ok 4387 onerror should be set on the window correctly
ok 4388 onerror should be unset on the body correctly
ok 4389 onerror should be unset on the window correctly
ok 4390 onfocus should be set on the body correctly
ok 4391 onfocus should be set on the window correctly
ok 4392 onfocus should be unset on the body correctly
ok 4393 onfocus should be unset on the window correctly
ok 4394 onload should be set on the body correctly
ok 4395 onload should be set on the window correctly
ok 4396 onload should be unset on the body correctly
ok 4397 onload should be unset on the window correctly
ok 4398 onresize should be set on the body correctly
ok 4399 onresize should be set on the window correctly
ok 4400 onresize should be unset on the body correctly
ok 4401 onresize should be unset on the window correctly
ok 4402 onscroll should be set on the body correctly
ok 4403 onscroll should be set on the window correctly
ok 4404 onscroll should be unset on the body correctly
ok 4405 onscroll should be unset on the window correctly
ok 4406 onafterprint should be set on the body correctly
ok 4407 onafterprint should be set on the window correctly
ok 4408 onafterprint should be unset on the body correctly
ok 4409 onafterprint should be unset on the window correctly
ok 4410 onbeforeprint should be set on the body correctly
ok 4411 onbeforeprint should be set on the window correctly
ok 4412 onbeforeprint should be unset on the body correctly
ok 4413 onbeforeprint should be unset on the window correctly
ok 4414 onbeforeunload should be set on the body correctly
ok 4415 onbeforeunload should be set on the window correctly
ok 4416 onbeforeunload should be unset on the body correctly
ok 4417 onbeforeunload should be unset on the window correctly
ok 4418 onhashchange should be set on the body correctly
ok 4419 onhashchange should be set on the window correctly
ok 4420 onhashchange should be unset on the body correctly
ok 4421 onhashchange should be unset on the window correctly
ok 4422 onlanguagechange should be set on the body correctly
ok 4423 onlanguagechange should be set on the window correctly
ok 4424 onlanguagechange should be unset on the body correctly
ok 4425 onlanguagechange should be unset on the window correctly
ok 4426 onmessage should be set on the body correctly
ok 4427 onmessage should be set on the window correctly
ok 4428 onmessage should be unset on the body correctly
ok 4429 onmessage should be unset on the window correctly
ok 4430 onoffline should be set on the body correctly
ok 4431 onoffline should be set on the window correctly
ok 4432 onoffline should be unset on the body correctly
ok 4433 onoffline should be unset on the window correctly
ok 4434 ononline should be set on the body correctly
ok 4435 ononline should be set on the window correctly
ok 4436 ononline should be unset on the body correctly
ok 4437 ononline should be unset on the window correctly
ok 4438 onpagehide should be set on the body correctly
ok 4439 onpagehide should be set on the window correctly
ok 4440 onpagehide should be unset on the body correctly
ok 4441 onpagehide should be unset on the window correctly
ok 4442 onpageshow should be set on the body correctly
ok 4443 onpageshow should be set on the window correctly
ok 4444 onpageshow should be unset on the body correctly
ok 4445 onpageshow should be unset on the window correctly
ok 4446 onpopstate should be set on the body correctly
ok 4447 onpopstate should be set on the window correctly
ok 4448 onpopstate should be unset on the body correctly
ok 4449 onpopstate should be unset on the window correctly
ok 4450 onstorage should be set on the body correctly
ok 4451 onstorage should be set on the window correctly
ok 4452 onstorage should be unset on the body correctly
ok 4453 onstorage should be unset on the window correctly
ok 4454 onunload should be set on the body correctly
ok 4455 onunload should be set on the window correctly
ok 4456 onunload should be unset on the body correctly
ok 4457 onunload should be unset on the window correctly
# proxied body/window event handlers: setting on body as attributes reflects on window
ok 4458 onblur should be set on the body correctly
ok 4459 onblur should be set on the window correctly
ok 4460 onblur should be unset on the body correctly
ok 4461 onblur should be unset on the window correctly
ok 4462 onerror should be set on the body correctly
ok 4463 onerror should be set on the window correctly
ok 4464 onerror should be unset on the body correctly
ok 4465 onerror should be unset on the window correctly
ok 4466 onfocus should be set on the body correctly
ok 4467 onfocus should be set on the window correctly
ok 4468 onfocus should be unset on the body correctly
ok 4469 onfocus should be unset on the window correctly
ok 4470 onload should be set on the body correctly
ok 4471 onload should be set on the window correctly
ok 4472 onload should be unset on the body correctly
ok 4473 onload should be unset on the window correctly
ok 4474 onresize should be set on the body correctly
ok 4475 onresize should be set on the window correctly
ok 4476 onresize should be unset on the body correctly
ok 4477 onresize should be unset on the window correctly
ok 4478 onscroll should be set on the body correctly
ok 4479 onscroll should be set on the window correctly
ok 4480 onscroll should be unset on the body correctly
ok 4481 onscroll should be unset on the window correctly
ok 4482 onafterprint should be set on the body correctly
ok 4483 onafterprint should be set on the window correctly
ok 4484 onafterprint should be unset on the body correctly
ok 4485 onafterprint should be unset on the window correctly
ok 4486 onbeforeprint should be set on the body correctly
ok 4487 onbeforeprint should be set on the window correctly
ok 4488 onbeforeprint should be unset on the body correctly
ok 4489 onbeforeprint should be unset on the window correctly
ok 4490 onbeforeunload should be set on the body correctly
ok 4491 onbeforeunload should be set on the window correctly
ok 4492 onbeforeunload should be unset on the body correctly
ok 4493 onbeforeunload should be unset on the window correctly
ok 4494 onhashchange should be set on the body correctly
ok 4495 onhashchange should be set on the window correctly
ok 4496 onhashchange should be unset on the body correctly
ok 4497 onhashchange should be unset on the window correctly
ok 4498 onlanguagechange should be set on the body correctly
ok 4499 onlanguagechange should be set on the window correctly
ok 4500 onlanguagechange should be unset on the body correctly
ok 4501 onlanguagechange should be unset on the window correctly
ok 4502 onmessage should be set on the body correctly
ok 4503 onmessage should be set on the window correctly
ok 4504 onmessage should be unset on the body correctly
ok 4505 onmessage should be unset on the window correctly
ok 4506 onoffline should be set on the body correctly
ok 4507 onoffline should be set on the window correctly
ok 4508 onoffline should be unset on the body correctly
ok 4509 onoffline should be unset on the window correctly
ok 4510 ononline should be set on the body correctly
ok 4511 ononline should be set on the window correctly
ok 4512 ononline should be unset on the body correctly
ok 4513 ononline should be unset on the window correctly
ok 4514 onpagehide should be set on the body correctly
ok 4515 onpagehide should be set on the window correctly
ok 4516 onpagehide should be unset on the body correctly
ok 4517 onpagehide should be unset on the window correctly
ok 4518 onpageshow should be set on the body correctly
ok 4519 onpageshow should be set on the window correctly
ok 4520 onpageshow should be unset on the body correctly
ok 4521 onpageshow should be unset on the window correctly
ok 4522 onpopstate should be set on the body correctly
ok 4523 onpopstate should be set on the window correctly
ok 4524 onpopstate should be unset on the body correctly
ok 4525 onpopstate should be unset on the window correctly
ok 4526 onstorage should be set on the body correctly
ok 4527 onstorage should be set on the window correctly
ok 4528 onstorage should be unset on the body correctly
ok 4529 onstorage should be unset on the window correctly
ok 4530 onunload should be set on the body correctly
ok 4531 onunload should be set on the window correctly
ok 4532 onunload should be unset on the body correctly
ok 4533 onunload should be unset on the window correctly
# window.location and document.location should be equal
ok 4534 (unnamed assert)
# window.location.href for a default window is about:blank
ok 4535 (unnamed assert)
# window.location.port for an about:blank window
ok 4536 (unnamed assert)
# window.location.hash is manipulable
ok 4537 (unnamed assert)
ok 4538 (unnamed assert)
ok 4539 (unnamed assert)
ok 4540 (unnamed assert)
# window.location.hash is manipulable even for about:blank (GH-1289)
ok 4541 (unnamed assert)
ok 4542 (unnamed assert)
ok 4543 (unnamed assert)
# when changing window.location.href by adding a hash, should fire a hashchange event
ok 4544 (unnamed assert)
ok 4545 (unnamed assert)
ok 4546 (unnamed assert)
ok 4547 (unnamed assert)
ok 4548 hashchange event was fired
# when changing window.location.hash directly, should fire a hashchange event
ok 4549 (unnamed assert)
ok 4550 (unnamed assert)
ok 4551 (unnamed assert)
ok 4552 (unnamed assert)
ok 4553 hashchange event was fired
# window.location components are correct
ok 4554 (unnamed assert)
ok 4555 (unnamed assert)
ok 4556 (unnamed assert)
ok 4557 (unnamed assert)
ok 4558 (unnamed assert)
ok 4559 (unnamed assert)
ok 4560 (unnamed assert)
ok 4561 (unnamed assert)
ok 4562 (unnamed assert)
# MessageEvent has a read-only property 'type'
ok 4563 (unnamed assert)
ok 4564 (unnamed assert)
# MessageEvent has a read-only property 'data'
ok 4565 (unnamed assert)
ok 4566 (unnamed assert)
# cookieEnabled should be true on the navigator object
ok 4567 cookie enabled
# navigator properties should be read-only from the site
ok 4568 (unnamed assert)
ok 4569 navigator.userAgent shouldn't be modifiable
ok 4570 navigator.platform shouldn't be modifiable
ok 4571 navigator.appName shouldn't be modifiable
ok 4572 navigator.appVersion shouldn't be modifiable
# onerror catches exceptions thrown in addEventListener event handlers
ok 4573 (unnamed assert)
ok 4574 Marked as TODO: filename equality
ok 4575 (unnamed assert)
ok 4576 (unnamed assert)
ok 4577 (unnamed assert)
# onerror property catches exceptions thrown in addEventListener event handlers
ok 4578 (unnamed assert)
ok 4579 Marked as TODO: filename equality
ok 4580 (unnamed assert)
ok 4581 (unnamed assert)
ok 4582 (unnamed assert)
# onerror catches exceptions thrown in addEventListener event handlers (multiline message)
ok 4583 Marked as TODO: filename equality
ok 4584 (unnamed assert)
ok 4585 (unnamed assert)
ok 4586 (unnamed assert)
# onerror catches exceptions thrown in inline event handlers
ok 4587 (unnamed assert)
ok 4588 (unnamed assert)
ok 4589 lineno set
ok 4590 colno set
ok 4591 (unnamed assert)
# onerror catches exceptions thrown in inline event handler properties
ok 4592 message equality
ok 4593 Marked as TODO: filename equality
ok 4594 lineno set
ok 4595 colno set
ok 4596 (unnamed assert)
# onerror catches exceptions thrown in sync script execution
ok 4597 message equality
ok 4598 (unnamed assert)
ok 4599 lineno set
ok 4600 colno set
ok 4601 (unnamed assert)
# onerror set during parsing catches exceptions thrown in sync script execution during parsing
ok 4602 message equality
ok 4603 (unnamed assert)
ok 4604 lineno set
ok 4605 colno set
ok 4606 (unnamed assert)
# unhandled Errors thrown in sync script excecution during parsing go to the virtual console
ok 4607 (unnamed assert)
not ok 4608 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/living-html/on-error.js
    line:    154
    column:  7
    stack:
      - |
        VirtualConsole.<anonymous> (/workdir/npm-module/test/living-html/on-error.js:154:7)
      - |
        VirtualConsole.emit (events.js:182:13)
      - |
        reportException (/workdir/npm-module/lib/jsdom/living/helpers/runtime-script-errors.js:59:28)
      - |
        processJavaScript (/workdir/npm-module/lib/jsdom/living/nodes/HTMLScriptElement-impl.js:73:7)
      - |
        HTMLScriptElementImpl._eval (/workdir/npm-module/lib/jsdom/living/nodes/HTMLScriptElement-impl.js:27:7)
      - |
        /workdir/npm-module/lib/jsdom/browser/resource-loader.js:25:22
      - |
        Object.check (/workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:83:11)
      - |
        /workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:101:12
      - |
        HTMLScriptElement.<anonymous> (/workdir/npm-module/lib/jsdom/living/nodes/HTMLScriptElement-impl.js:18:74)
      - |
        invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:208:25)
      - |
        HTMLScriptElementImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:133:9)
      - |
        HTMLScriptElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
      - |
        HTMLScriptElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)
      - |
        DocumentImpl.insertBefore (/workdir/npm-module/lib/jsdom/living/nodes/Node-impl.js:250:14)
      - |
        DocumentImpl.appendChild (/workdir/npm-module/lib/jsdom/living/nodes/Node-impl.js:380:17)
      - |
        DocumentImpl.appendChild (/workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:368:18)
      - |
        setChild (/workdir/npm-module/lib/jsdom/browser/htmltodom.js:266:18)
      - |
        HtmlToDom._parseWithparse5v1 (/workdir/npm-module/lib/jsdom/browser/htmltodom.js:90:7)
      - |
        HtmlToDom.appendHtmlToDocument (/workdir/npm-module/lib/jsdom/browser/htmltodom.js:47:48)
      - |
        setInnerHTML (/workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:52:27)
      - |
        DocumentImpl.write (/workdir/npm-module/lib/jsdom/living/nodes/Document-impl.js:421:7)
      - |
        Document.write (/workdir/npm-module/lib/jsdom/living/generated/Document.js:313:27)
      - |
        jsdom (/workdir/npm-module/lib/jsdom.js:116:21)
      - |
        Object.<anonymous> (/workdir/npm-module/test/living-html/on-error.js:159:3)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  true
    found:   false
  ...
ok 4609 (unnamed assert)
# unhandled non-Error exceptions thrown in sync script excecution during parsing go to the virtual console
ok 4610 (unnamed assert)
ok 4611 (unnamed assert)
ok 4612 (unnamed assert)
ok 4613 (unnamed assert)
# unhandled exceptions thrown in inline event handlers go to the virtual console
ok 4614 (unnamed assert)
not ok 4615 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/living-html/on-error.js
    line:    180
    column:  7
    stack:
      - |
        VirtualConsole.<anonymous> (/workdir/npm-module/test/living-html/on-error.js:180:7)
      - |
        VirtualConsole.emit (events.js:182:13)
      - |
        reportException (/workdir/npm-module/lib/jsdom/living/helpers/runtime-script-errors.js:59:28)
      - |
        invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:218:9)
      - |
        invokeInlineListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:171:7)
      - |
        HTMLBodyElementImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:129:7)
      - |
        HTMLBodyElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
      - |
        HTMLBodyElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)
      - |
        HTMLBodyElementImpl.click (/workdir/npm-module/lib/jsdom/living/nodes/HTMLElement-impl.js:56:10)
      - |
        HTMLBodyElement.click (/workdir/npm-module/lib/jsdom/living/generated/HTMLElement.js:33:27)
      - |
        Object.<anonymous> (/workdir/npm-module/test/living-html/on-error.js:187:12)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  |
      Uncaught [Error: oh no!]
    found:   |
      Uncaught Error: oh no!
          at HTMLBodyElement.<anonymous> (about:blank:3:25)
          at about:blank:4:20
          at ContextifyScript.runInContext (vm.js:101:20)
          at Object.runInContext (vm.js:279:18)
          at HTMLBodyElement.<anonymous> (/workdir/npm-module/lib/jsdom/living/nodes/Element-impl.js:185:25)
          at HTMLBodyElement.<anonymous> (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:243:32)
          at invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:208:25)
          at invokeInlineListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:171:7)
          at HTMLBodyElementImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:129:7)
          at HTMLBodyElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
    diff:    |
      FOUND:  Uncaught Error: oh no!\n    at HTMLBodyE
      WANTED: Uncaught [Error: oh no!]
                       ^ (at position = 9)
  ...
ok 4616 (unnamed assert)
# adding an onerror handler does not prevent errors from going to the virtual console
ok 4617 (unnamed assert)
not ok 4618 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/living-html/on-error.js
    line:    194
    column:  7
    stack:
      - |
        VirtualConsole.<anonymous> (/workdir/npm-module/test/living-html/on-error.js:194:7)
      - |
        VirtualConsole.emit (events.js:182:13)
      - |
        reportException (/workdir/npm-module/lib/jsdom/living/helpers/runtime-script-errors.js:59:28)
      - |
        invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:218:9)
      - |
        invokeInlineListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:171:7)
      - |
        HTMLBodyElementImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:129:7)
      - |
        HTMLBodyElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
      - |
        HTMLBodyElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)
      - |
        HTMLBodyElementImpl.click (/workdir/npm-module/lib/jsdom/living/nodes/HTMLElement-impl.js:56:10)
      - |
        HTMLBodyElement.click (/workdir/npm-module/lib/jsdom/living/generated/HTMLElement.js:33:27)
      - |
        Object.<anonymous> (/workdir/npm-module/test/living-html/on-error.js:203:12)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  |
      Uncaught [Error: oh no!]
    found:   |
      Uncaught Error: oh no!
          at HTMLBodyElement.<anonymous> (about:blank:3:25)
          at about:blank:4:20
          at ContextifyScript.runInContext (vm.js:101:20)
          at Object.runInContext (vm.js:279:18)
          at HTMLBodyElement.<anonymous> (/workdir/npm-module/lib/jsdom/living/nodes/Element-impl.js:185:25)
          at HTMLBodyElement.<anonymous> (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:243:32)
          at invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:208:25)
          at invokeInlineListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:171:7)
          at HTMLBodyElementImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:129:7)
          at HTMLBodyElementImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
    diff:    |
      FOUND:  Uncaught Error: oh no!\n    at HTMLBodyE
      WANTED: Uncaught [Error: oh no!]
                       ^ (at position = 9)
  ...
ok 4619 (unnamed assert)
# adding an onerror handler that returns true *does* prevent errors from going to the virtual console
# throws SyntaxError on invalid targetOrigin
ok 4620 an invalid targetOrigin throws a DOMException
ok 4621 a missing targetOrigin throws a TypeError
# postMessage from iframe to parent
ok 4622 (unnamed assert)
ok 4623 (unnamed assert)
# postMessage an object from iframe to parent
ok 4624 (unnamed assert)
ok 4625 (unnamed assert)
ok 4626 (unnamed assert)
# postMessage from parent to iframe
ok 4627 (unnamed assert)
ok 4628 (unnamed assert)
# postMessage from iframe to iframe
ok 4629 (unnamed assert)
ok 4630 (unnamed assert)
# postMessage silently rejects absolute URL targetOrigins
ok 4631 (unnamed assert)
# postMessage respects '/' targetOrigin option
# URL should exist and work in initialized Window
ok 4632 URL exists
ok 4633 (unnamed assert)
# Getting a file URL should work (from the same file URL)
ok 4634 (unnamed assert)
# Getting a file URL should have valid default response without setting responseType
ok 4635 (unnamed assert)
# Getting a file URL should not throw for getResponseHeader
ok 4636 (unnamed assert)
ok 4637 (unnamed assert)
# Getting a file URL should not throw for getAllResponseHeaders
ok 4638 (unnamed assert)
ok 4639 (unnamed assert)
# Getting a non-file URL should not fail for getAllResponseHeaders
not ok 4640 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/node_modules/nodeunit/lib/assert.js
    line:    320
    column:  5
    stack:
      - |
        /workdir/npm-module/test/misc/xhr-requires-server.js:32:9
      - |
        _throws (/workdir/npm-module/node_modules/nodeunit/lib/assert.js:320:5)
      - |
        doesNotThrow (/workdir/npm-module/node_modules/nodeunit/lib/assert.js:351:11)
      - |
        XMLHttpRequest.<anonymous> (/workdir/npm-module/test/misc/xhr-requires-server.js:31:7)
      - |
        XMLHttpRequest.<anonymous> (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:243:32)
      - |
        invokeEventListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:208:25)
      - |
        invokeInlineListeners (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:171:7)
      - |
        EventTargetImpl._dispatch (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:129:7)
      - |
        EventTargetImpl.dispatchEvent (/workdir/npm-module/lib/jsdom/living/events/EventTarget-impl.js:95:17)
      - |
        XMLHttpRequest.dispatchEvent (/workdir/npm-module/lib/jsdom/living/generated/EventTarget.js:71:35)
      - |
        Request.<anonymous> (/workdir/npm-module/lib/jsdom/living/xmlhttprequest.js:664:11)
      - |
        Request.emit (events.js:187:15)
      - |
        IncomingMessage.<anonymous> (/workdir/npm-module/node_modules/request/request.js:1083:12)
      - |
        Object.onceWrapper (events.js:273:13)
      - |
        IncomingMessage.emit (events.js:187:15)
      - |
        endReadableNT (_stream_readable.js:1085:12)
      - |
        process._tickCallback (internal/process/next_tick.js:63:19)
    wanted:  |
      date: 0
      Connection: keep-alive
      Transfer-Encoding: chunked
    found:   |
      Content-Type: text/html
      Cache-Control: no-cache
      Content-Length: 2727
      Proxy-Connection: Keep-Alive
    diff:    |
      FOUND:  Content-Type: text/html\r\nCache-Control
      WANTED: date: 0\r\nConnection: keep-alive\r\nTra
              ^ (at position = 0)
  ...
ok 4641 (unnamed assert)
# aborting env request should stop window creation
ok 4642 There should be an error
ok 4643 the window should not have been created
# closing window should close requests
ok 4644 There should be no errors
ok 4645 the external script should not execute
# closing window should close xhr
ok 4646 There should be no errors
# stopping window should close requests but error event should be triggered
ok 4647 There should be no errors
ok 4648 the external script should not execute
not ok 4649 Expected 4 assertions, 2 ran
  ---
    type:    Error
    message: Expected 4 assertions, 2 ran
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/node_modules/nodeunit/lib/types.js
    line:    121
    column:  25
    stack:
      - |
        Object.done (/workdir/npm-module/node_modules/nodeunit/lib/types.js:121:25)
      - |
        Timeout.<anonymous> (/workdir/npm-module/test/misc/cancel-requests.js:145:15)
      - |
        ontimeout (timers.js:424:11)
      - |
        tryOnTimeout (timers.js:288:5)
      - |
        listOnTimeout (timers.js:251:5)
      - |
        Timer.processTimers (timers.js:211:10)
    wanted:  ~
    found:   ~
  ...
# stopping window should close xhr but abort event should be triggered
ok 4650 There should be no errors
ok 4651 xhr should trigger change state (old)
ok 4652 xhr should trigger change state
ok 4653 xhr should trigger abort (old)
ok 4654 xhr should trigger abort
# a default window should have a history object with correct default values
ok 4655 (unnamed assert)
ok 4656 (unnamed assert)
ok 4657 (unnamed assert)
# the history object should update correctly when calling pushState/replaceState
ok 4658 (unnamed assert)
ok 4659 (unnamed assert)
ok 4660 (unnamed assert)
ok 4661 (unnamed assert)
ok 4662 (unnamed assert)
ok 4663 (unnamed assert)
ok 4664 (unnamed assert)
ok 4665 (unnamed assert)
ok 4666 (unnamed assert)
ok 4667 (unnamed assert)
ok 4668 (unnamed assert)
ok 4669 (unnamed assert)
ok 4670 (unnamed assert)
ok 4671 (unnamed assert)
ok 4672 (unnamed assert)
# the history object should update correctly when calling forward/back/go
ok 4673 (unnamed assert)
ok 4674 (unnamed assert)
ok 4675 (unnamed assert)
ok 4676 (unnamed assert)
ok 4677 (unnamed assert)
ok 4678 (unnamed assert)
ok 4679 (unnamed assert)
ok 4680 (unnamed assert)
ok 4681 (unnamed assert)
ok 4682 (unnamed assert)
ok 4683 (unnamed assert)
ok 4684 (unnamed assert)
ok 4685 (unnamed assert)
ok 4686 (unnamed assert)
ok 4687 (unnamed assert)
ok 4688 (unnamed assert)
ok 4689 (unnamed assert)
ok 4690 (unnamed assert)
ok 4691 (unnamed assert)
ok 4692 (unnamed assert)
ok 4693 (unnamed assert)
ok 4694 (unnamed assert)
ok 4695 (unnamed assert)
ok 4696 (unnamed assert)
ok 4697 (unnamed assert)
# the history object should update correctly when calling pushState with index behind length
ok 4698 (unnamed assert)
ok 4699 (unnamed assert)
ok 4700 (unnamed assert)
ok 4701 (unnamed assert)
ok 4702 (unnamed assert)
ok 4703 (unnamed assert)
ok 4704 (unnamed assert)
ok 4705 (unnamed assert)
ok 4706 (unnamed assert)
# the history object should fire popstate on the window while navigating the history
ok 4707 (unnamed assert)
ok 4708 (unnamed assert)
ok 4709 (unnamed assert)
# tests - scripts_share_a_global_context
ok 4710 local variables should be attached to the window
ok 4711 window should be the global context
ok 4712 window should be the global context
ok 4713 local vars should not leak out to the window
ok 4714 vars in a closure are safe
ok 4715 vars exposed to the window are global
ok 4716 setting this in the outer context should apply to the window
ok 4717 prototypes should be maintained across contexts
# tests - scripts_jquerify_have_jsdom_class
ok 4718 (unnamed assert)
# tests - scripts_env_have_jsdom_class
ok 4719 (unnamed assert)
# tests - global_is_window_in_scripts
ok 4720 window should equal global this
ok 4721 window should equal this.window
ok 4722 this should equal window.window
ok 4723 this should equal document.defaultView
ok 4724 outside window context, document.defaultView should be window as well
# tests - global_in_object_should_be_valid_in_other_scripts
ok 4725 (unnamed assert)
# tests - window_functions
ok 4726 (unnamed assert)
# tests - script_execution_in_body
ok 4727 (unnamed assert)
# tests - issue_163
ok 4728 no errors
ok 4729 window has the expected properties
# tests - issue_179
ok 4730 no errors
ok 4731 local var gets hung off of the window
ok 4732 read local var from window and exposed it
# tests - env_external_scripts_with_src
ok 4733 no errors should occur
ok 4734 given src wasn't executed
not ok 4735 external script wasn't executed
  ---
    type:
      found:  undefined
      wanted: undefined
    message: external script wasn't executed
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/window/script.js
    line:    156
    column:  16
    stack:
      - |
        Object.done (/workdir/npm-module/test/window/script.js:156:16)
      - |
        /workdir/npm-module/lib/jsdom.js:275:18
      - |
        process._tickCallback (internal/process/next_tick.js:61:11)
    wanted:  other
    found:   ~
  ...
# tests - env_external_scripts_no_src
ok 4736 no errors should occur
not ok 4737 external script wasn't executed
  ---
    type:
      found:  undefined
      wanted: undefined
    message: external script wasn't executed
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/window/script.js
    line:    178
    column:  16
    stack:
      - |
        Object.done (/workdir/npm-module/test/window/script.js:178:16)
      - |
        /workdir/npm-module/lib/jsdom.js:275:18
      - |
        process._tickCallback (internal/process/next_tick.js:61:11)
    wanted:  other
    found:   ~
  ...
# tests - timer_executes_in_context
ok 4738 (unnamed assert)
# console has all methods in spec
ok 4739 console has the assert method
ok 4740 console has the clear method
ok 4741 console has the count method
ok 4742 console has the debug method
ok 4743 console has the error method
ok 4744 console has the info method
ok 4745 console has the log method
ok 4746 console has the table method
ok 4747 console has the trace method
ok 4748 console has the warn method
ok 4749 console has the group method
ok 4750 console has the groupCollapse method
ok 4751 console has the groupEnd method
ok 4752 console has the time method
ok 4753 console has the timeEnd method
# tests - frame_parent
ok 4754 (unnamed assert)
ok 4755 (unnamed assert)
ok 4756 (unnamed assert)
# tests - frame_src_relative_to_parent_doc
ok 4757 (unnamed assert)
ok 4758 (unnamed assert)
# tests - test iframe element existence
ok 4759 (unnamed assert)
ok 4760 (unnamed assert)
ok 4761 (unnamed assert)
# tests - test iframe.contentDocument access
ok 4762 (unnamed assert)
ok 4763 (unnamed assert)
ok 4764 (unnamed assert)
ok 4765 (unnamed assert)
ok 4766 (unnamed assert)
# tests - test iframe load event
ok 4767 (unnamed assert)
# tests - iframe loads blank document when src unspecified
ok 4768 (unnamed assert)
ok 4769 (unnamed assert)
# tests - test iframe.contentWindow acccess
ok 4770 (unnamed assert)
ok 4771 (unnamed assert)
ok 4772 (unnamed assert)
ok 4773 (unnamed assert)
# tests - get iframe window via indexed frames access
ok 4774 (unnamed assert)
ok 4775 (unnamed assert)
ok 4776 (unnamed assert)
ok 4777 (unnamed assert)
ok 4778 (unnamed assert)
# tests - get iframe window via indexed frames access with setAttributeNode
ok 4779 (unnamed assert)
ok 4780 (unnamed assert)
ok 4781 (unnamed assert)
ok 4782 (unnamed assert)
ok 4783 (unnamed assert)
# tests - update named frames access on name change
ok 4784 (unnamed assert)
ok 4785 (unnamed assert)
ok 4786 (unnamed assert)
ok 4787 remove old named property
ok 4788 add new named property
# tests - test frames array identity
ok 4789 (unnamed assert)
# tests - test nested iframes
ok 4790 (unnamed assert)
ok 4791 (unnamed assert)
ok 4792 (unnamed assert)
ok 4793 (unnamed assert)
ok 4794 (unnamed assert)
ok 4795 (unnamed assert)
ok 4796 (unnamed assert)
ok 4797 (unnamed assert)
# tests - test multiple iframes
ok 4798 (unnamed assert)
ok 4799 (unnamed assert)
ok 4800 (unnamed assert)
ok 4801 (unnamed assert)
ok 4802 (unnamed assert)
ok 4803 (unnamed assert)
ok 4804 (unnamed assert)
ok 4805 (unnamed assert)
ok 4806 (unnamed assert)
# tests - test named lookup
ok 4807 (unnamed assert)
ok 4808 (unnamed assert)
ok 4809 (unnamed assert)
# tests - test iframe without src
ok 4810 (unnamed assert)
ok 4811 (unnamed assert)
# tests - test setting src multiple times
ok 4812 (unnamed assert)
# tests - test framesets
ok 4813 (unnamed assert)
ok 4814 (unnamed assert)
ok 4815 (unnamed assert)
ok 4816 (unnamed assert)
ok 4817 (unnamed assert)
ok 4818 (unnamed assert)
ok 4819 (unnamed assert)
ok 4820 (unnamed assert)
ok 4821 (unnamed assert)
ok 4822 (unnamed assert)
ok 4823 (unnamed assert)
ok 4824 (unnamed assert)
# tests - test frame references
ok 4825 frame should exist (.length)
ok 4826 frame should exist (undefined check)
ok 4827 index access and name access should return same reference
# tests - remove frame
ok 4828 frame should exist (.length)
ok 4829 frame should exist (undefined check)
ok 4830 frame shouldn't exist (.length)
ok 4831 frame shouldn't exist anymore (idx accessor)
ok 4832 frame shouldn't exist anymore (name accessor)
not ok 4833 '0' should not be in window anymore
  ---
    type:    AssertionError
    message: '0' should not be in window anymore
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/window/frame.js
    line:    416
    column:  10
    stack:
      - |
        Object.remove frame (/workdir/npm-module/test/window/frame.js:416:10)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  true
    found:   false
  ...
# tests - remove middle frame
ok 4834 frames should exist (.length)
ok 4835 frame1 should exist (undefined check)
ok 4836 frame2 should exist (undefined check)
ok 4837 frame3 should exist (undefined check)
ok 4838 frame shouldn't exist (.length)
ok 4839 frame shouldn't exist anymore (idx accessor)
ok 4840 frame shouldn't exist anymore (name accessor)
ok 4841 frame index accessor should be moved down
ok 4842 frame shouldn't exist (.length)
ok 4843 frame shouldn't exist anymore (idx accessor)
ok 4844 frame shouldn't exist anymore (name accessor)
ok 4845 frame index accessor should be moved down
# tests - accessor should not exist before append
ok 4846 no frames should exist yet
ok 4847 indexed access should fail
ok 4848 named access should fail
ok 4849 appended frame should increase window.length
ok 4850 indexed access should succeed
ok 4851 named access should succeed
ok 4852 named and indexed access should return same object
ok 4853 no frames should exist yet
ok 4854 indexed access should fail
ok 4855 named access should fail
ok 4856 appended frame should increase window.length
ok 4857 indexed access should succeed
ok 4858 named access should succeed
ok 4859 named and indexed access should return same object
# tests - move frame
ok 4860 should load 2 iframes
ok 4861 bar should be first frame
ok 4862 foo should be second frame
# tests - frame should not be loaded and accessor should not exist until in document, even with a parent node
ok 4863 window length should be zero (no frames)
ok 4864 window should not have a 0 property
ok 4865 window should not have a property for the iframe name
# window.btoa encodes a string to base64
ok 4866 (unnamed assert)
# btoa throws an InvalidCharacterError if any char's code point is above U+00FF
ok 4867 (unnamed assert)
ok 4868 (unnamed assert)
# window.atob decodes a base64 string
ok 4869 (unnamed assert)
# atob throws an InvalidCharacterError if any char's code point is above U+00FF
ok 4870 (unnamed assert)
ok 4871 (unnamed assert)
# element
ok 4872 Empty selector returns an empty array
ok 4873 Empty selector returns an empty array
ok 4874 Empty selector returns an empty array
ok 4875 Empty string passed to matchesSelector does not match
ok 4876 Select all
ok 4877 Select all elements, no comment nodes
ok 4878 Element Selector (html)
ok 4879 Element Selector (body)
ok 4880 Element Selector (#qunit-fixture p)
ok 4881 Leading space ( #qunit-fixture p)
ok 4882 Leading tab (	#qunit-fixture p)
ok 4883 Leading carriage return ( #qunit-fixture p)
ok 4884 Leading line feed ( #qunit-fixture p)
ok 4885 Leading form feed (#qunit-fixture p)
ok 4886 Trailing space (#qunit-fixture p )
ok 4887 Trailing tab (#qunit-fixture p	)
ok 4888 Trailing carriage return (#qunit-fixture p )
ok 4889 Trailing line feed (#qunit-fixture p )
ok 4890 Trailing form feed (#qunit-fixture p)
ok 4891 Parent Element (div p)
ok 4892 Parent Element (non-space descendant combinator) (div	p)
ok 4893 Object/param as context
ok 4894 Finding selects with a context.
ok 4895 Check for duplicates: p, div p
ok 4896 Checking sort order (h2, h1)
ok 4897 Checking sort order (h2:first, h1:first)
ok 4898 Checking sort order (#qunit-fixture p, #qunit-fixture p a)
ok 4899 Finding element with id of ID.
ok 4900 Finding element with id of ID.
ok 4901 Finding elements with id of ID.
ok 4902 Element-rooted QSA does not select based on document context
ok 4903 Element-rooted QSA does not select based on document context
ok 4904 Escaped commas do not get treated with an id in element-rooted QSA
ok 4905 Other document as context
ok 4906 No stack or performance problems with large amounts of descendents
ok 4907 No stack or performance problems with large amounts of descendents
ok 4908 Element name matches Object.prototype property (toString#toString)
# broken
ok 4909 Broken Selector: [
ok 4910 Broken Selector: (
ok 4911 Broken Selector: {
ok 4912 Broken Selector: <
ok 4913 Broken Selector: ()
ok 4914 Broken Selector: <>
ok 4915 Broken Selector: {}
ok 4916 Broken Selector: ,
ok 4917 Broken Selector: ,a
ok 4918 Broken Selector: a,
ok 4919 Broken Selector: [id=012345678901234567890123456789
ok 4920 Doesn't exist: :visble
ok 4921 Nth-child: :nth-child
ok 4922 Nth-child: :nth-child(2n+-0)
ok 4923 Nth-child: :nth-child(2+0)
ok 4924 Nth-child: :nth-child(- 1n)
ok 4925 Nth-child: :nth-child(-1 n)
ok 4926 First-child: :first-child(n)
ok 4927 Last-child: :last-child(n)
ok 4928 Only-child: :only-child(n)
ok 4929 Attribute not escaped: input[name=foo.baz]
ok 4930 Attribute not escaped: input[name=foo[baz]]
# id
ok 4931 ID Selector (#body)
ok 4932 ID Selector w/ Element (body#body)
ok 4933 ID Selector w/ Element (ul#first)
ok 4934 ID selector with existing ID descendant (#firstp #simon1)
ok 4935 ID selector with non-existant descendant (#firstp #foobar)
ok 4936 ID selector using UTF8 (#台北Táiběi)
ok 4937 Multiple ID selectors using UTF8 (#台北Táiběi, #台北)
ok 4938 Descendant ID selector using UTF8 (div #台北)
ok 4939 Child ID selector using UTF8 (form > #台北)
ok 4940 Escaped ID (#foo\:bar)
ok 4941 Escaped ID with descendent (#foo\:bar span:not(:input))
ok 4942 Escaped ID (#test\.foo\[5\]bar)
ok 4943 Descendant escaped ID (div #foo\:bar)
ok 4944 Descendant escaped ID (div #test\.foo\[5\]bar)
ok 4945 Child escaped ID (form > #foo\:bar)
ok 4946 Child escaped ID (form > #test\.foo\[5\]bar)
ok 4947 Escaped ID as context
ok 4948 ID Selector, child ID present (#form > #radio1)
ok 4949 ID Selector, not an ancestor ID (#form #first)
ok 4950 ID Selector, not a child ID (#form > #option1a)
ok 4951 All Children of ID (#foo > *)
ok 4952 All Children of ID with no children (#firstUL > *)
ok 4953 ID selector with same value for a name attribute
ok 4954 ID selector non-existing but name attribute on an A tag
ok 4955 ID Selector contains backslash (#backslash\\foo)
ok 4956 ID Selector on Form with an input that has a name of 'id' (#lengthtest)
ok 4957 ID selector with non-existant ancestor (#asdfasdf #foobar)
ok 4958 ID selector within the context of another element
ok 4959 Underscore ID (#types_all)
ok 4960 Dash ID (#fx-queue)
ok 4961 ID with weird characters in it (#name\+value)
# class
ok 4962 Class Selector (.blog)
ok 4963 Class Selector (.GROUPS)
ok 4964 Class Selector (.blog.link)
ok 4965 Class Selector w/ Element (a.blog)
ok 4966 Parent Class Selector (p .blog)
ok 4967 Class selector using UTF8 (.台北Táiběi)
ok 4968 Class selector using UTF8 (.台北Táiběi.台北)
ok 4969 Class selector using UTF8 (.台北Táiběi, .台北)
ok 4970 Descendant class selector using UTF8 (div .台北Táiběi)
ok 4971 Child class selector using UTF8 (form > .台北Táiběi)
ok 4972 Escaped Class (.foo\:bar)
ok 4973 Escaped Class (.test\.foo\[5\]bar)
ok 4974 Descendant escaped Class (div .foo\:bar)
ok 4975 Descendant escaped Class (div .test\.foo\[5\]bar)
ok 4976 Child escaped Class (form > .foo\:bar)
ok 4977 Child escaped Class (form > .test\.foo\[5\]bar)
ok 4978 Finding a second class.
ok 4979 Finding a modified class.
ok 4980 .null does not match an element with no class
ok 4981 .null does not match an element with no class
ok 4982 .null matches element with class 'null'
ok 4983 caching system respects DOM changes
ok 4984 testing class on document doesn't error
ok 4985 testing class on window doesn't error
ok 4986 Classes match Object.prototype properties
# name
ok 4987 Name selector (input[name=action])
ok 4988 Name selector with single quotes (input[name='action'])
ok 4989 Name selector with double quotes (input[name="action"])
ok 4990 Name selector non-input ([name=test])
ok 4991 Name selector non-input ([name=div])
ok 4992 Name selector non-input (*[name=iframe])
ok 4993 Name selector for grouped input (input[name='types[]'])
ok 4994 Name selector within the context of another element
ok 4995 Name selector for grouped form element within the context of another element
ok 4996 Make sure that rooted queries on forms (with possible expandos) work.
ok 4997 Make sure the right number of elements were inserted.
ok 4998 Make sure the right number of elements were inserted.
ok 4999 Find elements that have similar IDs
ok 5000 Find elements that have similar IDs
ok 5001 Find elements that have similar IDs (#tName2ID)
# multiple
ok 5002 Comma Support (h2, #qunit-fixture p)
ok 5003 Comma Support (h2 , #qunit-fixture p)
ok 5004 Comma Support (h2 , #qunit-fixture p)
ok 5005 Comma Support (h2,#qunit-fixture p)
ok 5006 Comma Support (h2,#qunit-fixture p )
ok 5007 Comma Support (h2	, #qunit-fixture p )
# child and adjacent
ok 5008 Child (p > a)
ok 5009 Child (p> a)
ok 5010 Child (p >a)
ok 5011 Child (p>a)
ok 5012 Child w/ Class (p > a.blog)
ok 5013 All Children (code > *)
ok 5014 All Grandchildren (p > * > *)
ok 5015 Adjacent (#qunit-fixture a + a)
ok 5016 Adjacent (#qunit-fixture a +a)
ok 5017 Adjacent (#qunit-fixture a+ a)
ok 5018 Adjacent (#qunit-fixture a+a)
ok 5019 Adjacent (p + p)
ok 5020 Adjacent (p#firstp + p)
ok 5021 Adjacent (p[lang=en] + p)
ok 5022 Adjacent (a.GROUPS + code + a)
ok 5023 Comma, Child, and Adjacent (#qunit-fixture a + a, code > a)
ok 5024 Element Preceded By (#qunit-fixture p ~ div)
ok 5025 Element Preceded By (#first ~ div)
ok 5026 Element Preceded By (#groups ~ a)
ok 5027 Element Preceded By (#length ~ input)
ok 5028 Element Preceded By (#siblingfirst ~ em)
ok 5029 Element Preceded By (multiple) (#siblingTest em ~ em ~ em ~ span)
ok 5030 Element Preceded By, Containing (#liveHandlerOrder ~ div em:contains('1'))
ok 5031 Element Preceded By with a context.
ok 5032 Element Directly Preceded By with a context.
ok 5033 Element Preceded By positional with a context.
ok 5034 Compound selector with context, beginning with sibling test.
ok 5035 Compound selector with context, containing sibling test.
ok 5036 Multiple combinators selects all levels (#siblingTest em *)
ok 5037 Multiple combinators selects all levels (#siblingTest > em *)
ok 5038 Multiple sibling combinators doesn't miss general siblings (#siblingTest > em:first-child + em ~ span)
ok 5039 Combinators are not skipped when mixing general and specific (#siblingTest > em:contains('x') + em ~ span)
ok 5040 Parent div for next test is found via ID (#8310)
ok 5041 Find by general sibling combinator (#8310)
ok 5042 Make sure the temporary id assigned by sizzle is cleared out (#8310)
ok 5043 Parent div for previous test is still found via ID (#8310)
ok 5044 Verify deep class selector (div.blah > p > a)
ok 5045 No element deep selector (div.foo > span > a)
ok 5046 Verify child context positional selector
ok 5047 Verify child context positional selector
ok 5048 Verify child context positional selector
ok 5049 Non-existant ancestors (.fototab > .thumbnails > a)
# attributes
ok 5050 Attribute Exists (#qunit-fixture a[title])
ok 5051 Attribute Exists (case-insensitive) (#qunit-fixture a[TITLE])
ok 5052 Attribute Exists (#qunit-fixture *[title])
ok 5053 Attribute Exists (#qunit-fixture [title])
ok 5054 Attribute Exists (#qunit-fixture a[ title ])
ok 5055 Boolean attribute exists (#select2 option[selected])
ok 5056 Boolean attribute equals (#select2 option[selected='selected'])
ok 5057 Attribute Equals (#qunit-fixture a[rel='bookmark'])
ok 5058 Attribute Equals (#qunit-fixture a[rel='bookmark'])
ok 5059 Attribute Equals (#qunit-fixture a[rel=bookmark])
ok 5060 Attribute Equals (#qunit-fixture a[href='http://www.google.com/'])
ok 5061 Attribute Equals (#qunit-fixture a[ rel = 'bookmark' ])
ok 5062 Attribute Equals Number (#qunit-fixture option[value=1])
ok 5063 Attribute Equals Number (#qunit-fixture li[tabIndex=-1])
ok 5064 href Attribute (p a[href^=#])
ok 5065 href Attribute (p a[href*=#])
ok 5066 for Attribute (form label[for])
ok 5067 for Attribute in form (#form [for=action])
ok 5068 Attribute containing [] (input[name^='foo['])
ok 5069 Attribute containing [] (input[name^='foo[bar]'])
ok 5070 Attribute containing [] (input[name*='[bar]'])
ok 5071 Attribute containing [] (input[name$='bar]'])
ok 5072 Attribute containing [] (input[name$='[bar]'])
ok 5073 Attribute containing [] (input[name$='foo[bar]'])
ok 5074 Attribute containing [] (input[name*='foo[bar]'])
ok 5075 Without context, single-quoted attribute containing ','
ok 5076 Without context, double-quoted attribute containing ','
ok 5077 With context, single-quoted attribute containing ','
ok 5078 With context, double-quoted attribute containing ','
ok 5079 Multiple Attribute Equals (#form input[type='radio'], #form input[type='hidden'])
ok 5080 Multiple Attribute Equals (#form input[type='radio'], #form input[type="hidden"])
ok 5081 Multiple Attribute Equals (#form input[type='radio'], #form input[type=hidden])
ok 5082 Attribute selector using UTF8 (span[lang=中文])
ok 5083 Attribute Begins With (a[href ^= 'http://www'])
ok 5084 Attribute Ends With (a[href $= 'org/'])
ok 5085 Attribute Contains (a[href *= 'google'])
ok 5086 Attribute Is Not Equal (#ap a[hreflang!='en'])
ok 5087 Attribute Is Not Equal Matches
ok 5088 Attribute With No Quotes Contains Matches
ok 5089 Attribute With No Quotes No Content Matches
ok 5090 Attribute with empty string value does not match startsWith selector (^=)
ok 5091 Attribute With No Quotes Equals Matches
ok 5092 Attribute With No Quotes Href Contains Matches
ok 5093 Empty values (#select1 option[value=''])
ok 5094 Empty values (#select1 option[value!=''])
ok 5095 Select options via :selected (#select1 option:selected)
ok 5096 Select options via :selected (#select2 option:selected)
ok 5097 Select options via :selected (#select3 option:selected)
ok 5098 Select options via :selected (select[name='select2'] option:selected)
ok 5099 Grouped Form Elements (input[name='foo[bar]'])
ok 5100 Quote within attribute value does not mess up tokenizer
ok 5101 POS within attribute value is treated as an attribute value
ok 5102 POS within attribute value is treated as an attribute value
ok 5103 POS within attribute value after pseudo is treated as an attribute value
ok 5104 Underscores are valid unquoted (input[id=types_all])
ok 5105 Find escaped attribute value (input[name=foo\.baz])
ok 5106 Find escaped attribute value (input[name=foo\[baz\]])
ok 5107 Find escaped attribute value (input[data-attr='foo_baz\']'])
ok 5108 input[type=text] (#form input[type=text])
ok 5109 input[type=search] (#form input[type=search])
ok 5110 Find escaped attribute value (#form input[name=foo\[bar\]])
ok 5111 Finding by attribute with escaped characters.
# pseudo - child
ok 5112 First Child (#qunit-fixture p:first-child)
ok 5113 First Child (case-insensitive) (#qunit-fixture p:FIRST-CHILD)
ok 5114 Last Child (p:last-child)
ok 5115 Only Child (#qunit-fixture a:only-child)
ok 5116 Empty (ul:empty)
ok 5117 Empty with comment node (ol:empty)
ok 5118 Is A Parent (#qunit-fixture p:parent)
ok 5119 First Child (p:first-child)
ok 5120 First Child (.nothiddendiv div:first-child)
ok 5121 Nth Child (p:nth-child(1))
ok 5122 Nth Child With Whitespace (p:nth-child( 1 ))
ok 5123 Not Nth Child (#qunit-fixture p:not(:nth-child(1)))
ok 5124 No longer First Child (p:nth-child(1))
ok 5125 Restored First Child (p:nth-child(1))
ok 5126 Last Child (p:last-child)
ok 5127 Last Child (#qunit-fixture a:last-child)
ok 5128 Nth-child (#qunit-fixture form#form > *:nth-child(2))
ok 5129 Nth-child (#qunit-fixture form#form > :nth-child(2))
ok 5130 Nth-child (#form select:first option:nth-child(-1))
ok 5131 Nth-child (#form select:first option:nth-child(3))
ok 5132 Nth-child(case-insensitive) (#form select:first option:NTH-child(3))
ok 5133 Nth-child (#form select:first option:nth-child(0n+3))
ok 5134 Nth-child (#form select:first option:nth-child(1n+0))
ok 5135 Nth-child (#form select:first option:nth-child(1n))
ok 5136 Nth-child (#form select:first option:nth-child(n))
ok 5137 Nth-child (#form select:first option:nth-child(even))
ok 5138 Nth-child (#form select:first option:nth-child(odd))
ok 5139 Nth-child (#form select:first option:nth-child(2n))
ok 5140 Nth-child (#form select:first option:nth-child(2n+1))
ok 5141 Nth-child (#form select:first option:nth-child(2n + 1))
ok 5142 Nth-child (#form select:first option:nth-child(+2n + 1))
ok 5143 Nth-child (#form select:first option:nth-child(3n))
ok 5144 Nth-child (#form select:first option:nth-child(3n+1))
ok 5145 Nth-child (#form select:first option:nth-child(3n+2))
ok 5146 Nth-child (#form select:first option:nth-child(3n+3))
ok 5147 Nth-child (#form select:first option:nth-child(3n-1))
ok 5148 Nth-child (#form select:first option:nth-child(3n-2))
ok 5149 Nth-child (#form select:first option:nth-child(3n-3))
ok 5150 Nth-child (#form select:first option:nth-child(3n+0))
ok 5151 Nth-child (#form select:first option:nth-child(-1n+3))
ok 5152 Nth-child (#form select:first option:nth-child(-n+3))
ok 5153 Nth-child (#form select:first option:nth-child(-1n + 3))
ok 5154 Seeded nth-child
# pseudo - misc
ok 5155 Headers (:header)
ok 5156 Headers(case-insensitive) (:Header)
ok 5157 Has Children - :has() (p:has(a))
ok 5158 Has Children - :has() (p:has( a ))
ok 5159 Multiple matches with the same context (cache check) (#form select:has(option:first-child:contains('o')))
ok 5160 All not grandparents
ok 5161 Has Option Matches
ok 5162 Text Contains (a:contains(Google))
ok 5163 Text Contains (a:contains(Google Groups))
ok 5164 Text Contains (a:contains('Google Groups (Link)'))
ok 5165 Text Contains (a:contains("(Link)"))
ok 5166 Text Contains (a:contains(Google Groups (Link)))
ok 5167 Text Contains (a:contains((Link)))
ok 5168 Input Buttons :button (#tmp_input :button)
ok 5169 Input Matches :button
ok 5170 Button Matches :button
ok 5171 Input Buttons :submit (#tmp_input :submit)
ok 5172 Input Matches :submit
ok 5173 Button Matches :submit
ok 5174 Input Buttons :reset (#tmp_input :reset)
ok 5175 Input Matches :reset
ok 5176 Button Matches :reset
ok 5177 The div was not focused. Skip checking the :focus match.
ok 5178 The div was not focused. Skip checking the :focus match.
ok 5179 :focus doesn't match tabIndex div
ok 5180 Element focused (input:focus)
ok 5181 :focus matches
ok 5182 :focus doesn't match
ok 5183 caching system tolerates recursive selection
ok 5184 Sequential pseudos (#qunit-fixture p:has(:contains(mark)):has(code))
ok 5185 Sequential pseudos (#qunit-fixture p:has(:contains(mark)):has(code):contains(This link))
ok 5186 Pseudo argument containing ')' (p:has(>a.GROUPS[src!=')']))
ok 5187 Pseudo argument containing ')' (p:has(>a.GROUPS[src!=')']))
ok 5188 Pseudo followed by token containing ')' (p:contains(id="foo")[id!=\)])
ok 5189 Pseudo followed by token containing ')' (p:contains(id="foo")[id!=')'])
ok 5190 Multi-pseudo (#ap:has(*), #ap:has(*))
ok 5191 Multi-positional (#ap:gt(0), #ap:lt(1))
ok 5192 Multi-pseudo with leading nonexistent id (#nonexistent:has(*), #ap:has(*))
ok 5193 Multi-positional with leading nonexistent id (#nonexistent:gt(0), #ap:lt(1))
ok 5194 Backwards-compatible custom pseudos (a:icontains(THIS BLOG ENTRY))
ok 5195 Backwards-compatible custom setFilters (#form :PODIUM)
ok 5196 Backwards-compatible custom setFilters with argument (#form input:Podium(1))
ok 5197 Tokenization stressor (a[class*=blog]:not(:has(*, :contains(!)), :contains(!)), br:contains(]), p:contains(]), :not(:empty):not(:parent))
# pseudo - :not
ok 5198 Not (a.blog:not(.link))
ok 5199 :not() with :first (#foo p:not(:first) .link)
ok 5200 Not - multiple (#form option:not(:contains(Nothing),#option1b,:selected))
ok 5201 Not - recursive (#form option:not(:not(:selected))[id^='option3'])
ok 5202 :not() failing interior (#qunit-fixture p:not(.foo))
ok 5203 :not() failing interior (#qunit-fixture p:not(div.foo))
ok 5204 :not() failing interior (#qunit-fixture p:not(p.foo))
ok 5205 :not() failing interior (#qunit-fixture p:not(#blargh))
ok 5206 :not() failing interior (#qunit-fixture p:not(div#blargh))
ok 5207 :not() failing interior (#qunit-fixture p:not(p#blargh))
ok 5208 :not Multiple (#qunit-fixture p:not(a))
ok 5209 :not Multiple (#qunit-fixture p:not( a ))
ok 5210 :not Multiple (#qunit-fixture p:not( p ))
ok 5211 :not Multiple (#qunit-fixture p:not(a, b))
ok 5212 :not Multiple (#qunit-fixture p:not(a, b, div))
ok 5213 :not Multiple (p:not(p))
ok 5214 :not Multiple (p:not(a,p))
ok 5215 :not Multiple (p:not(p,a))
ok 5216 :not Multiple (p:not(a,p,b))
ok 5217 :not Multiple (:input:not(:image,:input,:submit))
ok 5218 :not Multiple (#qunit-fixture p:not(:has(a), :nth-child(1)))
ok 5219 No element not selector (.container div:not(.excluded) div)
ok 5220 :not() Existing attribute (#form select:not([multiple]))
ok 5221 :not() Equals attribute (#form select:not([name=select1]))
ok 5222 :not() Equals quoted attribute (#form select:not([name='select1']))
ok 5223 :not() Multiple Class (#foo a:not(.blog))
ok 5224 :not() Multiple Class (#foo a:not(.link))
ok 5225 :not() Multiple Class (#foo a:not(.blog.link))
ok 5226 :not chaining (compound) (#qunit-fixture div[id]:not(:has(div, span)):not(:has(*)))
ok 5227 :not chaining (with attribute) (#qunit-fixture form[id]:not([action$='formaction']):not(:button))
ok 5228 :not chaining (colon in attribute) (#qunit-fixture form[id]:not([action='form:action']):not(:button))
ok 5229 :not chaining (colon in attribute and nested chaining) (#qunit-fixture form[id]:not([action='form:action']:button):not(:input))
ok 5230 :not chaining (#form select:not(.select1):contains(Nothing) > option:not(option))
ok 5231 positional :not() (#foo p:not(:last))
ok 5232 positional :not() prefix (#foo p:not(:last) a)
ok 5233 compound positional :not() (#foo p:not(:first, :last))
ok 5234 compound positional :not() (#foo p:not(:first, :even))
ok 5235 compound positional :not() (#foo p:not(:first, :odd))
ok 5236 reordered compound positional :not() (#foo p:not(:odd, :first))
ok 5237 positional :not() with pre-filter (#foo p:not([id]:first))
ok 5238 positional :not() with post-filter (#foo p:not(:first[id]))
ok 5239 positional :not() with pre-filter (#foo p:not([lang]:first))
ok 5240 positional :not() with post-filter (#foo p:not(:first[lang]))
# pseudo - position
ok 5241 First element (div:first)
ok 5242 First element(case-insensitive) (div:fiRst)
ok 5243 nth Element (#qunit-fixture p:nth(1))
ok 5244 First Element (#qunit-fixture p:first)
ok 5245 Last Element (p:last)
ok 5246 Even Elements (#qunit-fixture p:even)
ok 5247 Odd Elements (#qunit-fixture p:odd)
ok 5248 Position Equals (#qunit-fixture p:eq(1))
ok 5249 Position Equals (negative) (#qunit-fixture p:eq(-1))
ok 5250 Position Greater Than (#qunit-fixture p:gt(0))
ok 5251 Position Less Than (#qunit-fixture p:lt(3))
ok 5252 Check position filtering (div#nothiddendiv:eq(0))
ok 5253 Check position filtering (div#nothiddendiv:last)
ok 5254 Check position filtering (div#nothiddendiv:not(:gt(0)))
ok 5255 Check position filtering (#foo > :not(:first))
ok 5256 Check position filtering (#qunit-fixture select > :not(:gt(2)))
ok 5257 Check position filtering (#qunit-fixture select:lt(2) :not(:first))
ok 5258 Check position filtering (div.nothiddendiv:eq(0))
ok 5259 Check position filtering (div.nothiddendiv:last)
ok 5260 Check position filtering (div.nothiddendiv:not(:lt(0)))
ok 5261 Check element position (div div:eq(0))
ok 5262 Check element position (div div:eq(5))
ok 5263 Check element position (div div:eq(29))
ok 5264 Check element position (div div:first)
ok 5265 Check element position (div > div:first)
ok 5266 Check element position (#dl div:first div:first)
ok 5267 Check element position (#dl div:first > div:first)
ok 5268 Check element position (div#nothiddendiv:first > div:first)
ok 5269 Chained pseudo after a pos pseudo (#listWithTabIndex li:eq(0):contains(Rice))
ok 5270 Check sort order with POS and comma (#qunit-fixture em>em>em>em:first-child,div>em:first)
ok 5271 Isolated position (:last)
ok 5272 Seeded pos with trailing relative
ok 5273 Post-manipulation positional
ok 5274 Extend Sizzle's POS selectors to rename first to primary (div:primary)
# pseudo - form
ok 5275 Form element :input (#form :input)
ok 5276 Form element :radio (#form :radio)
ok 5277 Form element :checkbox (#form :checkbox)
ok 5278 Form element :text (#form :text)
ok 5279 Form element :radio:checked (#form :radio:checked)
ok 5280 Form element :checkbox:checked (#form :checkbox:checked)
ok 5281 Form element :radio:checked, :checkbox:checked (#form :radio:checked, #form :checkbox:checked)
ok 5282 Selected Option Element (#form option:selected)
ok 5283 Selected Option Element are also :checked (#form option:checked)
ok 5284 Hidden inputs should be treated as enabled. See QSA test. (#hidden1:enabled)
# caching
ok 5285 Reusing selector with new context
# query-memoization
ok 5286 #foo query should return 1 element
ok 5287 #foo query should return 0 elements after removal
ok 5288 Query should return 1 more element for matching attribute test
# <template> content document fragment (GH-942)
ok 5289 (unnamed assert)
ok 5290 (unnamed assert)
# unclosed <td> (GH-605)
ok 5291 (unnamed assert)
ok 5292 (unnamed assert)
ok 5293 (unnamed assert)
# multiline attributes (GH-585)
ok 5294 (unnamed assert)
ok 5295 (unnamed assert)
ok 5296 (unnamed assert)
ok 5297 (unnamed assert)
# innerHTML of <script type='text/html'> (GH-575)
ok 5298 (unnamed assert)
ok 5299 (unnamed assert)
# attributes containing '<' and '>' (GH-494)
ok 5300 (unnamed assert)
ok 5301 (unnamed assert)
ok 5302 (unnamed assert)
# empty attributes (GH-488)
ok 5303 (unnamed assert)
ok 5304 (unnamed assert)
# omitting optional closing tags (GH-482)
ok 5305 (unnamed assert)
ok 5306 (unnamed assert)
ok 5307 (unnamed assert)
ok 5308 (unnamed assert)
# crazy attribute names (GH-368)
ok 5309 (unnamed assert)
ok 5310 (unnamed assert)
ok 5311 (unnamed assert)
ok 5312 (unnamed assert)
# attribute named 'constructor' (GH-625)
ok 5313 (unnamed assert)
ok 5314 (unnamed assert)
ok 5315 (unnamed assert)
ok 5316 (unnamed assert)
# CDATA should parse as bogus comments (GH-618)
ok 5317 (unnamed assert)
ok 5318 (unnamed assert)
ok 5319 (unnamed assert)
ok 5320 (unnamed assert)
ok 5321 (unnamed assert)
# innerHTML behavior in <script> vs. <p> (GH-652)
ok 5322 (unnamed assert)
ok 5323 (unnamed assert)
# lower-cases tags in outerHTML and innerHTML
ok 5324 (unnamed assert)
ok 5325 (unnamed assert)
# HTML entities without ; (GH-821)
ok 5326 (unnamed assert)
# Added < and > near <script> tags (GH-826)
ok 5327 (unnamed assert)
# Chinese characters as a 'tag name' (GH-719)
ok 5328 (unnamed assert)
ok 5329 (unnamed assert)
# A single <html> tag (GH-827)
ok 5330 (unnamed assert)
# Missing <html> tags (GH-555)
ok 5331 (unnamed assert)
ok 5332 (unnamed assert)
# Missing <body> tag with script src (GH-389)
ok 5333 (unnamed assert)
# More missing <html> and <body> tag tests (GH-88)
ok 5334 (unnamed assert)
ok 5335 (unnamed assert)
ok 5336 (unnamed assert)
# .innerHTML with < character (GH-652)
ok 5337 (unnamed assert)
ok 5338 (unnamed assert)
ok 5339 (unnamed assert)
# whitespace after <!DOCTYPE> (GH-160)
ok 5340 (unnamed assert)
# pre tag with < and > characters (GH-755)
ok 5341 (unnamed assert)
# querySelector applied to document fragments (GH-523)
ok 5342 (unnamed assert)
# real-world page with < inside a text node (GH-800)
ok 5343 (unnamed assert)
ok 5344 (unnamed assert)
# void tags with innerHTML (GH-863)
ok 5345 paragraph should contain 3 children
# void tags set by innerHTML from createElement (GH-863/872)
ok 5346 (unnamed assert)
ok 5347 (unnamed assert)
ok 5348 (unnamed assert)
ok 5349 (unnamed assert)
# <template> with whitespace inside (GH-1004)
ok 5350 (unnamed assert)
# doctype parsing should work for simple cases (GH-1066)
ok 5351 (unnamed assert)
ok 5352 (unnamed assert)
ok 5353 (unnamed assert)
# completely empty <!DOCTYPE> (GH-1204)
ok 5354 (unnamed assert)
ok 5355 (unnamed assert)
ok 5356 (unnamed assert)
# incomplete SVG doctype (GH-259)
ok 5357 (unnamed assert)
ok 5358 (unnamed assert)
ok 5359 (unnamed assert)
# extra HTML after </html> (GH-319)
ok 5360 (unnamed assert)
ok 5361 (unnamed assert)
# <%= stuff %> inside <script> tags (GH-58)
ok 5362 (unnamed assert)
# xmlns doesn't cause empty prefix
ok 5363 (unnamed assert)
ok 5364 (unnamed assert)
# defineSetter defines a setter
ok 5365 (unnamed assert)
ok 5366 (unnamed assert)
# defineSetter replaces existing setters
ok 5367 (unnamed assert)
ok 5368 (unnamed assert)
# defineSetter does not remove existing getters
ok 5369 (unnamed assert)
ok 5370 (unnamed assert)
# defineGetter defines a getter
ok 5371 (unnamed assert)
ok 5372 (unnamed assert)
# defineGetter replaces existing getters
ok 5373 (unnamed assert)
ok 5374 (unnamed assert)
# defineGetter does not remove existing setters
ok 5375 (unnamed assert)
ok 5376 (unnamed assert)
# createFrom returns an object with the given [[Prototype]]
ok 5377 (unnamed assert)
# createFrom returns an object extended with the given properties
ok 5378 accessor descriptors should be deeply equal
ok 5379 foo descriptors should be deeply equal
ok 5380 frozen descriptors should be deeply equal
ok 5381 hidden descriptors should be deeply equal
# inheritFrom sets Subclass.prototype to an object w/ [[Prototype]] Superclass.prototype
ok 5382 (unnamed assert)
# inheritFrom sets Subclass.prototype.constructor to Subclass
ok 5383 (unnamed assert)
# inheritFrom extends Subclass.prototype with the given properties
ok 5384 accessor descriptors should be deeply equal
ok 5385 foo descriptors should be deeply equal
ok 5386 frozen descriptors should be deeply equal
ok 5387 hidden descriptors should be deeply equal
ok 5388 constructor descriptors should be deeply equal
# isValidTargetOrigin properly validates target origin
ok 5389 (unnamed assert)
ok 5390 (unnamed assert)
ok 5391 (unnamed assert)
ok 5392 (unnamed assert)
ok 5393 (unnamed assert)
ok 5394 (unnamed assert)
ok 5395 (unnamed assert)
ok 5396 (unnamed assert)
ok 5397 (unnamed assert)
ok 5398 (unnamed assert)
ok 5399 (unnamed assert)
# parseDataUrl should handle empty base64 data urls
ok 5400 (unnamed assert)
# should set namespaces in HTML documents created by jsdom.env()
ok 5401 (unnamed assert)
ok 5402 (unnamed assert)
ok 5403 (unnamed assert)
ok 5404 tag prefixes in html documents should always be null
ok 5405 localNames in html documents always equal the tag name
ok 5406 html elements should automatically be assigned the XHTML namespace
ok 5407 attributes should be retrievable by their full name
ok 5408 attribute prefixes should be detected
ok 5409 attribute localNames should be detected
ok 5410 xmlns: attributes should not automatically be assigned to the xmlns namespace
ok 5411 tag prefixes in html documents should always be null
ok 5412 localNames in html documents always equal the tag name
ok 5413 html elements should automatically be assigned the XHTML namespace
ok 5414 attributes should be retrievable by their full name
ok 5415 attribute prefixes should be detected
ok 5416 attribute localNames should be detected
ok 5417 it shouldn't be possible to create custom namespaces
# should set namespace-related properties in HTML documents created by innerHTML
ok 5418 (unnamed assert)
ok 5419 (unnamed assert)
ok 5420 (unnamed assert)
ok 5421 tag prefixes in html documents should always be null
ok 5422 localNames in html documents always equal the tag name
ok 5423 html elements should automatically be assigned the XHTML namespace
ok 5424 attributes should be retrievable by their full name
ok 5425 attribute prefixes should be detected
ok 5426 attribute localNames should be detected
ok 5427 xmlns: attributes should not automatically be assigned to the xmlns namespace
ok 5428 tag prefixes in html documents should always be null
ok 5429 localNames in html documents always equal the tag name
ok 5430 html elements should automatically be assigned the XHTML namespace
ok 5431 attributes should be retrievable by their full name
ok 5432 attribute prefixes should be detected
ok 5433 attribute localNames should be detected
ok 5434 it shouldn't be possible to create custom namespaces
# should set namespace-related properties in HTML-SVG documents created by jsdom.env()
ok 5435 (unnamed assert)
ok 5436 (unnamed assert)
ok 5437 (unnamed assert)
ok 5438 tag prefixes in html documents should always be null
ok 5439 localNames in html documents always equal the tag name
ok 5440 svg elements should automatically be assigned the SVG namespace
ok 5441 attributes should be retrievable by their full name
ok 5442 attribute prefixes should be detected
ok 5443 attribute localNames should be detected
ok 5444 xmlns: attributes should automatically be assigned to the xmlns namespace
ok 5445 tag prefixes in html documents should always be null
ok 5446 localNames in html documents always equal the tag name
ok 5447 svg elements should automatically be assigned the SVG namespace
ok 5448 attributes should be retrievable by their full name
ok 5449 attribute prefixes should be detected
ok 5450 attribute localNames should be detected
ok 5451 custom defined namespaces should be valid in child elements
# should set namespace-related properties in HTML-SVG documents created by innerHTML
ok 5452 (unnamed assert)
ok 5453 (unnamed assert)
ok 5454 (unnamed assert)
ok 5455 tag prefixes in html documents should always be null
ok 5456 localNames in html documents always equal the tag name
ok 5457 svg elements should automatically be assigned the SVG namespace
ok 5458 attributes should be retrievable by their full name
ok 5459 attribute prefixes should be detected
ok 5460 attribute localNames should be detected
ok 5461 xmlns: attributes should automatically be assigned to the xmlns namespace
ok 5462 tag prefixes in html documents should always be null
ok 5463 localNames in html documents always equal the tag name
ok 5464 svg elements should automatically be assigned the SVG namespace
ok 5465 attributes should be retrievable by their full name
ok 5466 attribute prefixes should be detected
ok 5467 attribute localNames should be detected
ok 5468 custom defined namespaces should be valid in child elements
# jsdom.getVirtualConsole returns an instance of EventEmitter
ok 5469 getVirtualConsole returns an instance of EventEmitter
# virtualConsole passes through any arguments
ok 5470 virtualConsole.on 'assert' passes through any arguments (1)
ok 5471 virtualConsole.on 'assert' passes through any arguments (2)
ok 5472 virtualConsole.on 'assert' passes through any arguments (3)
ok 5473 virtualConsole.on 'assert' passes through any arguments (4)
ok 5474 virtualConsole emits 'assert' event
ok 5475 virtualConsole.on 'clear' passes through any arguments (1)
ok 5476 virtualConsole.on 'clear' passes through any arguments (2)
ok 5477 virtualConsole.on 'clear' passes through any arguments (3)
ok 5478 virtualConsole.on 'clear' passes through any arguments (4)
ok 5479 virtualConsole emits 'clear' event
ok 5480 virtualConsole.on 'count' passes through any arguments (1)
ok 5481 virtualConsole.on 'count' passes through any arguments (2)
ok 5482 virtualConsole.on 'count' passes through any arguments (3)
ok 5483 virtualConsole.on 'count' passes through any arguments (4)
ok 5484 virtualConsole emits 'count' event
ok 5485 virtualConsole.on 'debug' passes through any arguments (1)
ok 5486 virtualConsole.on 'debug' passes through any arguments (2)
ok 5487 virtualConsole.on 'debug' passes through any arguments (3)
ok 5488 virtualConsole.on 'debug' passes through any arguments (4)
ok 5489 virtualConsole emits 'debug' event
ok 5490 virtualConsole.on 'error' passes through any arguments (1)
ok 5491 virtualConsole.on 'error' passes through any arguments (2)
ok 5492 virtualConsole.on 'error' passes through any arguments (3)
ok 5493 virtualConsole.on 'error' passes through any arguments (4)
ok 5494 virtualConsole emits 'error' event
ok 5495 virtualConsole.on 'group' passes through any arguments (1)
ok 5496 virtualConsole.on 'group' passes through any arguments (2)
ok 5497 virtualConsole.on 'group' passes through any arguments (3)
ok 5498 virtualConsole.on 'group' passes through any arguments (4)
ok 5499 virtualConsole emits 'group' event
ok 5500 virtualConsole.on 'groupCollapse' passes through any arguments (1)
ok 5501 virtualConsole.on 'groupCollapse' passes through any arguments (2)
ok 5502 virtualConsole.on 'groupCollapse' passes through any arguments (3)
ok 5503 virtualConsole.on 'groupCollapse' passes through any arguments (4)
ok 5504 virtualConsole emits 'groupCollapse' event
ok 5505 virtualConsole.on 'groupEnd' passes through any arguments (1)
ok 5506 virtualConsole.on 'groupEnd' passes through any arguments (2)
ok 5507 virtualConsole.on 'groupEnd' passes through any arguments (3)
ok 5508 virtualConsole.on 'groupEnd' passes through any arguments (4)
ok 5509 virtualConsole emits 'groupEnd' event
ok 5510 virtualConsole.on 'info' passes through any arguments (1)
ok 5511 virtualConsole.on 'info' passes through any arguments (2)
ok 5512 virtualConsole.on 'info' passes through any arguments (3)
ok 5513 virtualConsole.on 'info' passes through any arguments (4)
ok 5514 virtualConsole emits 'info' event
ok 5515 virtualConsole.on 'log' passes through any arguments (1)
ok 5516 virtualConsole.on 'log' passes through any arguments (2)
ok 5517 virtualConsole.on 'log' passes through any arguments (3)
ok 5518 virtualConsole.on 'log' passes through any arguments (4)
ok 5519 virtualConsole emits 'log' event
ok 5520 virtualConsole.on 'table' passes through any arguments (1)
ok 5521 virtualConsole.on 'table' passes through any arguments (2)
ok 5522 virtualConsole.on 'table' passes through any arguments (3)
ok 5523 virtualConsole.on 'table' passes through any arguments (4)
ok 5524 virtualConsole emits 'table' event
ok 5525 virtualConsole.on 'time' passes through any arguments (1)
ok 5526 virtualConsole.on 'time' passes through any arguments (2)
ok 5527 virtualConsole.on 'time' passes through any arguments (3)
ok 5528 virtualConsole.on 'time' passes through any arguments (4)
ok 5529 virtualConsole emits 'time' event
ok 5530 virtualConsole.on 'timeEnd' passes through any arguments (1)
ok 5531 virtualConsole.on 'timeEnd' passes through any arguments (2)
ok 5532 virtualConsole.on 'timeEnd' passes through any arguments (3)
ok 5533 virtualConsole.on 'timeEnd' passes through any arguments (4)
ok 5534 virtualConsole emits 'timeEnd' event
ok 5535 virtualConsole.on 'trace' passes through any arguments (1)
ok 5536 virtualConsole.on 'trace' passes through any arguments (2)
ok 5537 virtualConsole.on 'trace' passes through any arguments (3)
ok 5538 virtualConsole.on 'trace' passes through any arguments (4)
ok 5539 virtualConsole emits 'trace' event
ok 5540 virtualConsole.on 'warn' passes through any arguments (1)
ok 5541 virtualConsole.on 'warn' passes through any arguments (2)
ok 5542 virtualConsole.on 'warn' passes through any arguments (3)
ok 5543 virtualConsole.on 'warn' passes through any arguments (4)
ok 5544 virtualConsole emits 'warn' event
# virtualConsole separates output by window
ok 5545 should forward to window on which console was called
ok 5546 should not forward to window on which console was not called
# virtualConsole.sendTo proxies console methods
ok 5547 sendTo forwards arguments for assert
ok 5548 sendTo forwards arguments for clear
ok 5549 sendTo forwards arguments for count
ok 5550 sendTo forwards arguments for debug
ok 5551 sendTo forwards arguments for error
ok 5552 sendTo forwards arguments for group
ok 5553 sendTo forwards arguments for groupCollapse
ok 5554 sendTo forwards arguments for groupEnd
ok 5555 sendTo forwards arguments for info
ok 5556 sendTo forwards arguments for log
ok 5557 sendTo forwards arguments for table
ok 5558 sendTo forwards arguments for time
ok 5559 sendTo forwards arguments for timeEnd
ok 5560 sendTo forwards arguments for trace
ok 5561 sendTo forwards arguments for warn
# createVirtualConsole returns a new virtual console
ok 5562 createVirtualConsole returns an instance of EventEmitter
# jsdom.jsdom accepts a virtual console
ok 5563 getVirtualConsole returns the console given in options
ok 5564 supplied virtual console emits messages
# jsdom.env accepts a virtual console
ok 5565 (unnamed assert)
ok 5566 getVirtualConsole returns the console given in options
ok 5567 supplied virtual console emits messages
# virtualConsole option throws on bad input
ok 5568 (unnamed assert)
# virtualConsole logs messages from child windows
ok 5569 (unnamed assert)
# virtualConsole.sendTo returns its instance of virtualConsole
ok 5570 sendTo returns its instance of virtualConsole
# not implemented messages show up as jsdomErrors in the virtual console
ok 5571 (unnamed assert)
ok 5572 (unnamed assert)
# virtualConsole.sendTo forwards jsdomErrors to error by default
ok 5573 (unnamed assert)
ok 5574 (unnamed assert)
# virtualConsole.sendTo does not forward jsdomErrors when asked not to
# div:last-child > span[title] (GH-972)
ok 5575 (unnamed assert)
# div[title=''] (GH-1163)
ok 5576 (unnamed assert)
ok 5577 (unnamed assert)
# matches smoke test
ok 5578 p and first-p
ok 5579 doesn't match wrong selector
ok 5580 p and first-p
ok 5581 doesn't match wrong selector
ok 5582 p and second-p
ok 5583 doesn't match wrong selector
# querySelector smoke test
ok 5584 p and first-p
ok 5585 p and first-p
ok 5586 p and second-p
ok 5587 nonexistent becomes null
# querySelector smoke test on a document fragment
ok 5588 (unnamed assert)
ok 5589 p and first-p
ok 5590 p and first-p
ok 5591 p and second-p
ok 5592 nonexistent becomes null
# querySelectorAll smoke test
ok 5593 two results
ok 5594 p and first-p
ok 5595 p and second-p
ok 5596 two results
ok 5597 p and first-p
ok 5598 p and second-p
ok 5599 It should not return the base element
ok 5600 There are no div elements under div#main
ok 5601 two results
ok 5602 p and first-p
ok 5603 p and second-p
ok 5604 It should not return the base element that is orphaned
ok 5605 one result
ok 5606 newNode and first-p
ok 5607 It should not return elements that are not within the base element's subtrees
ok 5608 p and first-p
ok 5609 p and second-p
ok 5610 topNode.parentNode is null
ok 5611 p under div#next-child
ok 5612 child of div#next-child
# querySelectorAll smoke test on a document fragment
ok 5613 The body should now be empty
ok 5614 two results
ok 5615 p and first-p
ok 5616 p and second-p
ok 5617 two results
ok 5618 p and first-p
ok 5619 p and second-p
ok 5620 It should not return the base element
ok 5621 There are no div elements under div#main
ok 5622 two results
ok 5623 p and first-p
ok 5624 p and second-p
ok 5625 It should not return the base element that is orphaned
ok 5626 one result
ok 5627 newNode and first-p
ok 5628 It should not return elements that are not within the base element's subtrees
ok 5629 p and first-p
ok 5630 p and second-p
ok 5631 topNode.parentNode is null
ok 5632 id selector on fragment not null
ok 5633 p under div#next-child
ok 5634 child of div#next-child
ok 5635 all p
ok 5636 p and first-p
ok 5637 p and second-p
ok 5638 child of div#next-child
# invalid selector //MAIN MENU... (GH-1214)
ok 5639 (unnamed assert)
ok 5640 (unnamed assert)
ok 5641 (unnamed assert)
# style attribute should not appear when accessing style property (GH-1109)
ok 5642 style attribute should not appear before
ok 5643 style attribute should not appear after
# void elements should serialize correctly
ok 5644 (unnamed assert)
# the case of html/body, or their omission, should not effect serialization
ok 5645 (unnamed assert)
ok 5646 (unnamed assert)
ok 5647 (unnamed assert)
ok 5648 (unnamed assert)
ok 5649 (unnamed assert)
# outerHTML should not format the HTML (GH-371)
ok 5650 (unnamed assert)
# get() should return the tracker previously created by create()
ok 5651 (unnamed assert)
ok 5652 (unnamed assert)
# track() and untrack() should do nothing for empty names
# should define a getter which calls the resolver each time
ok 5653 (unnamed assert)
ok 5654 (unnamed assert)
ok 5655 (unnamed assert)
ok 5656 (unnamed assert)
ok 5657 (unnamed assert)
ok 5658 (unnamed assert)
ok 5659 (unnamed assert)
ok 5660 (unnamed assert)
ok 5661 (unnamed assert)
ok 5662 (unnamed assert)
ok 5663 (unnamed assert)
ok 5664 (unnamed assert)
ok 5665 (unnamed assert)
ok 5666 (unnamed assert)
ok 5667 (unnamed assert)
ok 5668 (unnamed assert)
# the resolver should receive a `values` argument that is 'live'
ok 5669 (unnamed assert)
ok 5670 (unnamed assert)
ok 5671 (unnamed assert)
ok 5672 (unnamed assert)
ok 5673 (unnamed assert)
# named properties should be enumerable
ok 5674 (unnamed assert)
# named properties should be configurable
ok 5675 (unnamed assert)
ok 5676 (unnamed assert)
# named properties should be settable
ok 5677 (unnamed assert)
# a named property should not override an existing property
ok 5678 (unnamed assert)
ok 5679 (unnamed assert)
# a named property should not override an existing property, even if undefined
ok 5680 (unnamed assert)
ok 5681 (unnamed assert)
ok 5682 (unnamed assert)
ok 5683 (unnamed assert)
ok 5684 (unnamed assert)
# a named property should not override properties from the prototype
ok 5685 (unnamed assert)
ok 5686 (unnamed assert)
# a named property should not override Object properties
ok 5687 __proto__ should not have been overridden
ok 5688 toString should not have been overridden
ok 5689 constructor should not have been overridden
ok 5690 hasOwnProperty should not have been overridden
ok 5691 isPrototypeOf should not have been overridden
# a named property that has been untracked should not be 'in' the object
ok 5692 descriptor should have been removed
# Can reconfigure top
ok 5693 top should be changed (from the outside)
ok 5694 top should be changed (from the inside)
# Passing no top option does nothing
ok 5695 top should stay the same
# jsdom.nodeLocation on an element
ok 5696 (unnamed assert)
# jsdom.nodeLocation on a text node
ok 5697 (unnamed assert)
# jsdom.nodeLocation on a void element
ok 5698 (unnamed assert)
# A named property should return an element as-is if its name attribute matches
ok 5699 (unnamed assert)
# A named property should not be set if the element is not reachable from the Document
ok 5700 (unnamed assert)
# A named property should be enumerable
ok 5701 (unnamed assert)
# A named property should returns any element for which the id attribute matches
ok 5702 (unnamed assert)
# A non element node in the document should not cause errors
ok 5703 (unnamed assert)
# Changing an attribute should update the named properties (id)
ok 5704 (unnamed assert)
ok 5705 (unnamed assert)
ok 5706 (unnamed assert)
# Changing an attribute should update the named properties (name)
ok 5707 (unnamed assert)
ok 5708 (unnamed assert)
ok 5709 (unnamed assert)
# An element with identical name and id attributes should occur in the value once, not twice
ok 5710 (unnamed assert)
ok 5711 (unnamed assert)
ok 5712 (unnamed assert)
ok 5713 (unnamed assert)
# Changing an attribute should not remove the named properties if a different attribute still matches (id)
ok 5714 (unnamed assert)
ok 5715 (unnamed assert)
# Changing an attribute should not remove the named properties if a different attribute still matches (name)
ok 5716 (unnamed assert)
ok 5717 (unnamed assert)
# Changing an attribute that is not id or name should not cause errors
ok 5718 (unnamed assert)
ok 5719 (unnamed assert)
# Removing an element should update the named properties
ok 5720 (unnamed assert)
ok 5721 (unnamed assert)
# Removing a non-element node should not cause errors
ok 5722 (unnamed assert)
ok 5723 (unnamed assert)
# A document without a Window should not cause errors
ok 5724 Test case prerequisite
ok 5725 (unnamed assert)
ok 5726 (unnamed assert)
ok 5727 (unnamed assert)
# A named property should return a HTMLCollection if there are multiple matches
ok 5728 (unnamed assert)
ok 5729 (unnamed assert)
ok 5730 (unnamed assert)
ok 5731 (unnamed assert)
ok 5732 (unnamed assert)
# A named property should not be set if a property already exists
ok 5733 (unnamed assert)
# A named property should not be set if a property already exists, even if undefined
ok 5734 (unnamed assert)
# If a property is occupied by a named property but then the user sets it, the user's value shadows it
not ok 5735 (unnamed assert)
  ---
    type:    AssertionError
    message: ~
    code:    ~
    errno:   ~
    file:    /workdir/npm-module/test/living-html/named-properties-window.js
    line:    291
    column:  5
    stack:
      - |
        Object.<anonymous> (/workdir/npm-module/test/living-html/named-properties-window.js:291:5)
      - |
        Object.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:236:16
      - |
        Object.runTest (/workdir/npm-module/node_modules/nodeunit/lib/core.js:70:9)
      - |
        /workdir/npm-module/node_modules/nodeunit/lib/core.js:118:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:513:13
      - |
        iterate (/workdir/npm-module/node_modules/nodeunit/deps/async.js:123:13)
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:134:25
      - |
        /workdir/npm-module/node_modules/nodeunit/deps/async.js:515:17
      - |
        Immediate.<anonymous> (/workdir/npm-module/node_modules/nodeunit/lib/types.js:146:17)
      - |
        runCallback (timers.js:693:18)
      - |
        tryOnImmediate (timers.js:664:5)
      - |
        process.processImmediate (timers.js:646:5)
    wanted:  true
    found:   false
  ...
# If a named property is shadowed by the user but then deleted, the named property value should return.
ok 5736 Marked as TODO: undefined
# Only elements with specific tag names may be returned if their name attribute matches
ok 5737 (unnamed assert)
ok 5738 (unnamed assert)
ok 5739 (unnamed assert)
ok 5740 (unnamed assert)
ok 5741 (unnamed assert)
ok 5742 (unnamed assert)
ok 5743 (unnamed assert)
ok 5744 (unnamed assert)
ok 5745 (unnamed assert)
ok 5746 (unnamed assert)
ok 5747 (unnamed assert)
ok 5748 (unnamed assert)
ok 5749 (unnamed assert)
ok 5750 (unnamed assert)
# Only elements with specific tag names may be returned if their name attribute matches (negative test)
ok 5751 (unnamed assert)
# Removing an element for which the name attribute is not tracked, should not cause errors upon removing it
ok 5752 (unnamed assert)
# A named property that matches any element that contains a nested browsing context, should return the WindowProxy of that context
ok 5753 test prerequisite
ok 5754 (unnamed assert)
# should not give CSS parsing errors upon encountering @-moz-document (GH-687)
ok 5755 (unnamed assert)
# tests - notfound_getelementsbyclassname
ok 5756 no results
# tests - basic_getelementsbyclassname
ok 5757 p and first-p
# tests - multiple_getelementsbyclassname
ok 5758 p and first-p
ok 5759 p and second
ok 5760 p and third
# tests - testclassnameworksasexpected
ok 5761 class attribute is same as className
ok 5762 className getter/setter
# tests - basic_getelementbyid
ok 5763 p and #theid
# tests - nonexistant_getelementbyid
ok 5764 p and #theid
# tests - remove_nonexistantattribute
ok 5765 (unnamed assert)
# tests - render_singletag
ok 5766 end tag not included in output
# tests - render_specialchars
ok 5767 (unnamed assert)
# tests - parse_scripttags
ok 5768 original and processed
# tests - parse_styletags
ok 5769 original and processed
# tests - parse_doublespacetags
ok 5770 (unnamed assert)
# tests - serialize_styleattribute
ok 5771 (unnamed assert)
# tests - innerhtml_removeallchildren
ok 5772 still has children
# tests - innerhtml_null
ok 5773 still has children
# tests - serialize_html5_doctype
ok 5774 HTML 5 doctype did not serialize correctly
# tests - serialize_html4_strict_doctype
ok 5775 HTML 4 strict doctype did not serialize correctly
# tests - serialize_system_doctype
ok 5776 Doctype did not serialize correctly
# tests - serialize_doctype_containing_quotes
ok 5777 Doctype did not serialize correctly
# tests - parse_doctype_containing_newline
ok 5778 doctype should not be falsy
# tests - basic_nodelist_indexOf
ok 5779 indexOf 'span' in childNodes
# tests - nonexistant_nodelist_indexOf
ok 5780 indexOf 'div' in childNodes
# tests - input_fires_click_event
ok 5781 event type
ok 5782 event type
# tests - basic_radio_selected
ok 5783 radio not checked
ok 5784 radio checked
ok 5785 radio not checked
ok 5786 radio checked
ok 5787 radio not checked
ok 5788 radio checked
ok 5789 radio not checked
ok 5790 radio checked
ok 5791 radio checked
# tests - radio_no_click_deselected
ok 5792 radio checked
ok 5793 radio checked
# tests - select_set_value_updates_value
ok 5794 select element value
ok 5795 select element selectedIndex
# tests - select_set_value_updates_selectedIndex
ok 5796 select element selectedIndex
ok 5797 select element selectedIndex
# tests - select_set_value_updates_option_selected
ok 5798 option element selected
ok 5799 option element selected
# tests - select_set_selectedIndex_updates_value
ok 5800 select element selectedIndex
ok 5801 select element selectedIndex
# tests - select_set_selectedIndex_updates_selectedIndex
ok 5802 select element selectedIndex
ok 5803 select element selectedIndex
# tests - select_set_selectedIndex_updates_option_selected
ok 5804 option element selected
ok 5805 option element selected
ok 5806 option element selected
ok 5807 option element selected
# tests - select_set_option_selected_updates_value
ok 5808 select element value
ok 5809 select element value
# tests - select_set_option_selected_updates_selectedIndex
ok 5810 select element selectedIndex
ok 5811 select element selectedIndex
# tests - select_set_option_selected_updates_option_selected
ok 5812 option element selected
ok 5813 option element selected
ok 5814 option element selected
ok 5815 option element selected
# Setting outerHTML on the documentElement is not allowed
ok 5816 (unnamed assert)
# Setting outerHTML on an Element without a parent should have no effect
ok 5817 (unnamed assert)
# Setting outerHTML on an Element
ok 5818 (unnamed assert)
ok 5819 (unnamed assert)
# Setting outerHTML on <body>
ok 5820 (unnamed assert)
ok 5821 (unnamed assert)
# Setting outerHTML on an Element with a DocumentFragment as parent
ok 5822 (unnamed assert)
ok 5823 (unnamed assert)

1..5823
# tests 5823
# pass  5806
# fail  17
